{"version":3,"file":"butternut.es.js","sources":["../src/program/keys.js","../src/utils/sentinels.js","../src/program/Node.js","../src/program/types/shared/Array.js","../src/program/types/ArrowFunctionExpression.js","../src/utils/locate.js","../src/utils/getSnippet.js","../src/utils/CompileError.js","../src/program/types/AssignmentExpression.js","../src/utils/stringify.js","../src/program/types/BinaryExpression.js","../src/program/types/CallExpression.js","../src/program/types/CatchClause.js","../src/program/types/shared/minifyPropertyKey.js","../src/program/types/ClassBody.js","../src/program/types/shared/Class.js","../src/program/types/ClassDeclaration.js","../src/utils/reserved.js","../src/program/Scope.js","../src/program/types/ClassExpression.js","../src/program/types/ConditionalExpression.js","../src/program/types/DoWhileStatement.js","../src/program/types/ExpressionStatement.js","../src/program/types/shared/LoopStatement.js","../src/program/types/ForStatement.js","../src/program/types/shared/ForInOfStatement.js","../src/program/types/shared/Function.js","../src/program/types/FunctionDeclaration.js","../src/program/types/FunctionExpression.js","../src/utils/isReference.js","../src/program/types/Identifier.js","../src/program/types/IfStatement.js","../src/program/types/ImportDefaultSpecifier.js","../src/program/types/ImportSpecifier.js","../src/program/types/Literal.js","../src/program/types/LogicalExpression.js","../src/program/types/MemberExpression.js","../src/program/types/MethodDefinition.js","../src/program/types/NewExpression.js","../src/program/types/ObjectExpression.js","../src/program/types/ObjectPattern.js","../src/program/types/ParenthesizedExpression.js","../src/program/types/ReturnStatement.js","../src/program/types/SpreadElement.js","../src/program/types/SwitchCase.js","../src/program/types/SwitchStatement.js","../src/program/types/TemplateLiteral.js","../src/program/types/TryStatement.js","../src/program/types/UnaryExpression.js","../src/program/types/UpdateExpression.js","../src/program/extractNames.js","../src/program/types/VariableDeclaration.js","../src/program/types/VariableDeclarator.js","../src/program/types/WhileStatement.js","../src/program/types/YieldExpression.js","../src/program/types/index.js","../src/analysis/blockBreaksExecution.js","../src/analysis/breaksExecution.js","../src/program/BlockStatement.js","../src/program/wrap.js","../src/program/check.js","../src/program/Program.js","../src/utils/Stats.js","../src/index.js"],"sourcesContent":["export default {\n\tProgram: [ 'body' ],\n\tLiteral: []\n};\n","export const UNKNOWN = {};\nexport const TRUTHY = {};\nexport const FALSY = {};\n","import wrap from './wrap.js';\nimport keys from './keys.js';\nimport { UNKNOWN } from '../utils/sentinels.js';\n\nexport default class Node {\n\tconstructor ( raw, parent ) {\n\t\traw.parent = parent;\n\t\traw.program = parent.program || parent;\n\t\traw.depth = parent.depth + 1;\n\t\traw.keys = keys[ raw.type ];\n\t\traw.indentation = undefined;\n\n\t\tfor ( const key of keys[ raw.type ] ) {\n\t\t\twrap( raw[ key ], raw );\n\t\t}\n\n\t\traw.program.magicString.addSourcemapLocation( raw.start );\n\t\traw.program.magicString.addSourcemapLocation( raw.end );\n\t}\n\n\tancestor ( level ) {\n\t\tlet node = this;\n\t\twhile ( level-- ) {\n\t\t\tnode = node.parent;\n\t\t\tif ( !node ) return null;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tcontains ( node ) {\n\t\twhile ( node ) {\n\t\t\tif ( node === this ) return true;\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfindLexicalBoundary () {\n\t\treturn this.parent.findLexicalBoundary();\n\t}\n\n\tfindNearest ( type ) {\n\t\tif ( typeof type === 'string' ) type = new RegExp( `^${type}$` );\n\t\tif ( type.test( this.type ) ) return this;\n\t\treturn this.parent.findNearest( type );\n\t}\n\n\tfindScope ( functionScope ) {\n\t\treturn this.parent.findScope( functionScope );\n\t}\n\n\tgetIndentation () {\n\t\tconst lastLine = /\\n(.+)$/.exec( this.program.magicString.original.slice( 0, this.start ) );\n\t\treturn lastLine ? /^[ \\t]*/.exec( lastLine[1] )[0] : '';\n\t}\n\n\tgetLeftHandSide () {\n\t\treturn this;\n\t}\n\n\tgetPrecedence () {\n\t\treturn 0;\n\t}\n\n\tgetRightHandSide () {\n\t\treturn this;\n\t}\n\n\tgetValue () {\n\t\treturn UNKNOWN;\n\t}\n\n\tinitialise () {\n\t\tfor ( var key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( value ) {\n\t\t\t\tif ( 'length' in value ) {\n\t\t\t\t\tlet i = value.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( value[i] ) value[i].initialise();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue.initialise();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfindVarDeclarations ( varsToHoist ) {\n\t\tfor ( var key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( value ) {\n\t\t\t\tif ( 'length' in value ) {\n\t\t\t\t\tlet i = value.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( value[i] ) value[i].findVarDeclarations( varsToHoist );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue.findVarDeclarations( varsToHoist );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tminify ( code ) {\n\t\tfor ( var key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( value ) {\n\t\t\t\tif ( 'length' in value ) {\n\t\t\t\t\tlet i = value.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( value[i] ) value[i].minify( code );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue.minify( code );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpreventsCollapsedReturns ( returnStatements ) {\n\t\tif ( this.type === 'ExpressionStatement' ) return false;\n\t\tif ( this.type === 'ReturnStatement' ) return returnStatements.push( this ), false;\n\t\tif ( this.type === 'IfStatement' ) return !this.preventsCollapsedReturns( returnStatements );\n\t\treturn true;\n\t}\n\n\tsource () {\n\t\treturn this.program.magicString.original.slice( this.start, this.end );\n\t}\n\n\ttoString () {\n\t\treturn this.program.magicString.slice( this.start, this.end );\n\t}\n}\n","import Node from '../../Node.js';\nimport { UNKNOWN, TRUTHY, FALSY } from '../../../utils/sentinels.js';\n\nexport default class ArrayExpression extends Node {\n\tgetValue () {\n\t\tlet values = new Array( this.elements.length );\n\n\t\tfor ( let i = 0; i < this.elements.length; i += 1 ) {\n\t\t\tconst element = this.elements[i];\n\n\t\t\tif ( element ) {\n\t\t\t\tconst value = element.getValue();\n\t\t\t\tif ( value === UNKNOWN || value === TRUTHY || value === FALSY ) return TRUTHY;\n\n\t\t\t\tvalues[i] = value;\n\t\t\t}\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tminify ( code ) {\n\t\tlet c = this.start;\n\n\t\tif ( this.elements.length ) {\n\t\t\tlet insert = '[';\n\t\t\tthis.elements.forEach( ( element, i ) => {\n\t\t\t\tif ( !element ) {\n\t\t\t\t\tinsert += i === this.elements.length - 1 ? ',]' : ',';\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( element.start > c + 1 ) code.overwrite( c, element.start, insert );\n\t\t\t\tc = element.end;\n\n\t\t\t\tinsert = i === this.elements.length - 1 ? ']' : ',';\n\t\t\t});\n\n\t\t\tif ( this.end > insert.length ) code.overwrite( c, this.end, insert );\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.end > c + 2 ) code.overwrite( c, this.end, '[]' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ArrowFunctionExpression extends Node {\n\tfindScope () {\n\t\treturn this.body.scope;\n\t}\n\n\tinitialise () {\n\t\tthis.body.createScope( this.parent.findScope( false ) );\n\t\tsuper.initialise();\n\t}\n\n\tfindVarDeclarations () {\n\t\t// noop\n\t}\n\n\tminify ( code ) {\n\t\tlet c = this.start;\n\t\tif ( this.async ) c += 5;\n\n\t\tif ( this.params.length === 0 ) {\n\t\t\tif ( this.body.start > c + 4 ) {\n\t\t\t\tcode.overwrite( c, this.body.start, '()=>' );\n\t\t\t}\n\t\t}\n\n\t\telse if ( this.params.length === 1 ) {\n\t\t\tthis.params[0].minify( code );\n\n\t\t\tif ( this.params[0].type === 'Identifier' ) {\n\t\t\t\t// remove parens\n\t\t\t\tif ( this.async ) {\n\t\t\t\t\tcode.overwrite( c, this.params[0].start, ' ' );\n\t\t\t\t} else {\n\t\t\t\t\tcode.remove( c, this.params[0].start );\n\t\t\t\t}\n\n\t\t\t\tif ( this.body.start > this.params[0].end + 2 ) {\n\t\t\t\t\tcode.overwrite( this.params[0].end, this.body.start, '=>' );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( this.params[0].start > c + 1 ) {\n\t\t\t\t\tcode.remove( c + 1, this.params[0].start );\n\t\t\t\t}\n\n\t\t\t\tif ( this.body.start > this.params[0].end + 3 ) {\n\t\t\t\t\tcode.overwrite( this.params[0].end, this.body.start, ')=>' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tthis.params.forEach( ( param, i ) => {\n\t\t\t\tparam.minify( code );\n\t\t\t\tif ( param.start > c + 1 ) code.overwrite( c, param.start, i ? ',' : '(' );\n\t\t\t\tc = param.end;\n\t\t\t});\n\n\t\t\tif ( this.body.start > c + 3 ) {\n\t\t\t\tcode.overwrite( c, this.body.start, ')=>' );\n\t\t\t}\n\t\t}\n\n\t\tthis.body.minify( code );\n\t}\n}\n","export default function locate ( source, index ) {\n\tvar lines = source.split( '\\n' );\n\tvar len = lines.length;\n\n\tvar lineStart = 0;\n\tvar i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tvar line = lines[i];\n\t\tvar lineEnd =  lineStart + line.length + 1; // +1 for newline\n\n\t\tif ( lineEnd > index ) {\n\t\t\treturn { line: i + 1, column: index - lineStart, char: i };\n\t\t}\n\n\t\tlineStart = lineEnd;\n\t}\n\n\tthrow new Error( 'Could not determine location of character' );\n}\n","function pad ( num, len ) {\n\tlet result = String( num );\n\treturn result + repeat( ' ', len - result.length );\n}\n\nfunction repeat ( str, times ) {\n\tlet result = '';\n\twhile ( times-- ) result += str;\n\treturn result;\n}\n\nexport default function getSnippet ( source, loc, length = 1 ) {\n\tconst first = Math.max( loc.line - 5, 0 );\n\tconst last = loc.line;\n\n\tconst numDigits = String( last ).length;\n\n\tconst lines = source.split( '\\n' ).slice( first, last );\n\n\tconst lastLine = lines[ lines.length - 1 ];\n\tconst offset = lastLine.slice( 0, loc.column ).replace( /\\t/g, '  ' ).length;\n\n\tlet snippet = lines\n\t\t.map( ( line, i ) => `${pad( i + first + 1, numDigits )} : ${line.replace( /\\t/g, '  ')}` )\n\t\t.join( '\\n' );\n\n\tsnippet += '\\n' + repeat( ' ', numDigits + 3 + offset ) + repeat( '^', length );\n\n\treturn snippet;\n}\n","import locate from './locate.js';\nimport getSnippet from './getSnippet.js';\n\nexport default class CompileError extends Error {\n\tconstructor ( node, message ) {\n\t\tsuper();\n\n\t\tconst source = node.program.magicString.original;\n\t\tconst loc = locate( source, node.start );\n\n\t\tthis.name = 'CompileError';\n\t\tthis.message = message + ` (${loc.line}:${loc.column})`;\n\n\t\tthis.stack = new Error().stack.replace( new RegExp( `.+new ${this.name}.+\\\\n`, 'm' ), '' );\n\n\t\tthis.loc = loc;\n\t\tthis.snippet = getSnippet( source, loc, node.end - node.start );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nlet commutative = {};\n// we exclude + because it's not commutative when it's\n// operating on strings\nfor ( let operator of '*&^|' ) commutative[ operator ] = true;\n\nexport default class AssignmentExpression extends Node {\n\tgetLeftHandSide () {\n\t\treturn this.left.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\treturn 3;\n\t}\n\n\tinitialise () {\n\t\tif ( this.left.type === 'Identifier' ) {\n\t\t\tconst declaration = this.findScope( false ).findDeclaration( this.left.name );\n\t\t\tif ( declaration && declaration.kind === 'const' ) {\n\t\t\t\tthrow new CompileError( this.left, `${this.left.name} is read-only` );\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise();\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.right.start > this.left.end + this.operator.length ) {\n\t\t\tcode.overwrite( this.left.end, this.right.start, this.operator );\n\t\t}\n\n\t\t// special case – `a = a + 1` -> `a += 1`\n\t\tif ( this.operator === '=' && this.left.type === 'Identifier' && this.right.type === 'BinaryExpression' ) {\n\t\t\tif ( this.right.left.type === 'Identifier' && ( this.right.left.name === this.left.name ) ) {\n\t\t\t\tcode.appendLeft( this.left.end, this.right.operator );\n\t\t\t\tcode.remove( this.right.start, this.right.right.start );\n\n\t\t\t\tthis.right.right.minify( code );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// addition and multiplication\n\t\t\tif ( commutative[ this.right.operator ] && this.right.right.type === 'Identifier' && ( this.right.right.name === this.left.name ) ) {\n\t\t\t\tcode.appendLeft( this.left.end, this.right.operator );\n\t\t\t\tcode.remove( this.right.left.end, this.right.end );\n\n\t\t\t\tthis.right.left.minify( code );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","export default function stringify ( value ) {\n\tif ( typeof value === 'function' ) return null;\n\tif ( typeof value === 'object' ) return null;\n\n\tif ( value !== value ) return 'NaN';\n\tif ( value === true ) return '!0';\n\tif ( value === false ) return '!1';\n\tif ( value === undefined ) return 'void 0';\n\n\t// TODO if string, determine which quotes to use\n\t// TODO if number, determine whether to use e notation\n\n\tif ( isNegativeZero( value ) ) return '-0';\n\treturn JSON.stringify( value )\n\t\t.replace( /\\u2028/g, '\\\\u2028' )\n\t\t.replace( /\\u2029/g, '\\\\u2029' );\n}\n\nfunction isNegativeZero ( num ) {\n\treturn num === 0 && ( 1 / num < 0 );\n}","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nconst calculators = {\n\t'**' : ( a, b ) => Math.power( a, b ),\n\t'*'  : ( a, b ) => a * b,\n\t'/'  : ( a, b ) => a / b,\n\t'%'  : ( a, b ) => a % b,\n\t'+'  : ( a, b ) => a + b,\n\t'-'  : ( a, b ) => a - b,\n\t'<<' : ( a, b ) => a << b,\n\t'>>' : ( a, b ) => a >> b,\n\t'>>>': ( a, b ) => a >>> b,\n\t'<'  : ( a, b ) => a < b,\n\t'<=' : ( a, b ) => a <= b,\n\t'>'  : ( a, b ) => a > b,\n\t'>=' : ( a, b ) => a >= b,\n\t'==' : ( a, b ) => a == b,\n\t'!=' : ( a, b ) => a != b,\n\t'===': ( a, b ) => a === b,\n\t'!==': ( a, b ) => a !== b,\n\t'&'  : ( a, b ) => a & b,\n\t'^'  : ( a, b ) => a ^ b,\n\t'|'  : ( a, b ) => a | b,\n\tin   : ( a, b ) => a in b,\n\tinstanceof: ( a, b ) => a instanceof b\n};\n\nconst binaryExpressionPrecedence = {};\n[\n\t[  7, '|' ],\n\t[  8, '^' ],\n\t[  9, '&' ],\n\t[ 10, '!== === != ==' ],\n\t[ 11, 'instanceof in >= > <= <' ],\n\t[ 12, '>>> >> <<' ],\n\t[ 13, '- +' ],\n\t[ 14, '% / * **' ]\n].forEach( ([ precedence, operators ]) => {\n\toperators.split( ' ' ).forEach( operator => binaryExpressionPrecedence[ operator ] = precedence );\n});\n\nexport default class BinaryExpression extends Node {\n\tgetLeftHandSide () {\n\t\treturn this.left.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\tconst left = this.left.getValue();\n\t\tconst right = this.right.getValue();\n\n\t\tif ( left === UNKNOWN || right === UNKNOWN ) return binaryExpressionPrecedence[ this.operator ];\n\n\t\treturn 20; // will be replaced by a literal\n\t}\n\n\tgetValue () {\n\t\tconst left = this.left.getValue();\n\t\tconst right = this.right.getValue();\n\n\t\tif ( left === UNKNOWN || right === UNKNOWN ) return UNKNOWN;\n\n\t\treturn calculators[ this.operator ]( left, right );\n\t}\n\n\tminify ( code ) {\n\t\tconst value = this.getValue();\n\n\t\tif ( value !== UNKNOWN ) {\n\t\t\tcode.overwrite( this.start, this.end, stringify( value ) );\n\t\t}\n\n\t\telse {\n\t\t\tlet operator = this.operator;\n\n\t\t\tif ( code.original[ this.right.getLeftHandSide().start ] === operator ) {\n\t\t\t\t// prevent e.g. `1 - --t` becoming 1---t\n\t\t\t\toperator = `${operator} `;\n\t\t\t} else if ( /\\w/.test( this.operator ) ) {\n\t\t\t\t// `foo in bar`, not `fooinbar`\n\t\t\t\toperator = ` ${operator} `;\n\t\t\t}\n\n\t\t\tif ( this.right.start > this.left.end + operator.length ) {\n\t\t\t\tcode.overwrite( this.left.end, this.right.start, operator );\n\t\t\t}\n\n\t\t\tsuper.minify( code );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN, TRUTHY, FALSY } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nconst safeFunctions = [\n\tArray.prototype.concat,\n\n\tString.fromCharCode,\n\tString.fromCodePoint,\n\n\tString.prototype.charAt,\n\tString.prototype.charCodeAt,\n\tString.prototype.codePointAt,\n\tString.prototype.concat, // WARNING! https://github.com/jquery/jquery/pull/473\n\tString.prototype.endsWith,\n\tString.prototype.includes,\n\tString.prototype.indexOf,\n\tString.prototype.lastIndexOf,\n\tString.prototype.slice,\n\tString.prototype.startsWith,\n\tString.prototype.substr,\n\tString.prototype.substring,\n\tString.prototype.toLowerCase,\n\tString.prototype.toString,\n\tString.prototype.toUpperCase,\n\tString.prototype.trim,\n\tString.prototype.trimLeft,\n\tString.prototype.trimRight,\n\tString.prototype.valueOf\n\n\t// TODO others...\n];\n\nexport default class CallExpression extends Node {\n\tgetPrecedence () {\n\t\treturn 17;\n\t}\n\n\tgetValue () {\n\t\tconst calleeValue = this.callee.getValue();\n\n\t\tif ( typeof calleeValue !== 'function' ) return UNKNOWN;\n\t\tif ( !~safeFunctions.indexOf( calleeValue ) ) return UNKNOWN;\n\n\t\tlet contextValue = this.callee.type === 'MemberExpression' ?\n\t\t\tthis.callee.object.getValue() :\n\t\t\tnull;\n\n\t\tlet argumentValues = new Array( this.arguments.length );\n\t\tfor ( let i = 0; i < this.arguments.length; i += 1 ) {\n\t\t\tconst argument = this.arguments[i];\n\n\t\t\tif ( argument ) {\n\t\t\t\tconst value = argument.getValue();\n\t\t\t\tif ( value === UNKNOWN || value === TRUTHY || value === FALSY ) return UNKNOWN;\n\n\t\t\t\targumentValues[i] = value;\n\t\t\t}\n\t\t}\n\n\t\treturn calleeValue.apply( contextValue, argumentValues );\n\t}\n\n\tinitialise () {\n\t\tsuper.initialise();\n\t}\n\n\tminify ( code ) {\n\t\tconst value = this.getValue();\n\n\t\tif ( value !== UNKNOWN ) {\n\t\t\tconst str = stringify( value );\n\n\t\t\tif ( str !== null ) {\n\t\t\t\tcode.overwrite( this.start, this.end, str );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif ( this.arguments.length ) {\n\t\t\tlet lastNode = this.callee;\n\n\t\t\tfor ( let i = 0; i < this.arguments.length; i += 1 ) {\n\t\t\t\tconst argument = this.arguments[i];\n\n\t\t\t\tif ( argument.start > lastNode.end + 1 ) code.overwrite( lastNode.end, argument.start, i ? ',' : '(' );\n\t\t\t\tlastNode = argument;\n\t\t\t}\n\n\t\t\tif ( this.end > lastNode.end + 1 ) code.overwrite( lastNode.end, this.end, ')' );\n\t\t}\n\n\t\telse if ( this.end > this.callee.end + 2 ) {\n\t\t\tcode.overwrite( this.callee.end, this.end, '()' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class CatchClause extends Node {\n\tminify ( code ) {\n\t\tif ( this.param.start > this.start + 6 ) {\n\t\t\tcode.overwrite( this.start + 5, this.param.start, '(' );\n\t\t}\n\n\t\tif ( this.body.start > this.param.end + 1 ) {\n\t\t\tcode.overwrite( this.param.end, this.body.start, ')' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","export default function minifyPropertyKey ( code, property, isObject ) {\n\tif ( property.shorthand ) return;\n\n\tconst separator = ( isObject && !property.method ) ? ':' : '';\n\n\tif ( property.value.async || property.value.generator || property.computed ) {\n\t\tconst prefix = ( property.value.async ? ( property.computed ? 'async' : 'async ' ) : property.value.generator ? '*' : '' ) + ( property.computed ? '[' : '' );\n\t\tif ( property.key.start - property.start > prefix.length ) code.overwrite( property.start, property.key.start, prefix );\n\n\t\tconst suffix = ( property.computed ? ']' : '' ) + separator;\n\t\tif ( property.value.start - property.key.end > suffix.length ) code.overwrite( property.key.end, property.value.start, suffix );\n\t}\n\n\telse if ( separator ) {\n\t\tif ( property.value.start - property.key.end > 1 ) code.overwrite( property.key.end, property.value.start, separator );\n\t}\n\n\telse {\n\t\tcode.remove( property.key.end, property.value.start );\n\t}\n}","import Node from '../Node.js';\nimport minifyPropertyKey from './shared/minifyPropertyKey.js';\n\nexport default class ClassBody extends Node {\n\tminify ( code ) {\n\t\tlet c = this.start + 1;\n\n\t\tfor ( let i = 0; i < this.body.length; i += 1 ) {\n\t\t\tconst method = this.body[i];\n\t\t\tif ( method.start > c ) code.remove( c, method.start );\n\n\t\t\tminifyPropertyKey( code, method, false );\n\n\t\t\tc = method.end;\n\t\t}\n\n\t\tif ( this.end > c + 1 ) code.remove( c, this.end - 1 );\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../../Node.js';\n\nexport default class Class extends Node {\n\tminify ( code ) {\n\t\tlet c = this.superClass ? this.superClass.end : this.id ? this.id.end : this.start + 6;\n\n\t\tif ( this.id ) {\n\t\t\tif ( this.id.start > this.start + 6 ) {\n\t\t\t\tcode.remove( this.start + 6, this.id.start );\n\t\t\t}\n\n\t\t\tif ( this.superClass ) {\n\t\t\t\tif ( this.superClass.start > this.id.end + 9 ) {\n\t\t\t\t\tcode.overwrite( this.id.end, this.superClass.start, ' extends ' );\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( this.superClass ) {\n\t\t\tif ( this.superClass.start > this.start + 14 ) {\n\t\t\t\tcode.overwrite( this.start + 6, this.superClass.start, 'extends ' );\n\t\t\t}\n\t\t}\n\n\t\tif ( this.body.start > c ) code.remove( c, this.body.start );\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Class from './shared/Class.js';\n\nexport default class ClassDeclaration extends Class {\n\tactivate () {\n\t\tthis.skip = false;\n\t\tsuper.initialise();\n\t}\n\n\tinitialise () {\n\t\tthis.skip = true;\n\t\tthis.id.declaration = this;\n\n\t\tthis.name = this.id.name; // TODO what is this used for?\n\t\tthis.findScope( true ).addDeclaration( this.id, 'class' );\n\t}\n}\n","let reserved = Object.create( null );\n'do if in for let new try var case else enum eval null this true void with await break catch class const false super throw while yield delete export import public return static switch typeof default extends finally package private continue debugger function arguments interface protected implements instanceof'.split( ' ' )\n\t.forEach( word => reserved[ word ] = true );\n\nexport default reserved;\n","import reserved from '../utils/reserved.js';\nimport CompileError from '../utils/CompileError.js';\n\nconst letConst = /^(?:let|const)$/;\n\nconst validChars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$';\n\nexport default function Scope ( options ) {\n\toptions = options || {};\n\n\tthis.parent = options.parent;\n\tthis.owner = options.owner;\n\tthis.isBlockScope = !!options.block;\n\n\tlet scope = this;\n\twhile ( scope.isBlockScope ) scope = scope.parent;\n\tthis.functionScope = scope;\n\n\tthis.identifiers = [];\n\tthis.declarations = Object.create( null );\n\tthis.references = Object.create( null );\n\tthis.blockScopedDeclarations = this.isBlockScope ? null : Object.create( null );\n\tthis.aliases = Object.create( null );\n\n\tthis.idCounter = [ 0 ];\n}\n\nScope.prototype = {\n\taddAlias ( alias ) {\n\t\tthis.aliases[ alias ] = true;\n\t\tif ( this.parent ) this.parent.addAlias( alias );\n\t},\n\n\taddDeclaration ( identifier, kind ) {\n\t\tif ( kind === 'var' && this.isBlockScope ) {\n\t\t\tthis.parent.addDeclaration( identifier, kind );\n\t\t\treturn;\n\t\t}\n\n\t\tconst { name } = identifier;\n\n\t\tconst existingDeclaration = this.declarations[ name ];\n\t\tif ( existingDeclaration ) {\n\t\t\tif ( letConst.test( kind ) || letConst.test( existingDeclaration.kind ) ) {\n\t\t\t\t// TODO warn about double var declarations?\n\t\t\t\tthrow new CompileError( identifier, `${name} is already declared` );\n\t\t\t}\n\n\t\t\t// special case — function expression IDs that are shadowed by\n\t\t\t// declarations should just be removed (TODO unless the user wishes\n\t\t\t// to keep function names — https://github.com/Rich-Harris/butternut/issues/17)\n\t\t\tif ( existingDeclaration.node.parent.type === 'FunctionExpression' ) {\n\t\t\t\texistingDeclaration.node.parent.removeId = true;\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tidentifier.isDuplicate = true;\n\n\t\t\t\tif ( existingDeclaration.activated ) {\n\t\t\t\t\tidentifier.activate();\n\t\t\t\t} else {\n\t\t\t\t\texistingDeclaration.duplicates.push( identifier );\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst declaration = {\n\t\t\tactivated: !this.parent, // TODO is this necessary?\n\t\t\tname,\n\t\t\tnode: identifier,\n\t\t\tkind,\n\t\t\tinstances: [],\n\t\t\tduplicates: []\n\t\t};\n\n\t\tthis.declarations[ name ] = declaration;\n\n\t\tif ( this.isBlockScope ) {\n\t\t\tif ( !this.functionScope.blockScopedDeclarations[ name ] ) this.functionScope.blockScopedDeclarations[ name ] = [];\n\t\t\tthis.functionScope.blockScopedDeclarations[ name ].push( declaration );\n\t\t}\n\n\t\tif ( kind === 'param' ) {\n\t\t\tdeclaration.instances.push( identifier );\n\t\t}\n\n\t\tif ( !this.parent ) {\n\t\t\tidentifier.activate();\n\t\t}\n\t},\n\n\taddReference ( identifier ) {\n\t\tif ( this.consolidated ) {\n\t\t\tthis.consolidateReference( identifier );\n\t\t} else {\n\t\t\tthis.identifiers.push( identifier );\n\t\t}\n\t},\n\n\tconsolidate () {\n\t\tfor ( let i = 0; i < this.identifiers.length; i += 1 ) { // we might push to the array during consolidation, so don't cache length\n\t\t\tconst identifier = this.identifiers[i];\n\t\t\tthis.consolidateReference( identifier );\n\t\t}\n\n\t\tthis.consolidated = true; // TODO understand why this is necessary... seems bad\n\t},\n\n\tconsolidateReference ( identifier ) {\n\t\tconst declaration = this.declarations[ identifier.name ];\n\t\tif ( declaration ) {\n\t\t\tdeclaration.instances.push( identifier );\n\n\t\t\tif ( !declaration.activated ) {\n\t\t\t\tdeclaration.activated = true;\n\t\t\t\t// const parent = declaration.node.parent;\n\n\t\t\t\tdeclaration.node.activate();\n\t\t\t\tdeclaration.duplicates.forEach( dupe => {\n\t\t\t\t\tdupe.activate();\n\t\t\t\t});\n\t\t\t\t// if ( declaration.kind === 'param' ) {\n\t\t\t\t// \t// TODO is there anything to do here?\n\t\t\t\t// } else if ( parent.activate ) {\n\t\t\t\t// \tparent.activate();\n\t\t\t\t// }\n\t\t\t}\n\t\t} else {\n\t\t\tthis.references[ identifier.name ] = true;\n\t\t\tif ( this.parent ) this.parent.addReference( identifier );\n\t\t}\n\t},\n\n\tcontains ( name ) {\n\t\treturn this.declarations[ name ] ||\n\t\t       ( this.parent ? this.parent.contains( name ) : false );\n\t},\n\n\tcontainsAlias ( alias ) {\n\t\treturn this.aliases[ alias ] || ( this.parent && this.parent.containsAlias( alias ) );\n\t},\n\n\tcreateIdentifier ( used ) {\n\t\tlet alias;\n\n\t\tdo {\n\t\t\talias = this.idCounter.map( i => validChars[i] ).join( '' );\n\n\t\t\tlet i = this.idCounter.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tthis.idCounter[i] += 1;\n\t\t\t\tif ( this.idCounter[i] === validChars.length ) {\n\t\t\t\t\tthis.idCounter[i] = 0;\n\n\t\t\t\t\tif ( i === 0 ) this.idCounter.push( 0 );\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} while ( used[ alias ] || reserved[ alias ] );\n\n\t\treturn alias;\n\t},\n\n\tfindDeclaration ( name ) {\n\t\treturn this.declarations[ name ] ||\n\t\t       ( this.parent && this.parent.findDeclaration( name ) );\n\t},\n\n\tmangle ( code ) {\n\t\tif ( !this.parent ) return;\n\n\t\tlet used = Object.create( null );\n\n\t\tObject.keys( this.references ).forEach( reference => {\n\t\t\tconst declaration = this.parent && this.parent.findDeclaration( reference );\n\t\t\tused[ declaration ? declaration.alias : reference ] = true;\n\t\t});\n\n\t\tObject.keys( this.declarations ).forEach( name => {\n\t\t\tconst declaration = this.declarations[ name ];\n\t\t\tdeclaration.alias = this.createIdentifier( used );\n\n\t\t\tdeclaration.instances.forEach( instance => {\n\t\t\t\t// special case — function expression IDs may be removed outright\n\t\t\t\tif ( instance.parent.type === 'FunctionExpression' && instance === instance.parent.id && instance.parent.removeId ) return;\n\n\t\t\t\tconst replacement = instance.parent.type === 'Property' && instance.parent.shorthand ?\n\t\t\t\t\t`${instance.name}:${declaration.alias}` :\n\t\t\t\t\tdeclaration.alias;\n\n\t\t\t\tcode.overwrite( instance.start, instance.end, replacement, true );\n\t\t\t});\n\t\t});\n\t}\n};\n","import Class from './shared/Class.js';\nimport Scope from '../Scope.js';\n\nexport default class ClassExpression extends Class {\n\tfindScope () {\n\t\treturn this.scope;\n\t}\n\n\tinitialise () {\n\t\tthis.scope = new Scope({\n\t\t\tblock: true,\n\t\t\tparent: this.parent.findScope( false ),\n\t\t\towner: this\n\t\t});\n\n\t\tif ( this.id ) {\n\t\t\tthis.id.declaration = this;\n\n\t\t\t// function expression IDs belong to the child scope...\n\t\t\tthis.scope.addDeclaration( this.id, 'class' );\n\t\t\tthis.scope.addReference( this.id );\n\t\t}\n\n\t\tsuper.initialise();\n\n\t\tthis.scope.consolidate();\n\t}\n\n\tminify ( code ) {\n\t\tthis.scope.mangle( code );\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN, FALSY } from '../../utils/sentinels.js';\n\nexport default class ConditionalExpression extends Node {\n\tgetLeftHandSide () {\n\t\tconst testValue = this.test.getValue();\n\t\tconst node = testValue === UNKNOWN ? this.test : ( testValue && testValue !== FALSY ? this.consequent : this.alternate );\n\n\t\treturn node.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\tconst testValue = this.test.getValue();\n\t\treturn testValue === UNKNOWN ? 4 : ( testValue && testValue !== FALSY ? this.consequent : this.alternate ).getPrecedence();\n\t}\n\n\tgetRightHandSide () {\n\t\tconst testValue = this.test.getValue();\n\t\tconst node = testValue === UNKNOWN ? this.alternate : ( testValue && testValue !== FALSY ? this.alternate : this.consequent );\n\n\t\treturn node.getRightHandSide();\n\t}\n\n\tgetValue () {\n\t\tconst testValue = this.test.getValue();\n\t\tconst consequentValue = this.consequent.getValue();\n\t\tconst alternateValue = this.alternate.getValue();\n\n\t\tif ( testValue === UNKNOWN || consequentValue === UNKNOWN || alternateValue === UNKNOWN ) return UNKNOWN;\n\n\t\treturn ( testValue && testValue !== FALSY ) ? consequentValue : alternateValue;\n\t}\n\n\tinitialise () {\n\t\tconst testValue = this.test.getValue();\n\n\t\tif ( testValue === UNKNOWN ) {\n\t\t\tsuper.initialise();\n\t\t} else if ( testValue ) {\n\t\t\tthis.consequent.initialise();\n\t\t} else {\n\t\t\tthis.alternate.initialise();\n\t\t}\n\t}\n\n\tminify ( code ) {\n\t\tconst testValue = this.test.getValue();\n\n\t\t// TODO rewrite `!a ? b() : c()` as `a ? c() : b()`\n\n\t\tif ( testValue === UNKNOWN ) {\n\t\t\t// remove whitespace\n\t\t\tif ( this.consequent.start > this.test.end + 1 ) {\n\t\t\t\tcode.overwrite( this.test.end, this.consequent.start, '?' );\n\t\t\t}\n\n\t\t\tif ( this.alternate.start > this.consequent.end + 1 ) {\n\t\t\t\tcode.overwrite( this.consequent.end, this.alternate.start, ':' );\n\t\t\t}\n\n\t\t\tsuper.minify( code );\n\t\t} else if ( testValue && testValue !== FALSY ) {\n\t\t\t// remove test and alternate\n\t\t\tcode.remove( this.start, this.consequent.start );\n\t\t\tcode.remove( this.consequent.end, this.end );\n\n\t\t\tthis.consequent.minify( code );\n\t\t} else {\n\t\t\t// remove test and consequent\n\t\t\tcode.remove( this.start, this.alternate.start );\n\n\t\t\tthis.alternate.minify( code );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class DoWhileStatement extends Node {\n\tminify ( code ) {\n\t\t// special case\n\t\tif ( this.body.body.length === 0 || this.body.body[0].type === 'EmptyStatement' ) {\n\t\t\tcode.overwrite( this.start + 2, this.test.start, ';while(' );\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.body.synthetic ) {\n\t\t\t\tcode.overwrite( this.start + 2, this.body.body[0].start, '{' );\n\n\t\t\t\tlet c = this.body.body[ this.body.body.length - 1 ].end;\n\t\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t\t\tcode.overwrite( c, this.test.start, '}while(' );\n\t\t\t} else {\n\t\t\t\tcode.remove( this.start + 2, this.body.start );\n\t\t\t\tcode.overwrite( this.body.end, this.test.start, 'while(' );\n\t\t\t}\n\t\t}\n\n\t\tif ( this.end > this.test.end + 1 ) {\n\t\t\tlet c = this.end;\n\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t\tcode.overwrite( this.test.end, c, ')' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ExpressionStatement extends Node {\n\tgetPrecedence () {\n\t\treturn this.expression.getPrecedence();\n\t}\n}\n","import Node from '../../Node.js';\n\nexport default class LoopStatement extends Node {\n\tfindScope ( functionScope ) {\n\t\tif ( functionScope || !this.hasVariableDeclaration() ) return this.parent.findScope( functionScope );\n\n\t\tif ( !this.body.scope ) this.body.createScope( this.parent.findScope() );\n\t\treturn this.body.scope;\n\t}\n\n\tminify ( code ) {\n\t\t// special case — empty body\n\t\tif ( this.body.body.length === 0 || this.body.body[0].type === 'EmptyStatement' ) {\n\t\t\tcode.appendLeft( this.body.start, ';' );\n\t\t\tcode.remove( this.body.start, this.body.end );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import LoopStatement from './shared/LoopStatement.js';\n\nexport default class ForStatement extends LoopStatement {\n\tgetRightHandSide () {\n\t\treturn this.body.getRightHandSide();\n\t}\n\n\thasVariableDeclaration () {\n\t\treturn this.init && this.init.type === 'VariableDeclaration';\n\t}\n\n\tminify ( code, transforms ) {\n\t\tlet c = this.start + 3;\n\n\t\tlet replacement = '(';\n\n\t\t[ this.init, this.test, this.update ].forEach( ( statement, i ) => {\n\t\t\tif ( statement ) {\n\t\t\t\tif ( statement.start > c + replacement.length ) {\n\t\t\t\t\tcode.overwrite( c, statement.start, replacement );\n\t\t\t\t}\n\n\t\t\t\tc = statement.end;\n\t\t\t\treplacement = '';\n\t\t\t}\n\n\t\t\treplacement += i === 2 ? ')' : ';';\n\t\t});\n\n\t\tif ( this.body.start > c + replacement.length ) {\n\t\t\tcode.overwrite( c, this.body.start, replacement );\n\t\t}\n\n\t\tsuper.minify( code, transforms );\n\t}\n}\n","import LoopStatement from './LoopStatement.js';\n\nexport default class ForInOfStatement extends LoopStatement {\n\tgetRightHandSide () {\n\t\treturn this.body.getRightHandSide();\n\t}\n\n\thasVariableDeclaration () {\n\t\treturn this.left.type === 'VariableDeclaration';\n\t}\n\n\tminify ( code, transforms ) {\n\t\tif ( this.left.start > this.start + 4 ) {\n\t\t\tcode.overwrite( this.start + 3, this.left.start, '(' );\n\t\t}\n\n\t\tif ( this.right.start > this.left.end + 4 ) {\n\t\t\tcode.overwrite( this.left.end, this.right.start, ' in ' );\n\t\t}\n\n\t\tif ( this.body.start > this.right.end + 1 ) {\n\t\t\tcode.overwrite( this.right.end, this.body.start, ')' );\n\t\t}\n\n\t\tsuper.minify( code, transforms );\n\t}\n}\n","import Node from '../../Node.js';\n\nexport default class Function extends Node {\n\tfindVarDeclarations () {\n\t\t// noop\n\t}\n\n\tminify ( code ) {\n\t\tlet c = this.start;\n\t\tlet openParams;\n\n\t\tif ( this.parent.type === 'MethodDefinition' || this.parent.method ) {\n\t\t\t// `async` or `*` are dealt with by the parent\n\t\t\topenParams = '(';\n\t\t}\n\n\t\telse {\n\t\t\topenParams = this.generator ? '*(' : '(';\n\n\t\t\tif ( this.async ) {\n\t\t\t\tc += 6;\n\t\t\t\twhile ( code.original[c] !== 'f' ) c += 1;\n\t\t\t\tif ( c > this.start + 6 ) code.remove( this.start + 6, c );\n\t\t\t}\n\n\t\t\tc += 8;\n\n\t\t\tif ( this.id && !this.removeId ) {\n\t\t\t\tc += 1;\n\n\t\t\t\tif ( this.id.start > c ) code.remove( c, this.id.start );\n\t\t\t\tc = this.id.end;\n\t\t\t}\n\t\t}\n\n\t\tif ( this.params.length ) {\n\t\t\tfor ( let i = 0; i < this.params.length; i += 1 ) {\n\t\t\t\tconst param = this.params[i];\n\n\t\t\t\tif ( param.start > c + 1 ) code.overwrite( c, param.start, i ? ',' : openParams );\n\t\t\t\tc = param.end;\n\t\t\t}\n\n\t\t\tif ( this.end > c + 1 ) code.overwrite( c, this.body.start, ')' );\n\t\t}\n\n\t\telse if ( this.body.start > c + 2 ) {\n\t\t\tcode.overwrite( c, this.body.start, `${openParams})` );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Function from './shared/Function.js';\n\nexport default class FunctionDeclaration extends Function {\n\tactivate () {\n\t\tthis.skip = false;\n\t\tsuper.initialise();\n\t}\n\n\tinitialise () {\n\t\tconst scope = this.findScope( false );\n\t\tthis.body.createScope( scope );\n\n\t\tif ( this.id ) { // if not, it's a default export\n\t\t\tthis.id.declaration = this;\n\t\t\tscope.addDeclaration( this.id, 'function' );\n\n\t\t\tthis.skip = !!scope.parent; // guilty until proven innocent\n\t\t}\n\t}\n}\n","import Function from './shared/Function.js';\n\nexport default class FunctionExpression extends Function {\n\tgetPrecedence () {\n\t\treturn 20;\n\t}\n\n\tinitialise () {\n\t\tthis.body.createScope( this.parent.findScope( false ) );\n\n\t\tif ( this.id ) {\n\t\t\tthis.id.declaration = this;\n\n\t\t\t// function expression IDs belong to the child scope...\n\t\t\tthis.body.scope.addDeclaration( this.id, 'function' );\n\t\t\tthis.body.scope.addReference( this.id );\n\t\t}\n\n\t\tsuper.initialise();\n\t}\n}\n","export default function isReference ( node, parent ) {\n\tif ( node.type === 'MemberExpression' ) {\n\t\treturn !node.computed && isReference( node.object, node );\n\t}\n\n\tif ( node.type === 'Identifier' ) {\n\t\t// the only time we could have an identifier node without a parent is\n\t\t// if it's the entire body of a function without a block statement –\n\t\t// i.e. an arrow function expression like `a => a`\n\t\tif ( !parent ) return true;\n\n\t\t// TODO what was this for?\n\t\t//if ( /(Function|Class)Expression/.test( parent.type ) && node === parent.id ) return false;\n\n\t\t// TODO is this right?\n\t\tif ( parent.type === 'MemberExpression' || parent.type === 'MethodDefinition' ) {\n\t\t\treturn parent.computed || node === parent.object;\n\t\t}\n\n\t\t// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n\t\tif ( parent.type === 'Property' ) return parent.computed || node === parent.value;\n\n\t\t// disregard the `bar` in `class Foo { bar () {...} }`\n\t\tif ( parent.type === 'MethodDefinition' ) return false;\n\n\t\t// disregard the `bar` in `export { foo as bar }`\n\t\tif ( parent.type === 'ExportSpecifier' && node !== parent.local ) return false;\n\n\t\treturn true;\n\t}\n}\n","import Node from '../Node.js';\nimport isReference from '../../utils/isReference.js';\n\nexport default class Identifier extends Node {\n\tactivate () {\n\t\tif ( this.declaration && this.declaration.activate ) {\n\t\t\tthis.declaration.activate();\n\t\t}\n\t}\n\n\tgetPrecedence () {\n\t\treturn 20;\n\t}\n\n\tinitialise () {\n\t\t// special case\n\t\tif ( ( this.parent.type === 'FunctionExpression' || this.parent.type === 'ClassExpression' ) && this === this.parent.id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isReference( this, this.parent ) ) {\n\t\t\tthis.findScope( false ).addReference( this );\n\t\t}\n\t}\n\n\tminify () {\n\t\t// TODO should aliasing happen here, rather than in Scope?\n\t\t// if ( this.alias ) {\n\t\t// \tconst replacement = this.parent.type === 'Property' && this.parent.shorthand ?\n\t\t// \t\t`${this.name}:${this.alias}` :\n\t\t// \t\tthis.alias;\n\n\t\t// \tcode.overwrite( this.start, this.end, replacement, true );\n\t\t// }\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\n\nconst invalidChars = /[a-zA-Z$_0-9/]/;\n\nfunction canRewriteBlockAsSequence ( body ) {\n\tlet i = body.length;\n\twhile ( i-- ) {\n\t\tconst child = body[i];\n\t\tif ( child.type !== 'ExpressionStatement' /*&& child.type !== 'ReturnStatement'*/ ) {\n\t\t\tif ( child.type !== 'IfStatement' ) return false;\n\t\t\tif ( !canRewriteIfStatementAsSequence( child ) ) return false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction canRewriteIfStatementAsSequence ( node ) {\n\tif ( !canRewriteBlockAsSequence( node.consequent.body ) ) return false;\n\n\tif ( node.alternate ) {\n\t\tif ( node.alternate.type === 'IfStatement' ) {\n\t\t\treturn canRewriteIfStatementAsSequence( node.alternate );\n\t\t}\n\n\t\tif ( node.alternate.type === 'BlockStatement' ) {\n\t\t\tif ( !canRewriteBlockAsSequence( node.alternate.body ) ) return false;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn node.alternate.type === 'ExpressionStatement';\n\t}\n\n\treturn true;\n}\n\nfunction isVarDeclaration ( node ) {\n\treturn node.kind === 'var';\n}\n\n// TODO this whole thing is kinda messy... refactor it\n\nexport default class IfStatement extends Node {\n\tgetRightHandSide () {\n\t\t// TODO what if we know the test value?\n\t\tif ( this.alternate ) return this.alternate.getRightHandSide();\n\t\treturn this.consequent.getRightHandSide();\n\t}\n\n\tinitialise () {\n\t\tthis.rewriteConsequentAsSequence = canRewriteBlockAsSequence( this.consequent.body );\n\t\tthis.rewriteAlternateAsSequence = !this.alternate ||\n\t\t\t( this.alternate.type === 'ExpressionStatement' ) ||\n\t\t\t( this.alternate.type === 'IfStatement' && canRewriteIfStatementAsSequence( this.alternate ) ) ||\n\t\t\t( this.alternate.type === 'BlockStatement' ) && canRewriteBlockAsSequence( this.alternate.body );\n\n\t\tthis.rewriteAsSequence = this.rewriteConsequentAsSequence && this.rewriteAlternateAsSequence;\n\n\t\tconst testValue = this.test.getValue();\n\n\t\tif ( testValue === UNKNOWN ) {\n\t\t\t// initialise everything\n\t\t\tthis.test.initialise();\n\t\t\tthis.consequent.initialise();\n\t\t\tif ( this.alternate ) this.alternate.initialise();\n\n\t\t\tif ( this.rewriteConsequentAsSequence || this.consequent.body.every( isVarDeclaration ) ) {\n\t\t\t\tthis.consequent.removeCurlies = true;\n\t\t\t}\n\n\t\t\tif ( this.alternate ) {\n\t\t\t\tif ( this.rewriteAlternateAsSequence || isVarDeclaration( this.alternate ) || ( this.alternate.type === 'BlockStatement' && this.alternate.body.every( isVarDeclaration ) ) ) {\n\t\t\t\t\tthis.alternate.removeCurlies = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\telse if ( testValue ) { // if ( true ) {...}\n\t\t\tthis.consequent.initialise();\n\n\t\t\t// hoist any var declarations in the alternate, so we can\n\t\t\t// discard the whole thing\n\t\t\tif ( this.alternate ) {\n\t\t\t\tlet varsToHoist = {};\n\t\t\t\tthis.alternate.findVarDeclarations( varsToHoist );\n\n\t\t\t\t// TODO do something with varsToHoist\n\t\t\t}\n\n\t\t\t// TODO does this apply equally to else blocks?\n\t\t\tif ( !this.consequent.synthetic ) {\n\t\t\t\t// if there are no let/const/class/function declarations, we can\n\t\t\t\t// remove the curlies\n\t\t\t\tlet removeCurlies = true;\n\t\t\t\tlet i = this.consequent.body.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tconst node = this.consequent.body[i];\n\t\t\t\t\tif ( /Declaration/.test( node.type ) && node.kind !== 'var' ) {\n\t\t\t\t\t\tremoveCurlies = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.consequent.removeCurlies = removeCurlies;\n\t\t\t}\n\t\t}\n\n\t\telse { // if ( false ) {...}\n\t\t\tif ( this.alternate ) {\n\t\t\t\tthis.alternate.removeCurlies = this.rewriteAlternateAsSequence;\n\t\t\t\tthis.alternate.initialise();\n\t\t\t} else {\n\t\t\t\tthis.skip = true;\n\t\t\t}\n\n\t\t\tlet varsToHoist = {};\n\t\t\tthis.consequent.findVarDeclarations( varsToHoist );\n\n\t\t\t// TODO do something with varsToHoist\n\t\t}\n\t}\n\n\tminify ( code ) {\n\t\tconst testValue = this.test.getValue();\n\n\t\tif ( testValue !== UNKNOWN ) {\n\t\t\tif ( testValue ) { // if ( true ) {...}\n\t\t\t\tif ( this.alternate ) {\n\t\t\t\t\t// TODO handle var declarations in alternate\n\t\t\t\t\tcode.remove( this.consequent.end, this.end );\n\t\t\t\t}\n\n\t\t\t\tcode.remove( this.start, this.consequent.start );\n\t\t\t\tthis.consequent.minify( code );\n\t\t\t} else { // if ( false ) {...}\n\t\t\t\t// we know there's an alternate, otherwise we wouldn't be here\n\t\t\t\tthis.alternate.minify( code );\n\t\t\t\tcode.remove( this.start, this.alternate.start );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.test.minify( code );\n\n\t\tconst inverted = this.test.type === 'UnaryExpression' && this.test.operator === '!';\n\n\t\t// if we're rewriting as &&, test must be higher precedence than 6\n\t\t// to avoid being wrapped in parens. If ternary, 4\n\t\tconst targetPrecedence = this.alternate ? 4 : inverted ? 5 : 6;\n\n\t\tconst shouldParenthesiseTest = this.test.getPrecedence() < targetPrecedence;\n\t\tconst shouldParenthesiseConsequent = this.consequent.body.length === 1 ?\n\t\t\tthis.consequent.body[0].getPrecedence() < targetPrecedence :\n\t\t\ttrue;\n\n\t\t// special case – empty if block\n\t\tif ( this.consequent.body.length === 0 ) {\n\t\t\tconst canRemoveTest = this.test.type === 'Identifier' || this.test.getValue() !== UNKNOWN; // TODO can this ever happen?\n\n\t\t\tif ( this.alternate ) {\n\t\t\t\tthis.alternate.minify( code );\n\n\t\t\t\tif ( this.alternate.type === 'BlockStatement' && this.alternate.body.length === 0 ) {\n\t\t\t\t\tif ( canRemoveTest ) {\n\t\t\t\t\t\tcode.remove( this.start, this.end );\n\t\t\t\t\t\tthis.removed = true;\n\t\t\t\t\t}\n\t\t\t\t} else if ( canRewriteIfStatementAsSequence( this ) ) {\n\t\t\t\t\tthis.alternate.joinStatements = true;\n\n\t\t\t\t\tlet alternatePrecedence;\n\t\t\t\t\tif ( this.alternate.type === 'IfStatement' ) {\n\t\t\t\t\t\talternatePrecedence = this.alternate.alternate ?\n\t\t\t\t\t\t\t4 : // will rewrite as ternary\n\t\t\t\t\t\t\t5;\n\t\t\t\t\t} else if ( this.alternate.type === 'BlockStatement' ) {\n\t\t\t\t\t\talternatePrecedence = this.alternate.body.length === 1 ?\n\t\t\t\t\t\t\tthis.alternate.body[0].getPrecedence() :\n\t\t\t\t\t\t\t0; // sequence\n\t\t\t\t\t} else {\n\t\t\t\t\t\talternatePrecedence = 0; // err on side of caution\n\t\t\t\t\t}\n\n\t\t\t\t\tconst shouldParenthesiseAlternate = alternatePrecedence < ( inverted ? 6 : 5 );\n\t\t\t\t\tif ( shouldParenthesiseAlternate ) {\n\t\t\t\t\t\tcode.prependRight( this.alternate.start, '(' ).appendLeft( this.alternate.end, ')' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inverted ) code.remove( this.test.start, this.test.argument.start );\n\t\t\t\t\tcode.remove( this.start, this.test.start );\n\t\t\t\t\tcode.overwrite( this.test.end, this.alternate.start, inverted ? '&&' : '||' );\n\t\t\t\t} else {\n\t\t\t\t\tif ( inverted ) {\n\t\t\t\t\t\tcode.overwrite( this.start + 2, this.test.argument.start, '(' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode.overwrite( this.start + 2, this.test.start, '(!' );\n\t\t\t\t\t}\n\n\t\t\t\t\tcode.overwrite( this.test.end, this.alternate.start, ')' );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// TODO is `removed` still used?\n\t\t\t\tif ( canRemoveTest ) {\n\t\t\t\t\tcode.remove( this.start, this.end );\n\t\t\t\t\tthis.removed = true;\n\t\t\t\t} else {\n\t\t\t\t\tcode.remove( this.start, this.test.start );\n\t\t\t\t\tcode.remove( this.test.end, this.consequent.end );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// special case - empty else block\n\t\tif ( this.alternate && this.alternate.type === 'BlockStatement' && this.alternate.body.length === 0 ) {\n\t\t\tcode.remove( this.consequent.end, this.end );\n\n\t\t\tif ( canRewriteIfStatementAsSequence( this ) ) {\n\t\t\t\tthis.consequent.joinStatements = true;\n\n\t\t\t\tcode.overwrite( this.start, ( inverted ? this.test.argument.start : this.test.start ), shouldParenthesiseTest ? '(' : '' );\n\n\t\t\t\tlet replacement = shouldParenthesiseTest ? ')' : '';\n\t\t\t\treplacement += inverted ? '||' : '&&';\n\t\t\t\tif ( shouldParenthesiseConsequent ) replacement += '(';\n\n\t\t\t\tcode.overwrite( this.test.end, this.consequent.start, replacement );\n\n\t\t\t\tif ( shouldParenthesiseConsequent ) code.appendRight( this.consequent.end, ')' );\n\t\t\t} else {\n\t\t\t\tif ( this.test.start > this.start + 3 ) code.overwrite( this.start, this.test.start, 'if(' );\n\n\t\t\t\tif ( this.consequent.start > this.test.end + 1 ) code.overwrite( this.test.end, this.consequent.start, ')' );\n\t\t\t\tif ( this.end > this.consequent.end + 1 ) code.remove( this.consequent.end, this.end - 1 );\n\t\t\t}\n\n\t\t\t// don't minify alternate\n\t\t\tthis.consequent.minify( code );\n\t\t\treturn;\n\t\t}\n\n\t\tthis.consequent.minify( code );\n\t\tif ( this.alternate ) this.alternate.minify( code );\n\n\t\tif ( canRewriteIfStatementAsSequence( this ) ) {\n\t\t\tthis.consequent.joinStatements = true;\n\n\t\t\tif ( inverted ) code.remove( this.test.start, this.test.start + 1 );\n\n\t\t\tif ( this.alternate ) {\n\t\t\t\tthis.rewriteAsTernaryExpression( code, inverted, shouldParenthesiseTest, shouldParenthesiseConsequent );\n\t\t\t} else {\n\t\t\t\tthis.rewriteAsLogicalExpression( code, inverted, shouldParenthesiseTest, shouldParenthesiseConsequent );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.test.start > this.start + 3 ) code.overwrite( this.start + 2, this.test.start, '(' );\n\t\t\tif ( this.consequent.start > this.test.end + 1 ) code.overwrite( this.test.end, this.consequent.start, ')' );\n\n\t\t\tif ( this.alternate ) {\n\t\t\t\tconst lastNodeOfConsequent = this.consequent.getRightHandSide();\n\n\t\t\t\tconst firstNodeOfAlternate = ( this.alternate.type === 'BlockStatement' && this.alternate.removeCurlies ?\n\t\t\t\t\tthis.alternate.body[0] :\n\t\t\t\t\tthis.alternate ).getLeftHandSide();\n\n\t\t\t\tlet gap = ( lastNodeOfConsequent.type === 'BlockStatement' ? '' : ';' ) + 'else';\n\t\t\t\tif ( invalidChars.test( code.original[ firstNodeOfAlternate.start ] ) ) gap += ' ';\n\n\t\t\t\tlet c = this.consequent.end;\n\t\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\n\t\t\t\tcode.overwrite( c, this.alternate.start, gap );\n\t\t\t}\n\t\t}\n\t}\n\n\tpreventsCollapsedReturns ( returnStatements ) {\n\t\tfor ( let statement of this.consequent.body ) {\n\t\t\tif ( statement.skip ) continue;\n\t\t\tif ( statement.preventsCollapsedReturns( returnStatements ) ) return true;\n\t\t}\n\n\t\tif ( this.alternate ) {\n\t\t\tif ( this.alternate.type === 'ExpressionStatement' ) return false;\n\t\t\tif ( this.alternate.type === 'ReturnStatement' ) return returnStatements.push( this.alternate ), false;\n\t\t\tif ( this.alternate.type === 'IfStatement' ) return this.alternate.preventsCollapsedReturns( returnStatements );\n\n\t\t\tif ( this.alternate.type === 'BlockStatement' ) {\n\t\t\t\tfor ( let statement of this.alternate.body ) {\n\t\t\t\t\tif ( statement.skip ) continue;\n\t\t\t\t\tif ( statement.preventsCollapsedReturns( returnStatements ) ) return true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trewriteAsLogicalExpression ( code, inverted, shouldParenthesiseTest, shouldParenthesiseConsequent ) {\n\t\tthis.rewriteAsSequence = true;\n\n\t\tcode.overwrite( this.start, this.test.start, shouldParenthesiseTest ? '(' : '' );\n\n\t\tlet replacement = ( shouldParenthesiseTest ? ')' : '' ) + ( inverted ? '||' : '&&' ) + ( shouldParenthesiseConsequent ? '(' : '' );\n\t\tcode.overwrite( this.test.end, this.consequent.start, replacement );\n\n\t\tif ( shouldParenthesiseConsequent ) {\n\t\t\tlet c = this.consequent.end;\n\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t\tcode.appendLeft( c, ')' );\n\t\t}\n\t}\n\n\trewriteAsTernaryExpression ( code, inverted, shouldParenthesiseTest, shouldParenthesiseConsequent ) {\n\t\tthis.rewriteAsSequence = true;\n\n\t\tthis.alternate.joinStatements = true;\n\n\t\tlet shouldParenthesiseAlternate = false;\n\t\tif ( this.alternate.type === 'BlockStatement' ) {\n\t\t\tif ( this.alternate.body.length > 1 ) {\n\t\t\t\tshouldParenthesiseAlternate = true;\n\t\t\t} else if ( this.alternate.body[0].type !== 'IfStatement' ) {\n\t\t\t\tshouldParenthesiseAlternate = this.alternate.body[0].getPrecedence() < 4;\n\t\t\t}\n\t\t}\n\t\t// const shouldParenthesiseAlternate = this.alternate.type === 'BlockStatement' ?\n\t\t// \t( this.alternate.body.length === 1 ? getPrecedence( this.alternate.body[0] ) < 4 : true ) :\n\t\t// \tfalse; // TODO <-- is this right? Ternaries are r-to-l, so... maybe?\n\n\t\tcode.overwrite( this.start, this.test.start, shouldParenthesiseTest ? '(' : '' );\n\n\t\tlet replacement = shouldParenthesiseTest ? ')?' : '?';\n\t\tif ( inverted && shouldParenthesiseAlternate ) replacement += '(';\n\t\tif ( !inverted && shouldParenthesiseConsequent ) replacement += '(';\n\n\t\tcode.overwrite( this.test.end, this.consequent.start, replacement );\n\n\t\tlet consequentEnd = this.consequent.end;\n\t\twhile ( code.original[ consequentEnd - 1 ] === ';' ) consequentEnd -= 1;\n\n\t\tlet alternateEnd = this.alternate.end;\n\t\twhile ( code.original[ alternateEnd - 1 ] === ';' ) alternateEnd -= 1;\n\n\t\tcode.remove( consequentEnd, this.alternate.start );\n\n\t\tif ( inverted ) {\n\t\t\tlet alternateEnd = this.alternate.end;\n\t\t\twhile ( code.original[ alternateEnd - 1 ] === ';' ) alternateEnd -= 1;\n\n\t\t\tlet consequentEnd = this.consequent.end;\n\t\t\twhile ( code.original[ consequentEnd - 1 ] === ';' ) consequentEnd -= 1;\n\n\t\t\tcode.move( this.alternate.start, alternateEnd, this.consequent.start );\n\t\t\tcode.move( this.consequent.start, consequentEnd, alternateEnd );\n\n\t\t\tlet replacement = shouldParenthesiseAlternate ? '):' : ':';\n\t\t\tif ( shouldParenthesiseConsequent ) replacement += '(';\n\n\t\t\tcode.prependRight( this.consequent.start, replacement );\n\n\t\t\tif ( shouldParenthesiseConsequent ) code.appendLeft( consequentEnd, ')' );\n\t\t} else {\n\t\t\tlet replacement = shouldParenthesiseConsequent ? '):' : ':';\n\t\t\tif ( shouldParenthesiseAlternate ) replacement += '(';\n\n\t\t\tcode.appendLeft( this.consequent.end, replacement );\n\n\t\t\tlet c = this.alternate.end;\n\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t\tif ( shouldParenthesiseAlternate ) code.appendLeft( c, ')' );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ImportDefaultSpecifier extends Node {\n\tinitialise () {\n\t\tthis.local.declaration = this;\n\n\t\tthis.findScope( true ).addDeclaration( this.local, 'import' );\n\t\tsuper.initialise();\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ImportSpecifier extends Node {\n\tinitialise () {\n\t\tthis.local.declaration = this;\n\n\t\tthis.findScope( true ).addDeclaration( this.local, 'import' );\n\t\tsuper.initialise();\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class Literal extends Node {\n\tgetPrecedence () {\n\t\treturn 20;\n\t}\n\n\tgetValue () {\n\t\treturn this.value;\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.value === true ) {\n\t\t\tcode.overwrite( this.start, this.end, '!0' );\n\t\t} else if ( this.value === false ) {\n\t\t\tcode.overwrite( this.start, this.end, '!1' );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN, FALSY } from '../../utils/sentinels.js';\n\nexport default class LogicalExpression extends Node {\n\tgetLeftHandSide () {\n\t\treturn this.left.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\tconst leftValue = this.left.getValue();\n\t\tconst rightValue = this.right.getValue();\n\n\t\tif ( leftValue === UNKNOWN || rightValue === UNKNOWN ) return this.operator === '&&' ? 6 : 5;\n\n\t\treturn 20; // will be replaced by a literal\n\t}\n\n\tgetValue () {\n\t\tconst leftValue = this.left.getValue();\n\t\tconst rightValue = this.right.getValue();\n\n\t\tif ( leftValue === UNKNOWN || rightValue === UNKNOWN ) return UNKNOWN;\n\n\t\tif ( this.operator === '&&' ) {\n\t\t\tif ( leftValue && leftValue !== FALSY ) return rightValue;\n\t\t} else {\n\t\t\tif ( leftValue && leftValue !== FALSY ) return leftValue;\n\t\t\treturn rightValue;\n\t\t}\n\t}\n\n\tminify ( code ) {\n\t\tconst leftValue = this.left.getValue();\n\n\t\tif ( leftValue === UNKNOWN ) {\n\t\t\tif ( this.right.start > this.left.end + this.operator.length ) {\n\t\t\t\tcode.overwrite( this.left.end, this.right.start, this.operator );\n\t\t\t}\n\n\t\t\tsuper.minify( code );\n\t\t}\n\n\t\telse if ( leftValue && leftValue !== FALSY ) {\n\t\t\tif ( this.operator === '&&' ) {\n\t\t\t\tcode.remove( this.start, this.right.start );\n\t\t\t\tthis.right.minify( code );\n\t\t\t} else {\n\t\t\t\tcode.remove( this.left.start, this.end );\n\t\t\t\tthis.left.minify( code );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.operator === '&&' ) {\n\t\t\t\tcode.remove( this.left.start, this.end );\n\t\t\t\tthis.left.minify( code );\n\t\t\t} else {\n\t\t\t\tcode.remove( this.start, this.right.start );\n\t\t\t\tthis.right.minify( code );\n\t\t\t}\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport reserved from '../../utils/reserved.js';\nimport { UNKNOWN, TRUTHY, FALSY } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nfunction isValidIdentifier ( str ) {\n\t// TODO there's probably a bit more to it than this\n\treturn !reserved[ str ] && /^[a-zA-Z_$][a-zA-Z_$0-9]*$/.test( str );\n}\n\nexport default class MemberExpression extends Node {\n\tgetValue () {\n\t\tconst objectValue = this.object.getValue();\n\t\tif ( objectValue === UNKNOWN || objectValue === TRUTHY || objectValue === FALSY ) return UNKNOWN;\n\n\t\tif ( this.computed ) {\n\t\t\tconst propertyValue = this.property.getValue();\n\t\t\tif ( propertyValue === UNKNOWN || propertyValue === TRUTHY || propertyValue === FALSY ) return UNKNOWN;\n\n\t\t\treturn objectValue[ propertyValue ];\n\t\t}\n\n\t\tif ( !objectValue ) return UNKNOWN;\n\n\t\treturn objectValue[ this.property.name ];\n\t}\n\n\tgetPrecedence () {\n\t\treturn 18;\n\t}\n\n\tminify ( code ) {\n\t\tconst value = this.getValue();\n\n\t\tif ( value !== UNKNOWN ) {\n\t\t\tconst str = stringify( value );\n\n\t\t\tif ( str !== null ) {\n\t\t\t\tcode.overwrite( this.start, this.end, str );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif ( this.computed ) {\n\t\t\tconst value = this.property.getValue();\n\n\t\t\tif ( String( Number( value ) ) === String( value ) ) {\n\t\t\t\tcode.overwrite( this.object.end, this.end, `[${value}]` );\n\t\t\t}\n\n\t\t\telse if ( typeof value === 'string' && isValidIdentifier( value ) ) {\n\t\t\t\tcode.overwrite( this.object.end, this.end, `.${value}` );\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tif ( this.property.start > this.object.end + 1 ) {\n\t\t\t\t\tcode.overwrite( this.object.end, this.property.start, '[' );\n\t\t\t\t}\n\n\t\t\t\tif ( this.end > this.property.end + 1 ) {\n\t\t\t\t\tcode.overwrite( this.property.end, this.end, ']' );\n\t\t\t\t}\n\n\t\t\t\tthis.property.minify( code );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.property.start > this.object.end + 1 ) {\n\t\t\t\tcode.overwrite( this.object.end, this.property.start, '.' );\n\t\t\t}\n\t\t}\n\n\t\tthis.object.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class MethodDefinition extends Node {\n\tminify ( code ) {\n\t\tif ( this.computed ) {\n\t\t\tif ( this.key.start > this.start + 1 ) code.remove( this.start + 1, this.key.start );\n\t\t\tif ( this.value.start > this.key.end + 1 ) code.overwrite( this.key.end, this.value.start, ']' );\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.value.start > this.key.end ) code.remove( this.key.end, this.value.start );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class NewExpression extends Node {\n\tgetPrecedence () {\n\t\treturn this.end > this.callee.end ? 18 : 17;\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.arguments.length ) {\n\t\t\tlet lastNode = this.callee;\n\n\t\t\tfor ( let i = 0; i < this.arguments.length; i += 1 ) {\n\t\t\t\tconst argument = this.arguments[i];\n\n\t\t\t\tif ( argument.start > lastNode.end + 1 ) code.overwrite( lastNode.end, argument.start, i ? ',' : '(' );\n\t\t\t\tlastNode = argument;\n\t\t\t}\n\n\t\t\tif ( this.end > lastNode.end + 1 ) code.overwrite( lastNode.end, this.end, ')' );\n\t\t}\n\n\t\telse if ( this.end > this.callee.end + 2 ) {\n\t\t\tcode.overwrite( this.callee.end, this.end, '()' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\nimport minifyPropertyKey from './shared/minifyPropertyKey.js';\nimport { TRUTHY } from '../../utils/sentinels.js';\n\nexport default class ObjectExpression extends Node {\n\tgetValue () {\n\t\treturn TRUTHY;\n\t}\n\n\tminify ( code ) {\n\t\tlet c = this.start;\n\n\t\tif ( this.properties.length ) {\n\t\t\tfor ( let i = 0; i < this.properties.length; i += 1 ) {\n\t\t\t\tconst p = this.properties[i];\n\n\t\t\t\tif ( p.start > c + 1 ) code.overwrite( c, p.start, i ? ',' : '{' );\n\n\t\t\t\tminifyPropertyKey( code, p, true );\n\t\t\t\tc = p.end;\n\t\t\t}\n\n\t\t\tif ( this.end > c + 1 ) code.remove( c, this.end - 1 );\n\t\t} else if ( this.end > this.start + 2 ) {\n\t\t\tcode.overwrite( this.start, this.end, '{}' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ObjectPattern extends Node {\n\tminify ( code ) {\n\t\tlet c = this.start + 1;\n\t\tfor ( let i = 0; i < this.properties.length; i += 1 ) {\n\t\t\t// TODO remove unused properties\n\t\t\tconst property = this.properties[i];\n\t\t\tproperty.minify( code );\n\n\t\t\tif ( property.start > c ) code.overwrite( c, property.start, i ? ',' : '' );\n\t\t\tc = property.end;\n\t\t}\n\n\t\tcode.remove( c, this.end - 1 );\n\t}\n}\n","import Node from '../Node.js';\n\nfunction shouldRemoveParens ( expression, parent ) {\n\tconst expressionPrecedence = expression.getPrecedence();\n\tconst parentPrecedence = parent.getPrecedence();\n\n\tif ( expression.type === 'CallExpression' ) {\n\t\treturn expression.callee.type === 'FunctionExpression'; // TODO is this right?\n\t}\n\n\tif ( expression.type === 'FunctionExpression' ) {\n\t\treturn (\n\t\t\t( parent.type === 'CallExpression' && parent.parent.type === 'ExpressionStatement' ) ||\n\t\t\t( parent.type === 'ExpressionStatement' && parent.parent.type === 'CallExpression' )\n\t\t);\n\t}\n\n\tif ( parentPrecedence > expressionPrecedence ) return false;\n\tif ( expressionPrecedence > parentPrecedence ) return true;\n\n\tif ( expression.type === 'UnaryExpression' ) return true;\n\tif ( expression.type === 'AssignmentExpression' ) return true;\n\tif ( expression.type === 'LogicalExpression' || expression.type === 'BinaryExpression' ) {\n\t\treturn ( parent.operator === '**' ? parent.right : parent.left ).contains( expression );\n\t}\n}\n\nexport default class ParenthesizedExpression extends Node {\n\tgetLeftHandSide () {\n\t\tlet node = this;\n\n\t\twhile ( node.type === 'ParenthesizedExpression' ) {\n\t\t\tnode = node.expression;\n\t\t}\n\n\t\tif ( shouldRemoveParens( node, this.parent ) ) return node.getLeftHandSide();\n\t\treturn node.parent;\n\t}\n\n\tgetValue () {\n\t\treturn this.expression.getValue();\n\t}\n\n\tminify ( code ) {\n\t\tlet parent = this.parent;\n\n\t\t// TODO we can do two remove operations — one at the start, one at the\n\t\t// end. don't need to do it on each descent\n\n\t\tlet expression = this.expression;\n\t\twhile ( expression.type === 'ParenthesizedExpression' ) {\n\t\t\tcode.remove( this.start, expression.start );\n\t\t\tcode.remove( expression.end, this.end );\n\t\t\texpression = expression.expression;\n\t\t}\n\n\t\tif ( shouldRemoveParens( expression, parent ) ) {\n\t\t\tcode.remove( this.start, expression.start );\n\t\t\tcode.remove( expression.end, this.end );\n\t\t} else {\n\t\t\tif ( expression.start > this.start + 1 ) code.remove( this.start + 1, expression.start );\n\t\t\tif ( this.end > expression.end + 1 ) code.remove( expression.end, this.end - 1 );\n\t\t}\n\n\t\t// special case (?) – IIFE\n\t\tif (\n\t\t\t(\n\t\t\t\tthis.parent.type === 'CallExpression' &&\n\t\t\t\tthis.parent.parent.type === 'ExpressionStatement' &&\n\t\t\t\t/FunctionExpression/.test( expression.type )\n\t\t\t) ||\n\t\t\t(\n\t\t\t\tthis.parent.type === 'ExpressionStatement' &&\n\t\t\t\texpression.type === 'CallExpression' &&\n\t\t\t\t/FunctionExpression/.test( expression.callee.type )\n\t\t\t)\n\t\t) {\n\t\t\tcode.prependRight( this.start, '!' ); // could be any unary operator – uglify uses !\n\t\t}\n\n\t\texpression.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nconst invalidChars = /[a-zA-Z$_0-9/]/;\n\nexport default class ReturnStatement extends Node {\n\tminify ( code ) {\n\t\tif ( !this.argument ) return;\n\n\t\tconst expression = this.argument.getLeftHandSide();\n\n\t\tconst needsTrailingWhitespace = invalidChars.test( code.original[ expression.start ] );\n\n\t\tif ( needsTrailingWhitespace && this.argument.start === this.start + 6 ) {\n\t\t\t// ensure that parenthesized expression isn't too close\n\t\t\tcode.appendLeft( this.start + 6, ' ' );\n\t\t}\n\n\t\tlet c = this.start + ( needsTrailingWhitespace ? 7 : 6 );\n\t\tif ( this.argument.start > c ) {\n\t\t\tcode.remove( c, this.argument.start );\n\t\t}\n\n\t\tthis.argument.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class SpreadElement extends Node {\n\tgetPrecedence () {\n\t\treturn 1;\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class SwitchCase extends Node {\n\tminify ( code ) {\n\t\tlet c;\n\n\t\tif ( this.test ) {\n\t\t\tthis.test.minify( code );\n\n\t\t\tif ( this.test.start > this.start + 5 ) {\n\t\t\t\tcode.remove( this.start + 5, this.test.start );\n\t\t\t}\n\n\t\t\tc = this.test.end;\n\t\t} else {\n\t\t\t// default\n\t\t\tc = this.start + 7;\n\t\t}\n\n\t\tthis.consequent.forEach( ( statement, i ) => {\n\t\t\tstatement.minify( code );\n\n\t\t\tconst separator = i ? ';' : ':'; // TODO can consequents be written as sequences?\n\n\t\t\tif ( statement.start === c ) {\n\t\t\t\tcode.appendLeft( c, separator );\n\t\t\t} else {\n\t\t\t\tif ( code.original.slice( c, statement.start ) !== separator ) {\n\t\t\t\t\tcode.overwrite( c, statement.start, separator );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc = statement.end;\n\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t});\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class SwitchStatement extends Node {\n\tminify ( code ) {\n\t\tif ( this.discriminant.start > this.start + 7 ) {\n\t\t\tcode.overwrite( this.start + 6, this.discriminant.start, '(' );\n\t\t}\n\n\t\tlet c = this.discriminant.end;\n\n\t\tthis.cases.forEach( ( switchCase, i ) => {\n\t\t\tif ( switchCase.start > c + ( i ? 1 : 2 ) ) {\n\t\t\t\tcode.overwrite( c, switchCase.start, i ? ';' : '){' );\n\t\t\t}\n\n\t\t\tc = switchCase.end;\n\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t});\n\n\t\tif ( this.end > c + 1 ) code.overwrite( c, this.end, '}' );\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN, TRUTHY, FALSY } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nexport default class TemplateLiteral extends Node {\n\tgetValue () {\n\t\tlet values = new Array( this.expressions.length );\n\t\tlet i;\n\n\t\tfor ( i = 0; i < this.expressions.length; i += 1 ) {\n\t\t\tconst expression = this.expressions[i];\n\t\t\tconst value = expression.getValue();\n\n\t\t\tif ( value === UNKNOWN || value === TRUTHY || value === FALSY ) return UNKNOWN;\n\n\t\t\tvalues[i] = value;\n\t\t}\n\n\t\tlet result = '';\n\n\t\tfor ( i = 0; i < this.expressions.length; i += 1 ) {\n\t\t\tconst value = values[i];\n\n\t\t\tresult += this.quasis[i].value.raw;\n\t\t\tresult += value;\n\t\t}\n\n\t\tresult += this.quasis[i].value.raw;\n\n\t\treturn result;\n\t}\n\n\tminify ( code ) {\n\t\tconst value = this.getValue();\n\n\t\tif ( value !== UNKNOWN ) {\n\t\t\tcode.overwrite( this.start, this.end, stringify( value ) );\n\t\t\treturn;\n\t\t}\n\n\t\tlet c = this.start;\n\t\tlet i;\n\t\tfor ( i = 0; i < this.expressions.length; i += 1 ) {\n\t\t\tconst expression = this.expressions[i];\n\t\t\tconst quasi = this.quasis[i];\n\n\t\t\texpression.minify( code );\n\n\t\t\tif ( quasi.start > c + 1 ) {\n\t\t\t\tcode.remove( c, quasi.start - 1 );\n\t\t\t}\n\n\t\t\tif ( expression.start > quasi.end + 2 ) {\n\t\t\t\tcode.remove( quasi.end + 2, expression.start );\n\t\t\t}\n\n\t\t\tc = expression.end;\n\t\t}\n\n\t\tconst lastQuasi = this.quasis[i];\n\n\t\tif ( lastQuasi.start > c + 1 ) {\n\t\t\tcode.remove( c, lastQuasi.start - 1 );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class TryStatement extends Node {\n\tminify ( code ) {\n\t\tif ( this.block.start > this.start + 3 ) code.remove( this.start + 3, this.block.start );\n\n\t\tif ( this.handler ) {\n\t\t\tif ( this.handler.start > this.block.end ) {\n\t\t\t\tcode.remove( this.block.end, this.handler.start );\n\t\t\t}\n\n\t\t\tif ( this.finalizer && this.finalizer.start > this.handler.end + 7 ) {\n\t\t\t\tcode.overwrite( this.handler.end, this.finalizer.start, 'finally' );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( this.finalizer.start > this.block.end + 7 ) {\n\t\t\t\tcode.overwrite( this.block.end, this.finalizer.start, 'finally' );\n\t\t\t}\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN, TRUTHY, FALSY } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nconst calculators = {\n\t'!': x => !x,\n\t'~': x => ~x,\n\t'+': x => +x,\n\t'-': x => -x,\n\t'typeof': x  => typeof x,\n\t'void'  : x  => void x,\n\t'delete': () => UNKNOWN\n};\n\nexport default class UnaryExpression extends Node {\n\tgetPrecedence () {\n\t\treturn 15;\n\t}\n\n\tgetValue () {\n\t\tconst arg = this.argument.getValue();\n\n\t\tif ( arg === UNKNOWN ) return UNKNOWN;\n\n\t\tif ( this.operator === '!' ) {\n\t\t\tif ( arg === TRUTHY ) return false;\n\t\t\tif ( arg === FALSY ) return true;\n\t\t}\n\n\t\treturn calculators[ this.operator ]( arg );\n\t}\n\n\tminify ( code ) {\n\t\tconst value = this.getValue();\n\t\tif ( value !== UNKNOWN && value !== TRUTHY && value !== FALSY ) {\n\t\t\tcode.overwrite( this.start, this.end, stringify( value ) );\n\t\t}\n\n\t\telse {\n\t\t\tconst len = this.operator.length;\n\t\t\tconst start = this.start + len;\n\n\t\t\tconst insertWhitespace = len > 1 && this.argument.getLeftHandSide().type !== 'ParenthesizedExpression';\n\t\t\tif ( insertWhitespace ) code.appendLeft( start, ' ' );\n\n\t\t\tcode.remove( start, this.argument.start );\n\n\t\t\tsuper.minify( code );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class UpdateExpression extends Node {\n\tgetPrecedence () {\n\t\treturn this.prefix ? 15 : 16;\n\t}\n\n\tinitialise () {\n\t\tif ( this.argument.type === 'Identifier' ) {\n\t\t\tconst declaration = this.findScope( false ).findDeclaration( this.argument.name );\n\t\t\tif ( declaration && declaration.kind === 'const' ) {\n\t\t\t\tthrow new CompileError( this, `${this.argument.name} is read-only` );\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise();\n\t}\n}\n","export default function extractNames ( node ) {\n\tconst names = [];\n\textractors[ node.type ]( names, node );\n\treturn names;\n}\n\nconst extractors = {\n\tIdentifier ( names, node ) {\n\t\tnames.push( node );\n\t},\n\n\tObjectPattern ( names, node ) {\n\t\tfor ( const prop of node.properties ) {\n\t\t\textractors[ prop.value.type ]( names, prop.value );\n\t\t}\n\t},\n\n\tArrayPattern ( names, node ) {\n\t\tfor ( const element of node.elements )  {\n\t\t\tif ( element ) extractors[ element.type ]( names, element );\n\t\t}\n\t},\n\n\tRestElement ( names, node ) {\n\t\textractors[ node.argument.type ]( names, node.argument );\n\t},\n\n\tAssignmentPattern ( names, node ) {\n\t\textractors[ node.left.type ]( names, node.left );\n\t}\n};\n","import Node from '../Node.js';\nimport extractNames from '../extractNames.js';\n\nexport default class VariableDeclaration extends Node {\n\tinitialise () {\n\t\tthis.scope = this.findScope( this.kind === 'var' );\n\t\tthis.skip = !!this.scope.parent; // TODO get rid of this\n\n\t\tthis.declarations.forEach( declarator => declarator.initialise() );\n\t}\n\n\tminify ( code ) {\n\t\tconst declarations = this.declarations.filter( d => !d.skip );\n\n\t\tlet allDupes = declarations.every( declarator => {\n\t\t\treturn extractNames( declarator.id ).every( identifier => {\n\t\t\t\treturn identifier.isDuplicate;\n\t\t\t});\n\t\t});\n\n\t\tlet c = allDupes ? this.start : this.start + this.kind.length + ( this.declarations[0].id.type === 'Identifier' ? 1 : 0 );\n\n\t\tfor ( let i = 0; i < declarations.length; i += 1 ) {\n\t\t\tconst declarator = declarations[i];\n\t\t\tif ( declarator.skip ) continue;\n\n\t\t\tif ( declarator.start > c ) code.overwrite( c, declarator.start, i ? ',' : '' );\n\t\t\tc = declarator.end;\n\t\t}\n\n\t\tif ( this.end > c + 1 ) code.remove( c, this.end - 1 ); // TODO semi-less declarations\n\n\t\tdeclarations.forEach( declarator => declarator.minify( code ) );\n\t}\n}\n","import Node from '../Node.js';\nimport extractNames from '../extractNames.js';\n\nexport default class VariableDeclarator extends Node {\n\tactivate () {\n\t\tthis.skip = this.parent.skip = false;\n\t\tthis.id.initialise();\n\t\tif ( this.init ) this.init.initialise();\n\t}\n\n\tinitialise () {\n\t\tconst kind = this.parent.kind;\n\t\tthis.scope = this.findScope( kind === 'var' );\n\n\t\tthis.skip = this.parent.skip;\n\n\t\textractNames( this.id ).forEach( node => {\n\t\t\tnode.declaration = this;\n\t\t\tthis.scope.addDeclaration( node, kind );\n\t\t});\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.init ) {\n\t\t\tif ( this.init.start > this.id.end + 1 ) code.overwrite( this.id.end, this.init.start, '=' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class WhileStatement extends Node {\n\tgetRightHandSide () {\n\t\treturn this.body.getRightHandSide();\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.test.start > this.start + 6 ) {\n\t\t\tcode.overwrite( this.start + 5, this.test.start, '(' );\n\t\t}\n\n\t\tif ( this.body.start > this.test.end + 1 ) {\n\t\t\tcode.overwrite( this.test.end, this.body.start, ')' );\n\t\t}\n\n\t\t// special case — empty body\n\t\tif ( this.body.body.length === 0 || this.body.body[0].type === 'EmptyStatement' ) {\n\t\t\tcode.appendLeft( this.body.start, ';' );\n\t\t\tcode.remove( this.body.start, this.body.end );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class YieldExpression extends Node {\n\tgetPrecedence () {\n\t\treturn 2;\n\t}\n}\n","import Array from './shared/Array.js';\nimport ArrowFunctionExpression from './ArrowFunctionExpression.js';\nimport AssignmentExpression from './AssignmentExpression.js';\nimport BinaryExpression from './BinaryExpression.js';\nimport CallExpression from './CallExpression.js';\nimport CatchClause from './CatchClause.js';\nimport ClassBody from './ClassBody.js';\nimport ClassDeclaration from './ClassDeclaration.js';\nimport ClassExpression from './ClassExpression.js';\nimport ConditionalExpression from './ConditionalExpression.js';\nimport DoWhileStatement from './DoWhileStatement.js';\nimport ExpressionStatement from './ExpressionStatement.js';\nimport ForStatement from './ForStatement.js';\nimport ForInOfStatement from './shared/ForInOfStatement.js';\nimport FunctionDeclaration from './FunctionDeclaration.js';\nimport FunctionExpression from './FunctionExpression.js';\nimport Identifier from './Identifier.js';\nimport IfStatement from './IfStatement.js';\nimport ImportDefaultSpecifier from './ImportDefaultSpecifier.js';\nimport ImportSpecifier from './ImportSpecifier.js';\nimport Literal from './Literal.js';\nimport LogicalExpression from './LogicalExpression.js';\nimport MemberExpression from './MemberExpression.js';\nimport MethodDefinition from './MethodDefinition.js';\nimport NewExpression from './NewExpression.js';\nimport ObjectExpression from './ObjectExpression.js';\nimport ObjectPattern from './ObjectPattern.js';\nimport ParenthesizedExpression from './ParenthesizedExpression.js';\nimport ReturnStatement from './ReturnStatement.js';\nimport SpreadElement from './SpreadElement.js';\nimport SwitchCase from './SwitchCase.js';\nimport SwitchStatement from './SwitchStatement.js';\nimport TemplateLiteral from './TemplateLiteral.js';\nimport TryStatement from './TryStatement.js';\nimport UnaryExpression from './UnaryExpression.js';\nimport UpdateExpression from './UpdateExpression.js';\nimport VariableDeclaration from './VariableDeclaration.js';\nimport VariableDeclarator from './VariableDeclarator.js';\nimport WhileStatement from './WhileStatement.js';\nimport YieldExpression from './YieldExpression.js';\n\nexport default {\n\tArrayExpression: Array,\n\tArrayPattern: Array,\n\tArrowFunctionExpression,\n\tAssignmentExpression,\n\tBinaryExpression,\n\tCallExpression,\n\tCatchClause,\n\tClassBody,\n\tClassDeclaration,\n\tClassExpression,\n\tConditionalExpression,\n\tDoWhileStatement,\n\tExpressionStatement,\n\tForStatement,\n\tForInStatement: ForInOfStatement,\n\tForOfStatement: ForInOfStatement,\n\tFunctionDeclaration,\n\tFunctionExpression,\n\tIdentifier,\n\tIfStatement,\n\tImportDefaultSpecifier,\n\tImportSpecifier,\n\tLiteral,\n\tLogicalExpression,\n\tMemberExpression,\n\tMethodDefinition,\n\tNewExpression,\n\tObjectExpression,\n\tObjectPattern,\n\tParenthesizedExpression,\n\tReturnStatement,\n\tSpreadElement,\n\tSwitchCase,\n\tSwitchStatement,\n\tTemplateLiteral,\n\tTryStatement,\n\tUnaryExpression,\n\tUpdateExpression,\n\tVariableDeclaration,\n\tVariableDeclarator,\n\tWhileStatement,\n\tYieldExpression\n};\n","import breaksExecution from './breaksExecution.js';\n\nexport default function blockBreaksExecution ( body ) {\n\tlet i = body.length;\n\twhile ( i-- ) {\n\t\tconst maybeReturnNode = breaksExecution( body[i] );\n\t\tif ( maybeReturnNode ) return maybeReturnNode;\n\t}\n\n\treturn null;\n}\n","import { UNKNOWN } from '../utils/sentinels.js';\nimport blockBreaksExecution from './blockBreaksExecution.js';\n\nexport default function breaksExecution ( node ) {\n\tif ( node.type === 'ReturnStatement' || node.type === 'BreakStatement' || node.type === 'ContinueStatement' ) {\n\t\treturn node;\n\t}\n\n\tif ( node.type === 'IfStatement' ) {\n\t\tconst testValue = node.test.getValue();\n\n\t\tif ( testValue === UNKNOWN ) return null;\n\n\t\tif ( testValue ) { // if ( true ) {...}\n\t\t\treturn blockBreaksExecution( node.consequent.body );\n\t\t}\n\n\t\t// if ( false ) {...}\n\t\tif ( !node.alternate ) return null;\n\n\t\tif ( node.alternate.type === 'BlockStatement' ) {\n\t\t\treturn blockBreaksExecution( node.alternate.body );\n\t\t}\n\n\t\tif ( node.alternate.type === 'IfStatement' ) {\n\t\t\treturn breaksExecution( node.alternate );\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","import Node from './Node.js';\nimport Scope from './Scope.js';\nimport extractNames from './extractNames.js';\nimport breaksExecution from '../analysis/breaksExecution.js';\n\nfunction compatibleDeclarations ( a, b ) {\n\tif ( a === b ) return true;\n\tif ( a === 'var' || b === 'var' ) return false;\n\treturn true;\n}\n\nconst shouldPreserveAfterReturn = {\n\tFunctionDeclaration: true,\n\tVariableDeclaration: true,\n\tClassDeclaration: true\n};\n\nconst allowsBlockLessStatement = {\n\tForStatement: true,\n\tForInStatement: true,\n\tForOfStatement: true,\n\tIfStatement: true,\n\tWhileStatement: true\n};\n\nfunction endsWithCurlyBrace ( statement ) {\n\tif ( statement.type === 'IfStatement' ) {\n\t\tif ( statement.rewriteAsSequence ) return false;\n\n\t\tif ( statement.alternate ) {\n\t\t\tif ( statement.alternate.type === 'IfStatement' ) {\n\t\t\t\treturn endsWithCurlyBrace( statement.alternate );\n\t\t\t}\n\n\t\t\tif ( statement.alternate.synthetic ) return false;\n\t\t\tif ( statement.alternate.removeCurlies ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !statement.consequent.synthetic && !statement.consequent.removeCurlies;\n\t}\n\n\tif ( /^(?:For(?:In|Of)?|While)Statement/.test( statement.type ) ) {\n\t\treturn !statement.body.synthetic && !statement.body.removeCurlies;\n\t}\n\n\treturn /(?:Class|Function)Declaration/.test( statement.type );\n}\n\nexport default class BlockStatement extends Node {\n\tcreateScope ( parent ) {\n\t\tthis.parentIsFunction = /Function/.test( this.parent.type );\n\t\tthis.isFunctionBlock = this.parentIsFunction || this.parent.type === 'Root';\n\n\t\tthis.scope = new Scope({\n\t\t\tblock: !this.isFunctionBlock,\n\t\t\tparent: parent || this.parent.findScope( false ), // TODO always supply parent\n\t\t\towner: this\n\t\t});\n\n\t\tconst params = this.parent.params || ( this.parent.type === 'CatchClause' && [ this.parent.param ] );\n\n\t\tif ( params && params.length ) {\n\t\t\tparams.forEach( node => {\n\t\t\t\textractNames( node ).forEach( identifier => {\n\t\t\t\t\tthis.scope.addDeclaration( identifier, 'param' );\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tinitialise () {\n\t\t// normally the scope gets created here, during initialisation,\n\t\t// but in some cases (e.g. `for` statements), we need to create\n\t\t// the scope early, as it pertains to both the init block and\n\t\t// the body of the statement\n\t\tif ( !this.scope ) this.createScope( this.parent.findScope( false ) );\n\n\t\tlet executionIsBroken = false;\n\t\tlet maybeReturnNode;\n\t\tlet hasDeclarationsAfterBreak = false;\n\n\t\tlet canCollapseReturns = this.parentIsFunction;\n\t\tlet returnStatements = [];\n\n\t\tfor ( let i = 0; i < this.body.length; i += 1 ) {\n\t\t\tconst node = this.body[i];\n\n\t\t\tif ( executionIsBroken ) {\n\t\t\t\tif ( shouldPreserveAfterReturn[ node.type ] ) {\n\t\t\t\t\thasDeclarationsAfterBreak = true;\n\t\t\t\t\tnode.initialise();\n\t\t\t\t} else {\n\t\t\t\t\tnode.skip = true;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmaybeReturnNode = breaksExecution( node );\n\t\t\tif ( maybeReturnNode ) executionIsBroken = true;\n\n\t\t\tnode.initialise();\n\n\t\t\tif ( canCollapseReturns ) {\n\t\t\t\tif ( node.preventsCollapsedReturns( returnStatements ) ) {\n\t\t\t\t\tcanCollapseReturns = false;\n\t\t\t\t} else {\n\t\t\t\t\t// console.log( `${node.type} preventsCollapsedReturns`)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.collapseReturnStatements = canCollapseReturns && returnStatements.length;\n\t\tthis.returnStatements = returnStatements;\n\n\t\t// if `return` is the last line of a function, remove it\n\t\tif ( maybeReturnNode && this.parentIsFunction && !hasDeclarationsAfterBreak ) {\n\t\t\t// TODO also capture `return undefined` and `return void 0` etc?\n\t\t\tif ( !maybeReturnNode.argument ) {\n\t\t\t\tmaybeReturnNode.skip = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.scope.consolidate();\n\t}\n\n\tfindVarDeclarations ( varsToHoist ) {\n\t\tif ( !this.scope ) this.createScope( this.parent.findScope( false ) );\n\n\t\tthis.body.forEach( node => {\n\t\t\tif ( node.type === 'VariableDeclaration' && node.kind === 'var' ) {\n\t\t\t\tnode.declarations.forEach( declarator => {\n\t\t\t\t\textractNames( declarator.id ).forEach( identifier => {\n\t\t\t\t\t\tvarsToHoist[ identifier.name ] = true;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tnode.findVarDeclarations( varsToHoist );\n\t\t\t}\n\t\t});\n\n\t\tthis.scope.consolidate();\n\t}\n\n\tfindLexicalBoundary () {\n\t\tif ( this.type === 'Program' ) return this;\n\t\tif ( /^Function/.test( this.parent.type ) ) return this;\n\n\t\treturn this.parent.findLexicalBoundary();\n\t}\n\n\tfindScope ( functionScope ) {\n\t\tif ( functionScope && !this.isFunctionBlock ) return this.parent.findScope( functionScope );\n\t\treturn this.scope;\n\t}\n\n\tgetLeftHandSide () {\n\t\tif ( this.removeCurlies || this.synthetic ) return this.body[0].getLeftHandSide();\n\t\treturn this;\n\t}\n\n\tgetRightHandSide () {\n\t\tif ( this.removeCurlies || this.synthetic ) return this.body[this.body.length - 1].getRightHandSide();\n\t\treturn this;\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.scope ) this.scope.mangle( code ); // class declarations do not create their own scope\n\n\t\tconst statements = this.body.filter( statement => !statement.skip );\n\n\t\t// if ( this.collapseReturnStatements ) {\n\t\t// \tthis.minifyWithCollapsedReturnStatements( code, statements );\n\t\t// } else {\n\t\tstatements.forEach( statement => {\n\t\t\tstatement.minify( code );\n\t\t});\n\t\t// }\n\n\t\t// TODO this is confusing\n\t\tconst rewriteAsSequence = !this.parentIsFunction && statements.length > 0 && ( this.joinStatements || statements.every( statement => {\n\t\t\treturn statement.type === 'ExpressionStatement' ||\n\t\t\t       statement.rewriteAsSequence;\n\t\t}) );\n\n\t\tconst separator = rewriteAsSequence ? ',' : ';';\n\n\t\t// TODO this is confusing\n\t\tlet removeCurlies = this.parent.type === 'Root' || !this.synthetic && (\n\t\t\tthis.parent.type === 'IfStatement' ?\n\t\t\t\tthis.removeCurlies :\n\t\t\t\t( allowsBlockLessStatement[ this.parent.type ] && rewriteAsSequence )\n\t\t);\n\n\t\tthis.removeCurlies = removeCurlies;\n\n\t\t// remove leading whitespace\n\t\tlet lastEnd = ( this.parent.type === 'Root' || removeCurlies ) ? this.start : this.start + 1;\n\n\t\tif ( statements.length ) {\n\t\t\tlet nextSeparator = '';\n\n\t\t\tfor ( let i = 0; i < statements.length; i += 1 ) {\n\t\t\t\tconst statement = statements[i];\n\n\t\t\t\tif ( nextSeparator === '' ) {\n\t\t\t\t\tif ( statement.start > lastEnd ) code.remove( lastEnd, statement.start );\n\t\t\t\t} else {\n\t\t\t\t\tif ( statement.start === lastEnd ) {\n\t\t\t\t\t\tcode.appendLeft( lastEnd, separator );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ( code.original.slice( lastEnd, statement.start ) !== nextSeparator ) {\n\t\t\t\t\t\t\tcode.overwrite( lastEnd, statement.start, nextSeparator );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlastEnd = statement.end;\n\n\t\t\t\t// remove superfluous semis\n\t\t\t\twhile ( code.original[ lastEnd - 1 ] === ';' ) lastEnd -= 1;\n\n\t\t\t\tif ( statement.removed ) {\n\t\t\t\t\tnextSeparator = '';\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tnextSeparator = endsWithCurlyBrace( statement ) ? '' : separator;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst end = removeCurlies ? this.end : this.end - 1;\n\t\t\tif ( end > lastEnd ) code.remove( lastEnd, end );\n\t\t} else {\n\t\t\t// empty block\n\t\t\tif ( this.removeCurlies || this.parent.type === 'Root' ) {\n\t\t\t\tcode.remove( this.start, this.end );\n\t\t\t} else if ( this.end > this.start + 2 ) {\n\t\t\t\tcode.remove( this.start + 1, this.end - 1 );\n\t\t\t}\n\t\t}\n\n\t\t// combine adjacent var declarations\n\t\tlet lastStatement;\n\t\tfor ( let statement of statements ) {\n\t\t\tif ( lastStatement && lastStatement.type === 'VariableDeclaration' && statement.type === 'VariableDeclaration' ) {\n\t\t\t\t// are they compatible?\n\t\t\t\tif ( compatibleDeclarations( lastStatement.kind, statement.kind ) ) {\n\t\t\t\t\tconst lastDeclarator = lastStatement.declarations[ lastStatement.declarations.length - 1 ];\n\t\t\t\t\tcode.overwrite( lastDeclarator.end, statement.declarations[0].start, ',' );\n\n\t\t\t\t\tstatement.collapsed = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !statement.collapsed && statement.kind === 'const' && ( !lastStatement || lastStatement.kind !== 'VariableDeclaration' ) ) {\n\t\t\t\tcode.overwrite( statement.start, statement.start + 5, 'let' );\n\t\t\t}\n\n\t\t\tlastStatement = statement;\n\t\t}\n\t}\n\n\t// TODO make this work!\n\t// minifyWithCollapsedReturnStatements ( code, statements ) {\n\t// \tif ( this.returnStatements.length === 1 ) {\n\t// \t\tconst returnStatement = this.returnStatements[0];\n\n\t// \t\tif ( returnStatement.parent === this ) {\n\t// \t\t\t// case 1 – a single top-level return with no argument\n\t// \t\t\tif ( !returnStatement.argument ) {\n\t// \t\t\t\t// does this already get skipped above?\n\t// \t\t\t\tthrow new Error( 'TODO single return statement without arg' );\n\t// \t\t\t}\n\n\t// \t\t\t// case 2 – a single top-level return with an argument\n\t// \t\t\telse {\n\t// \t\t\t\tthrow new Error( 'TODO single return statement with arg' );\n\t// \t\t\t}\n\t// \t\t}\n\n\t// \t\telse {\n\t// \t\t\t// case 3 – a single conditional return with no argument\n\t// \t\t\tif ( !returnStatement.argument ) {\n\t// \t\t\t\treturnStatement.skip = true;\n\t// \t\t\t}\n\n\t// \t\t\t// case 4 – a single conditional return with an argument\n\t// \t\t\telse {\n\t// \t\t\t\tthrow new Error( 'TODO single return statement with arg' );\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\n\t// \telse {\n\t// \t\tthrow new Error( 'TODO multiple return statements' );\n\t// \t}\n\n\t// \tstatements.forEach( statement => {\n\t// \t\tstatement.minify( code );\n\t// \t});\n\t// }\n}\n","import types from './types/index.js';\nimport BlockStatement from './BlockStatement.js';\nimport Node from './Node.js';\nimport keys from './keys.js';\n\nconst statementsWithBlocks = {\n\tForStatement: 'body',\n\tForInStatement: 'body',\n\tForOfStatement: 'body',\n\tWhileStatement: 'body',\n\tDoWhileStatement: 'body',\n\tArrowFunctionExpression: 'body'\n};\n\nfunction synthetic ( expression ) {\n\treturn {\n\t\tstart: expression.start,\n\t\tend: expression.end,\n\t\ttype: 'BlockStatement',\n\t\tbody: [ expression ],\n\t\tsynthetic: true\n\t};\n}\n\nexport default function wrap ( raw, parent ) {\n\tif ( !raw ) return;\n\n\tif ( 'length' in raw ) {\n\t\tlet i = raw.length;\n\t\twhile ( i-- ) wrap( raw[i], parent );\n\t\treturn;\n\t}\n\n\t// with e.g. shorthand properties, key and value are\n\t// the same node. We don't want to wrap an object twice\n\tif ( raw.__wrapped ) return;\n\traw.__wrapped = true;\n\n\tif ( !keys[ raw.type ] ) {\n\t\tkeys[ raw.type ] = Object.keys( raw ).filter( key => typeof raw[ key ] === 'object' );\n\t}\n\n\t// create synthetic block statements, otherwise all hell\n\t// breaks loose when it comes to block scoping\n\tif ( raw.type === 'IfStatement' ) {\n\t\tif ( raw.consequent.type !== 'BlockStatement' ) raw.consequent = synthetic( raw.consequent );\n\t\tif ( raw.alternate && raw.alternate.type !== 'BlockStatement' ) raw.alternate = synthetic( raw.alternate );\n\t} else if ( statementsWithBlocks[ raw.type ] && raw.body.type !== 'BlockStatement' ) {\n\t\traw.body = synthetic( raw.body );\n\t}\n\n\tNode( raw, parent );\n\n\tconst type = ( raw.type === 'BlockStatement' ? BlockStatement : types[ raw.type ] ) || Node;\n\traw.__proto__ = type.prototype;\n}\n","import { parse } from 'acorn';\nimport { decode } from 'sourcemap-codec';\nimport keys from './keys.js';\nimport Program from './Program.js';\n\nexport default function check ( magicString, ast ) {\n\tconst code = magicString.toString();\n\n\ttry {\n\t\tparse( code, {\n\t\t\tecmaVersion: 8,\n\t\t\tsourceType: 'module'\n\t\t});\n\t} catch ( err ) {\n\t\tconst map = magicString.generateMap();\n\t\tconst { line, column } = err.loc;\n\t\tconst snippet = code.slice( Math.max( 0, err.pos - 35 ), Math.min( code.length, err.pos + 35 ) );\n\n\t\tconst mappings = decode( map.mappings );\n\t\tconst segments = mappings[ line - 1 ];\n\n\t\tfor ( let i = 0; i < segments.length; i += 1 ) {\n\t\t\tconst segment = segments[i];\n\t\t\tif ( segment[0] >= column ) {\n\t\t\t\tconst sourceCodeLine = segment[2];\n\t\t\t\tconst sourceCodeColumn = segment[3];\n\n\t\t\t\terr.message = `Butternut generated invalid JS: code in source file near (${sourceCodeLine + 1}:${sourceCodeColumn}) became\\n...${snippet}...`;\n\n\t\t\t\ttry {\n\t\t\t\t\tconst repro = createRepro( magicString.original, ast, sourceCodeLine, sourceCodeColumn );\n\t\t\t\t\tif ( repro ) err.repro = repro;\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// do nothing\n\t\t\t\t}\n\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\tthrow err;\n\t}\n}\n\nfunction createRepro ( source, ast, line, column ) {\n\tconst lines = source.split( '\\n' );\n\n\tlet c = 0;\n\tfor ( let i = 0; i < line; i += 1 ) c += lines[i].length + 1;\n\tc += column;\n\n\tlet node = zoomIn( ast, c );\n\n\tdo {\n\t\tnode = zoomOut( node );\n\n\t\tconst slice = source.slice( node.start, node.end );\n\t\tconst ast = parse( slice, {\n\t\t\tecmaVersion: 8,\n\t\t\tpreserveParens: true,\n\t\t\tsourceType: 'module',\n\t\t\tallowReturnOutsideFunction: true\n\t\t});\n\n\t\tconst { code } = new Program( slice, ast, null ).export({});\n\n\t\ttry {\n\t\t\tparse( code, {\n\t\t\t\tecmaVersion: 8,\n\t\t\t\tsourceType: 'module',\n\t\t\t\tallowReturnOutsideFunction: true\n\t\t\t});\n\t\t} catch ( err ) {\n\t\t\treturn {\n\t\t\t\tinput: slice,\n\t\t\t\toutput: code\n\t\t\t};\n\t\t}\n\t} while ( node );\n}\n\nfunction zoomIn ( node, c ) {\n\tif ( !node ) return null;\n\n\tif ( c < node.start ) return null;\n\tif ( c > node.end ) return null;\n\n\tconst k = keys[ node.type ];\n\tfor ( let i = 0; i < k.length; i += 1 ) {\n\t\tconst key = k[i];\n\n\t\tif ( Array.isArray( node[key] ) ) {\n\t\t\tconst body = node[key];\n\n\t\t\tfor ( let j = 0; j < body.length; j += 1 ) {\n\t\t\t\tif ( body[j] ) {\n\t\t\t\t\tif ( body[j].start > c ) return zoomIn( body[j], body[j].start );\n\n\t\t\t\t\tconst child = zoomIn( body[j], c );\n\t\t\t\t\tif ( child ) return child;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst child = zoomIn( node[key], c );\n\t\t\tif ( child ) return child;\n\t\t}\n\t}\n\n\treturn node;\n}\n\nfunction zoomOut ( node ) {\n\twhile ( !/Statement|Declaration/.test( node.parent.type ) ) {\n\t\tif ( !node.parent ) return null;\n\t\tnode = node.parent;\n\t}\n\n\treturn node.parent;\n}","import MagicString from 'magic-string';\nimport wrap from './wrap.js';\nimport BlockStatement from './BlockStatement.js';\nimport check from './check.js';\n\nexport default function Program ( source, ast, stats ) {\n\tthis.stats = stats;\n\tthis.type = 'Root';\n\n\tthis.source = source;\n\tif ( DEBUG ) stats.time( 'create magicString' );\n\tthis.magicString = new MagicString( source );\n\tif ( DEBUG ) stats.timeEnd( 'create magicString' );\n\n\tthis.ast = ast;\n\tthis.depth = 0;\n\n\tif ( DEBUG ) stats.time( 'create body' );\n\twrap( this.body = ast, this );\n\tthis.body.__proto__ = BlockStatement.prototype;\n\tif ( DEBUG ) stats.timeEnd( 'create body' );\n\n\tthis.templateElements = [];\n\tif ( DEBUG ) stats.time( 'init body' );\n\tthis.body.initialise();\n\tif ( DEBUG ) stats.timeEnd( 'init body' );\n\n\tif ( DEBUG ) stats.time( 'minify' );\n\tthis.body.minify( this.magicString );\n\tif ( DEBUG ) stats.timeEnd( 'minify' );\n}\n\nProgram.prototype = {\n\texport ( options ) {\n\t\tconst stats = this.stats;\n\n\t\tif ( DEBUG ) stats.time( 'generate code' );\n\t\tconst code = this.magicString.toString();\n\t\tif ( DEBUG ) stats.timeEnd( 'generate code' );\n\n\t\tif ( options.check ) {\n\t\t\tcheck( this.magicString, this.ast );\n\t\t}\n\n\t\tif ( DEBUG ) stats.time( 'generate map' );\n\t\tconst map = options.sourceMap !== false ? this.magicString.generateMap({\n\t\t\tfile: options.file,\n\t\t\tsource: options.source,\n\t\t\tincludeContent: options.includeContent !== false\n\t\t}) : null;\n\t\tif ( DEBUG ) stats.timeEnd( 'generate map' );\n\n\t\tif ( DEBUG && this.magicString.stats ) {\n\t\t\tObject.keys( this.magicString.stats ).forEach( stat => {\n\t\t\t\tstats[ stat ] = this.magicString.stats[ stat ];\n\t\t\t});\n\t\t}\n\n\t\treturn { code, map, stats };\n\t},\n\n\tfindNearest () {\n\t\treturn null;\n\t},\n\n\tfindScope () {\n\t\treturn this.body.scope;\n\t}\n};\n","export default class Stats {\n\tconstructor () {\n\t\tObject.defineProperties( this, {\n\t\t\tstartTimes: { value: {} }\n\t\t});\n\t}\n\n\ttime ( label ) {\n\t\tthis.startTimes[ label ] = process.hrtime();\n\t}\n\n\ttimeEnd ( label ) {\n\t\tconst elapsed = process.hrtime( this.startTimes[ label ] );\n\n\t\tif ( !this[ label ] ) this[ label ] = 0;\n\t\tthis[ label ] += elapsed[0] * 1e3 + elapsed[1] * 1e-6;\n\t}\n}\n","import { parse } from 'acorn';\nimport Program from './program/Program.js';\nimport Stats from './utils/Stats.js';\nimport getSnippet from './utils/getSnippet.js';\n\nexport function squash ( source, options = {} ) {\n\tlet ast;\n\n\tconst stats = DEBUG ? new Stats() : null;\n\n\ttry {\n\t\tif ( DEBUG ) stats.time( 'parse' );\n\t\tast = parse( source, {\n\t\t\tecmaVersion: 8,\n\t\t\tpreserveParens: true,\n\t\t\tsourceType: 'module'\n\t\t});\n\t\tif ( DEBUG ) stats.timeEnd( 'parse' );\n\t} catch ( err ) {\n\t\terr.snippet = getSnippet( source, err.loc );\n\t\tthrow err;\n\t}\n\n\treturn new Program( source, ast, stats ).export( options );\n}\n\nexport { version as VERSION } from '../package.json';\n"],"names":["const","this","let","super","c","varsToHoist","statement","alternateEnd","consequentEnd","replacement","value","invalidChars","calculators","Array","ast","child"],"mappings":"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"}