{"version":3,"file":"butternut.umd.js","sources":["../node_modules/acorn/dist/acorn.es.js","../../../magic-string/node_modules/vlq/src/vlq.js","../../../magic-string/dist/magic-string.es.js","../src/program/keys.js","../src/utils/sentinels.js","../src/program/Node.js","../src/program/types/shared/Array.js","../src/program/types/ArrowFunctionExpression.js","../src/utils/locate.js","../src/utils/getSnippet.js","../src/utils/CompileError.js","../src/program/types/AssignmentExpression.js","../src/utils/stringify.js","../src/program/types/BinaryExpression.js","../src/program/types/CallExpression.js","../src/program/types/CatchClause.js","../src/program/types/shared/minifyPropertyKey.js","../src/program/types/ClassBody.js","../src/program/types/shared/Class.js","../src/program/types/ClassDeclaration.js","../src/utils/reserved.js","../src/program/Scope.js","../src/program/types/ClassExpression.js","../src/program/types/ConditionalExpression.js","../src/program/types/DoWhileStatement.js","../src/program/types/ExpressionStatement.js","../src/program/types/shared/LoopStatement.js","../src/program/types/ForStatement.js","../src/program/types/shared/ForInOfStatement.js","../src/program/types/shared/Function.js","../src/program/types/FunctionDeclaration.js","../src/program/types/FunctionExpression.js","../src/utils/isReference.js","../src/program/types/Identifier.js","../src/program/types/IfStatement.js","../src/program/types/ImportDefaultSpecifier.js","../src/program/types/ImportSpecifier.js","../src/program/types/Literal.js","../src/program/types/LogicalExpression.js","../src/program/types/MemberExpression.js","../src/program/types/MethodDefinition.js","../src/program/types/NewExpression.js","../src/program/types/ObjectExpression.js","../src/program/types/ObjectPattern.js","../src/program/types/ParenthesizedExpression.js","../src/program/types/ReturnStatement.js","../src/program/types/SpreadElement.js","../src/program/types/SwitchCase.js","../src/program/types/SwitchStatement.js","../src/program/types/TemplateLiteral.js","../src/program/types/TryStatement.js","../src/program/types/UnaryExpression.js","../src/program/types/UpdateExpression.js","../src/program/extractNames.js","../src/program/types/VariableDeclaration.js","../src/program/types/VariableDeclarator.js","../src/program/types/WhileStatement.js","../src/program/types/YieldExpression.js","../src/program/types/index.js","../src/analysis/blockBreaksExecution.js","../src/analysis/breaksExecution.js","../src/program/BlockStatement.js","../src/program/wrap.js","../node_modules/sourcemap-codec/dist/sourcemap-codec.es.js","../src/program/check.js","../src/program/Program.js","../src/utils/Stats.js","../src/index.js"],"sourcesContent":["// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n}\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n}\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fd5\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ae\\ua7b0-\\ua7b7\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\"\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d4-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d01-\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf8\\u1cf9\\u1dc0-\\u1df5\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\"\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\")\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\")\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,17,26,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,26,45,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,785,52,76,44,33,24,27,35,42,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,25,391,63,32,0,449,56,264,8,2,36,18,0,50,29,881,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,881,68,12,0,67,12,65,0,32,6124,20,754,9486,1,3071,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,10591,541]\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,1306,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,52,0,13,2,49,13,10,2,4,9,83,11,7,0,161,11,6,9,7,3,57,0,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,87,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,423,9,838,7,2,7,17,9,57,21,2,13,19882,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239]\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i]\n    if (pos > code) return false\n    pos += set[i + 1]\n    if (pos >= code) return true\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) return code === 36\n  if (code < 91) return true\n  if (code < 97) return code === 95\n  if (code < 123) return true\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n  if (astral === false) return false\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) return code === 36\n  if (code < 58) return true\n  if (code < 65) return false\n  if (code < 91) return true\n  if (code < 97) return code === 95\n  if (code < 123) return true\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code))\n  if (astral === false) return false\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label\n  this.keyword = conf.keyword\n  this.beforeExpr = !!conf.beforeExpr\n  this.startsExpr = !!conf.startsExpr\n  this.isLoop = !!conf.isLoop\n  this.isAssign = !!conf.isAssign\n  this.prefix = !!conf.prefix\n  this.postfix = !!conf.postfix\n  this.binop = conf.binop || null\n  this.updateContext = null\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n// Map keyword names to token types.\n\nvar keywordTypes = {}\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name\n  return keywordTypes[name] = new TokenType(name, options)\n}\n\nvar tt = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"prefix\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=\", 6),\n  relational: binop(\"</>\", 7),\n  bitShift: binop(\"<</>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\"),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n}\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/\nvar lineBreakG = new RegExp(lineBreak.source, \"g\")\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); })\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line\n  this.column = col\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start\n  this.end = end\n  if (p.sourceFile !== null) this.source = p.sourceFile\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur\n    var match = lineBreakG.exec(input)\n    if (match && match.index < offset) {\n      ++line\n      cur = match.index + match[0].length\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n}\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {}\n\n  for (var opt in defaultOptions)\n    options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]\n\n  if (options.ecmaVersion >= 2015)\n    options.ecmaVersion -= 2009\n\n  if (options.allowReserved == null)\n    options.allowReserved = options.ecmaVersion < 5\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken\n    options.onToken = function (token) { return tokens.push(token); }\n  }\n  if (isArray(options.onComment))\n    options.onComment = pushComment(options, options.onComment)\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    }\n    if (options.locations)\n      comment.loc = new SourceLocation(this, startLoc, endLoc)\n    if (options.ranges)\n      comment.range = [start, end]\n    array.push(comment)\n  }\n}\n\n// Registered plugins\nvar plugins = {}\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options)\n  this.sourceFile = options.sourceFile\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5])\n  var reserved = \"\"\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      if (reserved = reservedWords[v]) break\n    if (options.sourceType == \"module\") reserved += \" await\"\n  }\n  this.reservedWords = keywordRegexp(reserved)\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict\n  this.reservedWordsStrict = keywordRegexp(reservedStrict)\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind)\n  this.input = String(input)\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false\n\n  // Load plugins\n  this.loadPlugins(options.plugins)\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length\n  } else {\n    this.pos = this.lineStart = 0\n    this.curLine = 1\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = tt.eof\n  // For tokens that include more information than their type, the value\n  this.value = null\n  // Its start and end offset\n  this.start = this.end = this.pos\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition()\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null\n  this.lastTokStart = this.lastTokEnd = this.pos\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext()\n  this.exprAllowed = true\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\"\n  this.strict = this.inModule || this.strictDirective(this.pos)\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0\n  // Labels in scope.\n  this.labels = []\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    this.skipLineComment(2)\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = []\n  this.enterFunctionScope()\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name])\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name]\n    if (!plugin) throw new Error(\"Plugin '\" + name + \"' not found\")\n    plugin(this$1, pluginConfigs[name])\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode()\n  this.nextToken()\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:[^']|\\.)*)'|\"((?:[^\"]|\\.)*)\"|;)/\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start\n    start += skipWhiteSpace.exec(this$1.input)[0].length\n    var match = literal.exec(this$1.input.slice(start))\n    if (!match) return false\n    if ((match[1] || match[2]) == \"use strict\") return true\n    start += match[0].length\n  }\n}\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next()\n    return true\n  } else {\n    return false\n  }\n}\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === tt.name && this.value === name\n}\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  return this.value === name && this.eat(tt.name)\n}\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) this.unexpected()\n}\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === tt.eof ||\n    this.type === tt.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n}\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc)\n    return true\n  }\n}\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(tt.semi) && !this.insertSemicolon()) this.unexpected()\n}\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type == tokType) {\n    if (this.options.onTrailingComma)\n      this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc)\n    if (!notNext)\n      this.next()\n    return true\n  }\n}\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected()\n}\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\")\n}\n\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = -1\n};\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) return\n  if (refDestructuringErrors.trailingComma > -1)\n    this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\")\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind\n  if (parens > -1) this.raiseRecoverable(parens, \"Parenthesized pattern\")\n}\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  var pos = refDestructuringErrors ? refDestructuringErrors.shorthandAssign : -1\n  if (!andThrow) return pos >= 0\n  if (pos > -1) this.raise(pos, \"Shorthand property assignments are valid only in destructuring patterns\")\n}\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    this.raise(this.yieldPos, \"Yield expression cannot be a default value\")\n  if (this.awaitPos)\n    this.raise(this.awaitPos, \"Await expression cannot be a default value\")\n}\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    return this.isSimpleAssignTarget(expr.expression)\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n}\n\nvar pp$1 = Parser.prototype\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {}\n  if (!node.body) node.body = []\n  while (this.type !== tt.eof) {\n    var stmt = this$1.parseStatement(true, true, exports)\n    node.body.push(stmt)\n  }\n  this.next()\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType\n  }\n  return this.finishNode(node, \"Program\")\n}\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\npp$1.isLet = function() {\n  if (this.type !== tt.name || this.options.ecmaVersion < 6 || this.value != \"let\") return false\n  skipWhiteSpace.lastIndex = this.pos\n  var skip = skipWhiteSpace.exec(this.input)\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next)\n  if (nextCh === 91 || nextCh == 123) return true // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) ++pos\n    var ident = this.input.slice(next, pos)\n    if (!this.isKeyword(ident)) return true\n  }\n  return false\n}\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.type !== tt.name || this.options.ecmaVersion < 8 || this.value != \"async\")\n    return false\n\n  skipWhiteSpace.lastIndex = this.pos\n  var skip = skipWhiteSpace.exec(this.input)\n  var next = this.pos + skip[0].length\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 == this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n}\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind\n\n  if (this.isLet()) {\n    starttype = tt._var\n    kind = \"let\"\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case tt._break: case tt._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case tt._debugger: return this.parseDebuggerStatement(node)\n  case tt._do: return this.parseDoStatement(node)\n  case tt._for: return this.parseForStatement(node)\n  case tt._function:\n    if (!declaration && this.options.ecmaVersion >= 6) this.unexpected()\n    return this.parseFunctionStatement(node, false)\n  case tt._class:\n    if (!declaration) this.unexpected()\n    return this.parseClass(node, true)\n  case tt._if: return this.parseIfStatement(node)\n  case tt._return: return this.parseReturnStatement(node)\n  case tt._switch: return this.parseSwitchStatement(node)\n  case tt._throw: return this.parseThrowStatement(node)\n  case tt._try: return this.parseTryStatement(node)\n  case tt._const: case tt._var:\n    kind = kind || this.value\n    if (!declaration && kind != \"var\") this.unexpected()\n    return this.parseVarStatement(node, kind)\n  case tt._while: return this.parseWhileStatement(node)\n  case tt._with: return this.parseWithStatement(node)\n  case tt.braceL: return this.parseBlock()\n  case tt.semi: return this.parseEmptyStatement(node)\n  case tt._export:\n  case tt._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        this.raise(this.start, \"'import' and 'export' may only appear at the top level\")\n      if (!this.inModule)\n        this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\")\n    }\n    return starttype === tt._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction() && declaration) {\n      this.next()\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression()\n    if (starttype === tt.name && expr.type === \"Identifier\" && this.eat(tt.colon))\n      return this.parseLabeledStatement(node, maybeName, expr)\n    else return this.parseExpressionStatement(node, expr)\n  }\n}\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword == \"break\"\n  this.next()\n  if (this.eat(tt.semi) || this.insertSemicolon()) node.label = null\n  else if (this.type !== tt.name) this.unexpected()\n  else {\n    node.label = this.parseIdent()\n    this.semicolon()\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i]\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break\n      if (node.label && isBreak) break\n    }\n  }\n  if (i === this.labels.length) this.raise(node.start, \"Unsyntactic \" + keyword)\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n}\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next()\n  this.semicolon()\n  return this.finishNode(node, \"DebuggerStatement\")\n}\n\npp$1.parseDoStatement = function(node) {\n  this.next()\n  this.labels.push(loopLabel)\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  this.expect(tt._while)\n  node.test = this.parseParenExpression()\n  if (this.options.ecmaVersion >= 6)\n    this.eat(tt.semi)\n  else\n    this.semicolon()\n  return this.finishNode(node, \"DoWhileStatement\")\n}\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next()\n  this.labels.push(loopLabel)\n  this.enterLexicalScope()\n  this.expect(tt.parenL)\n  if (this.type === tt.semi) return this.parseFor(node, null)\n  var isLet = this.isLet()\n  if (this.type === tt._var || this.type === tt._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value\n    this.next()\n    this.parseVar(init$1, true, kind)\n    this.finishNode(init$1, \"VariableDeclaration\")\n    if ((this.type === tt._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init))\n      return this.parseForIn(node, init$1)\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors\n  var init = this.parseExpression(true, refDestructuringErrors)\n  if (this.type === tt._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    this.toAssignable(init)\n    this.checkLVal(init)\n    this.checkPatternErrors(refDestructuringErrors, true)\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true)\n  }\n  return this.parseFor(node, init)\n}\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next()\n  return this.parseFunction(node, true, false, isAsync)\n}\n\npp$1.isFunction = function() {\n  return this.type === tt._function || this.isAsyncFunction()\n}\n\npp$1.parseIfStatement = function(node) {\n  this.next()\n  node.test = this.parseParenExpression()\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.isFunction())\n  node.alternate = this.eat(tt._else) ? this.parseStatement(!this.strict && this.isFunction()) : null\n  return this.finishNode(node, \"IfStatement\")\n}\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    this.raise(this.start, \"'return' outside of function\")\n  this.next()\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(tt.semi) || this.insertSemicolon()) node.argument = null\n  else { node.argument = this.parseExpression(); this.semicolon() }\n  return this.finishNode(node, \"ReturnStatement\")\n}\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next()\n  node.discriminant = this.parseParenExpression()\n  node.cases = []\n  this.expect(tt.braceL)\n  this.labels.push(switchLabel)\n  this.enterLexicalScope()\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur\n  for (var sawDefault = false; this.type != tt.braceR;) {\n    if (this$1.type === tt._case || this$1.type === tt._default) {\n      var isCase = this$1.type === tt._case\n      if (cur) this$1.finishNode(cur, \"SwitchCase\")\n      node.cases.push(cur = this$1.startNode())\n      cur.consequent = []\n      this$1.next()\n      if (isCase) {\n        cur.test = this$1.parseExpression()\n      } else {\n        if (sawDefault) this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\")\n        sawDefault = true\n        cur.test = null\n      }\n      this$1.expect(tt.colon)\n    } else {\n      if (!cur) this$1.unexpected()\n      cur.consequent.push(this$1.parseStatement(true))\n    }\n  }\n  this.exitLexicalScope()\n  if (cur) this.finishNode(cur, \"SwitchCase\")\n  this.next() // Closing brace\n  this.labels.pop()\n  return this.finishNode(node, \"SwitchStatement\")\n}\n\npp$1.parseThrowStatement = function(node) {\n  this.next()\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    this.raise(this.lastTokEnd, \"Illegal newline after throw\")\n  node.argument = this.parseExpression()\n  this.semicolon()\n  return this.finishNode(node, \"ThrowStatement\")\n}\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = []\n\npp$1.parseTryStatement = function(node) {\n  this.next()\n  node.block = this.parseBlock()\n  node.handler = null\n  if (this.type === tt._catch) {\n    var clause = this.startNode()\n    this.next()\n    this.expect(tt.parenL)\n    clause.param = this.parseBindingAtom()\n    this.enterLexicalScope()\n    this.checkLVal(clause.param, \"let\")\n    this.expect(tt.parenR)\n    clause.body = this.parseBlock(false)\n    this.exitLexicalScope()\n    node.handler = this.finishNode(clause, \"CatchClause\")\n  }\n  node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null\n  if (!node.handler && !node.finalizer)\n    this.raise(node.start, \"Missing catch or finally clause\")\n  return this.finishNode(node, \"TryStatement\")\n}\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next()\n  this.parseVar(node, false, kind)\n  this.semicolon()\n  return this.finishNode(node, \"VariableDeclaration\")\n}\n\npp$1.parseWhileStatement = function(node) {\n  this.next()\n  node.test = this.parseParenExpression()\n  this.labels.push(loopLabel)\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  return this.finishNode(node, \"WhileStatement\")\n}\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) this.raise(this.start, \"'with' in strict mode\")\n  this.next()\n  node.object = this.parseParenExpression()\n  node.body = this.parseStatement(false)\n  return this.finishNode(node, \"WithStatement\")\n}\n\npp$1.parseEmptyStatement = function(node) {\n  this.next()\n  return this.finishNode(node, \"EmptyStatement\")\n}\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i = 0; i < this.labels.length; ++i)\n    if (this$1.labels[i].name === maybeName) this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\")\n  var kind = this.type.isLoop ? \"loop\" : this.type === tt._switch ? \"switch\" : null\n  for (var i$1 = this.labels.length - 1; i$1 >= 0; i$1--) {\n    var label = this$1.labels[i$1]\n    if (label.statementStart == node.start) {\n      label.statementStart = this$1.start\n      label.kind = kind\n    } else break\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start})\n  node.body = this.parseStatement(true)\n  if (node.body.type == \"ClassDeclaration\" ||\n      node.body.type == \"VariableDeclaration\" && node.body.kind != \"var\" ||\n      node.body.type == \"FunctionDeclaration\" && (this.strict || node.body.generator))\n    this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\")\n  this.labels.pop()\n  node.label = expr\n  return this.finishNode(node, \"LabeledStatement\")\n}\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr\n  this.semicolon()\n  return this.finishNode(node, \"ExpressionStatement\")\n}\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode()\n  node.body = []\n  this.expect(tt.braceL)\n  if (createNewLexicalScope) {\n    this.enterLexicalScope()\n  }\n  while (!this.eat(tt.braceR)) {\n    var stmt = this$1.parseStatement(true)\n    node.body.push(stmt)\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope()\n  }\n  return this.finishNode(node, \"BlockStatement\")\n}\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init\n  this.expect(tt.semi)\n  node.test = this.type === tt.semi ? null : this.parseExpression()\n  this.expect(tt.semi)\n  node.update = this.type === tt.parenR ? null : this.parseExpression()\n  this.expect(tt.parenR)\n  this.exitLexicalScope()\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  return this.finishNode(node, \"ForStatement\")\n}\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === tt._in ? \"ForInStatement\" : \"ForOfStatement\"\n  this.next()\n  node.left = init\n  node.right = this.parseExpression()\n  this.expect(tt.parenR)\n  this.exitLexicalScope()\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  return this.finishNode(node, type)\n}\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = []\n  node.kind = kind\n  for (;;) {\n    var decl = this$1.startNode()\n    this$1.parseVarId(decl, kind)\n    if (this$1.eat(tt.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor)\n    } else if (kind === \"const\" && !(this$1.type === tt._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected()\n    } else if (decl.id.type != \"Identifier\" && !(isFor && (this$1.type === tt._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\")\n    } else {\n      decl.init = null\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"))\n    if (!this$1.eat(tt.comma)) break\n  }\n  return node\n}\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind)\n  this.checkLVal(decl.id, kind, false)\n}\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 6 && !isAsync)\n    node.generator = this.eat(tt.star)\n  if (this.options.ecmaVersion >= 8)\n    node.async = !!isAsync\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type != tt.name ? null : this.parseIdent()\n    if (node.id) {\n      this.checkLVal(node.id, \"var\")\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction\n  this.inGenerator = node.generator\n  this.inAsync = node.async\n  this.yieldPos = 0\n  this.awaitPos = 0\n  this.inFunction = true\n  this.enterFunctionScope()\n\n  if (!isStatement)\n    node.id = this.type == tt.name ? this.parseIdent() : null\n\n  this.parseFunctionParams(node)\n  this.parseFunctionBody(node, allowExpressionBody)\n\n  this.inGenerator = oldInGen\n  this.inAsync = oldInAsync\n  this.yieldPos = oldYieldPos\n  this.awaitPos = oldAwaitPos\n  this.inFunction = oldInFunc\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n}\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(tt.parenL)\n  node.params = this.parseBindingList(tt.parenR, false, this.options.ecmaVersion >= 8, true)\n  this.checkYieldAwaitInDefaultParams()\n}\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next()\n\n  this.parseClassId(node, isStatement)\n  this.parseClassSuper(node)\n  var classBody = this.startNode()\n  var hadConstructor = false\n  classBody.body = []\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    if (this$1.eat(tt.semi)) continue\n    var method = this$1.startNode()\n    var isGenerator = this$1.eat(tt.star)\n    var isAsync = false\n    var isMaybeStatic = this$1.type === tt.name && this$1.value === \"static\"\n    this$1.parsePropertyName(method)\n    method.static = isMaybeStatic && this$1.type !== tt.parenL\n    if (method.static) {\n      if (isGenerator) this$1.unexpected()\n      isGenerator = this$1.eat(tt.star)\n      this$1.parsePropertyName(method)\n    }\n    if (this$1.options.ecmaVersion >= 8 && !isGenerator && !method.computed &&\n        method.key.type === \"Identifier\" && method.key.name === \"async\" && this$1.type !== tt.parenL &&\n        !this$1.canInsertSemicolon()) {\n      isAsync = true\n      this$1.parsePropertyName(method)\n    }\n    method.kind = \"method\"\n    var isGetSet = false\n    if (!method.computed) {\n      var key = method.key;\n      if (!isGenerator && !isAsync && key.type === \"Identifier\" && this$1.type !== tt.parenL && (key.name === \"get\" || key.name === \"set\")) {\n        isGetSet = true\n        method.kind = key.name\n        key = this$1.parsePropertyName(method)\n      }\n      if (!method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n          key.type === \"Literal\" && key.value === \"constructor\")) {\n        if (hadConstructor) this$1.raise(key.start, \"Duplicate constructor in the same class\")\n        if (isGetSet) this$1.raise(key.start, \"Constructor can't have get/set modifier\")\n        if (isGenerator) this$1.raise(key.start, \"Constructor can't be a generator\")\n        if (isAsync) this$1.raise(key.start, \"Constructor can't be an async method\")\n        method.kind = \"constructor\"\n        hadConstructor = true\n      }\n    }\n    this$1.parseClassMethod(classBody, method, isGenerator, isAsync)\n    if (isGetSet) {\n      var paramCount = method.kind === \"get\" ? 0 : 1\n      if (method.value.params.length !== paramCount) {\n        var start = method.value.start\n        if (method.kind === \"get\")\n          this$1.raiseRecoverable(start, \"getter should have no params\")\n        else\n          this$1.raiseRecoverable(start, \"setter should have exactly one param\")\n      } else {\n        if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n          this$1.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\")\n      }\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\")\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n}\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync)\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"))\n}\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === tt.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null\n}\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null\n}\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next()\n  // export * from '...'\n  if (this.eat(tt.star)) {\n    this.expectContextual(\"from\")\n    node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()\n    this.semicolon()\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(tt._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart)\n    var isAsync\n    if (this.type === tt._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode()\n      this.next()\n      if (isAsync) this.next()\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync)\n    } else if (this.type === tt._class) {\n      var cNode = this.startNode()\n      node.declaration = this.parseClass(cNode, \"nullableID\")\n    } else {\n      node.declaration = this.parseMaybeAssign()\n      this.semicolon()\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true)\n    if (node.declaration.type === \"VariableDeclaration\")\n      this.checkVariableExport(exports, node.declaration.declarations)\n    else\n      this.checkExport(exports, node.declaration.id.name, node.declaration.id.start)\n    node.specifiers = []\n    node.source = null\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null\n    node.specifiers = this.parseExportSpecifiers(exports)\n    if (this.eatContextual(\"from\")) {\n      node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()\n    } else {\n      // check for keywords used as local names\n      for (var i = 0; i < node.specifiers.length; i++) {\n        if (this$1.keywords.test(node.specifiers[i].local.name) || this$1.reservedWords.test(node.specifiers[i].local.name)) {\n          this$1.unexpected(node.specifiers[i].local.start)\n        }\n      }\n\n      node.source = null\n    }\n    this.semicolon()\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n}\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) return\n  if (has(exports, name))\n    this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\")\n  exports[name] = true\n}\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type\n  if (type == \"Identifier\")\n    this.checkExport(exports, pat.name, pat.start)\n  else if (type == \"ObjectPattern\")\n    for (var i = 0; i < pat.properties.length; ++i)\n      this$1.checkPatternExport(exports, pat.properties[i].value)\n  else if (type == \"ArrayPattern\")\n    for (var i$1 = 0; i$1 < pat.elements.length; ++i$1) {\n      var elt = pat.elements[i$1]\n      if (elt) this$1.checkPatternExport(exports, elt)\n    }\n  else if (type == \"AssignmentPattern\")\n    this.checkPatternExport(exports, pat.left)\n  else if (type == \"ParenthesizedExpression\")\n    this.checkPatternExport(exports, pat.expression)\n}\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) return\n  for (var i = 0; i < decls.length; i++)\n    this$1.checkPatternExport(exports, decls[i].id)\n}\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n}\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true\n  // export { x, y as z } [from '...']\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this$1.expect(tt.comma)\n      if (this$1.afterTrailingComma(tt.braceR)) break\n    } else first = false\n\n    var node = this$1.startNode()\n    node.local = this$1.parseIdent(true)\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local\n    this$1.checkExport(exports, node.exported.name, node.exported.start)\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"))\n  }\n  return nodes\n}\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next()\n  // import '...'\n  if (this.type === tt.string) {\n    node.specifiers = empty\n    node.source = this.parseExprAtom()\n  } else {\n    node.specifiers = this.parseImportSpecifiers()\n    this.expectContextual(\"from\")\n    node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()\n  }\n  this.semicolon()\n  return this.finishNode(node, \"ImportDeclaration\")\n}\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true\n  if (this.type === tt.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode()\n    node.local = this.parseIdent()\n    this.checkLVal(node.local, \"let\")\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"))\n    if (!this.eat(tt.comma)) return nodes\n  }\n  if (this.type === tt.star) {\n    var node$1 = this.startNode()\n    this.next()\n    this.expectContextual(\"as\")\n    node$1.local = this.parseIdent()\n    this.checkLVal(node$1.local, \"let\")\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"))\n    return nodes\n  }\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this$1.expect(tt.comma)\n      if (this$1.afterTrailingComma(tt.braceR)) break\n    } else first = false\n\n    var node$2 = this$1.startNode()\n    node$2.imported = this$1.parseIdent(true)\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent()\n    } else {\n      node$2.local = node$2.imported\n      if (this$1.isKeyword(node$2.local.name)) this$1.unexpected(node$2.local.start)\n      if (this$1.reservedWordsStrict.test(node$2.local.name)) this$1.raiseRecoverable(node$2.local.start, \"The keyword '\" + node$2.local.name + \"' is reserved\")\n    }\n    this$1.checkLVal(node$2.local, \"let\")\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"))\n  }\n  return nodes\n}\n\nvar pp$2 = Parser.prototype\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        this.raise(node.start, \"Can not use 'await' as identifier inside an async function\")\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\"\n      for (var i = 0; i < node.properties.length; i++) {\n        var prop = node.properties[i]\n        if (prop.kind !== \"init\") this$1.raise(prop.key.start, \"Object pattern can't contain getter or setter\")\n        this$1.toAssignable(prop.value, isBinding)\n      }\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\"\n      this.toAssignableList(node.elements, isBinding)\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator === \"=\") {\n        node.type = \"AssignmentPattern\"\n        delete node.operator\n        this.toAssignable(node.left, isBinding)\n        // falls through to AssignmentPattern\n      } else {\n        this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\")\n        break\n      }\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      node.expression = this.toAssignable(node.expression, isBinding)\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) break\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\")\n    }\n  }\n  return node\n}\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length\n  if (end) {\n    var last = exprList[end - 1]\n    if (last && last.type == \"RestElement\") {\n      --end\n    } else if (last && last.type == \"SpreadElement\") {\n      last.type = \"RestElement\"\n      var arg = last.argument\n      this.toAssignable(arg, isBinding)\n      if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\")\n        this.unexpected(arg.start)\n      --end\n    }\n\n    if (isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      this.unexpected(last.argument.start)\n  }\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i]\n    if (elt) this$1.toAssignable(elt, isBinding)\n  }\n  return exprList\n}\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode()\n  this.next()\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors)\n  return this.finishNode(node, \"SpreadElement\")\n}\n\npp$2.parseRest = function(allowNonIdent) {\n  var node = this.startNode()\n  this.next()\n\n  // RestElement inside of a function parameter must be an identifier\n  if (allowNonIdent) node.argument = this.type === tt.name ? this.parseIdent() : this.unexpected()\n  else node.argument = this.type === tt.name || this.type === tt.bracketL ? this.parseBindingAtom() : this.unexpected()\n\n  return this.finishNode(node, \"RestElement\")\n}\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion < 6) return this.parseIdent()\n  switch (this.type) {\n  case tt.name:\n    return this.parseIdent()\n\n  case tt.bracketL:\n    var node = this.startNode()\n    this.next()\n    node.elements = this.parseBindingList(tt.bracketR, true, true)\n    return this.finishNode(node, \"ArrayPattern\")\n\n  case tt.braceL:\n    return this.parseObj(true)\n\n  default:\n    this.unexpected()\n  }\n}\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowNonIdent) {\n  var this$1 = this;\n\n  var elts = [], first = true\n  while (!this.eat(close)) {\n    if (first) first = false\n    else this$1.expect(tt.comma)\n    if (allowEmpty && this$1.type === tt.comma) {\n      elts.push(null)\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === tt.ellipsis) {\n      var rest = this$1.parseRest(allowNonIdent)\n      this$1.parseBindingListItem(rest)\n      elts.push(rest)\n      if (this$1.type === tt.comma) this$1.raise(this$1.start, \"Comma is not permitted after the rest element\")\n      this$1.expect(close)\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc)\n      this$1.parseBindingListItem(elem)\n      elts.push(elem)\n    }\n  }\n  return elts\n}\n\npp$2.parseBindingListItem = function(param) {\n  return param\n}\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom()\n  if (this.options.ecmaVersion < 6 || !this.eat(tt.eq)) return left\n  var node = this.startNodeAt(startPos, startLoc)\n  node.left = left\n  node.right = this.parseMaybeAssign()\n  return this.finishNode(node, \"AssignmentPattern\")\n}\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\")\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        this.raiseRecoverable(expr.start, \"Argument name clash\")\n      checkClashes[expr.name] = true\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"))\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name)\n      } else {\n        this.declareLexicalName(expr.name)\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) this.raiseRecoverable(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" member expression\")\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0; i < expr.properties.length; i++)\n      this$1.checkLVal(expr.properties[i].value, bindingType, checkClashes)\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0; i$1 < expr.elements.length; i$1++) {\n      var elem = expr.elements[i$1]\n      if (elem) this$1.checkLVal(elem, bindingType, checkClashes)\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes)\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes)\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes)\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\")\n  }\n}\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash) {\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    return\n  var key = prop.key;\n  var name\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\")\n      propHash.proto = true\n    }\n    return\n  }\n  name = \"$\" + name\n  var other = propHash[name]\n  if (other) {\n    var redefinition\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set\n    } else {\n      redefinition = other.init || other[kind]\n    }\n    if (redefinition)\n      this.raiseRecoverable(key.start, \"Redefinition of property\")\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    }\n  }\n  other[kind] = true\n}\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors)\n  if (this.type === tt.comma) {\n    var node = this.startNodeAt(startPos, startLoc)\n    node.expressions = [expr]\n    while (this.eat(tt.comma)) node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors))\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n}\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) return this.parseYield()\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign\n    oldTrailingComma = refDestructuringErrors.trailingComma\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1\n  } else {\n    refDestructuringErrors = new DestructuringErrors\n    ownDestructuringErrors = true\n  }\n\n  var startPos = this.start, startLoc = this.startLoc\n  if (this.type == tt.parenL || this.type == tt.name)\n    this.potentialArrowAt = this.start\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors)\n  if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc)\n  if (this.type.isAssign) {\n    this.checkPatternErrors(refDestructuringErrors, true)\n    if (!ownDestructuringErrors) DestructuringErrors.call(refDestructuringErrors)\n    var node = this.startNodeAt(startPos, startLoc)\n    node.operator = this.value\n    node.left = this.type === tt.eq ? this.toAssignable(left) : left\n    refDestructuringErrors.shorthandAssign = -1 // reset because shorthand default was used correctly\n    this.checkLVal(left)\n    this.next()\n    node.right = this.parseMaybeAssign(noIn)\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) this.checkExpressionErrors(refDestructuringErrors, true)\n  }\n  if (oldParenAssign > -1) refDestructuringErrors.parenthesizedAssign = oldParenAssign\n  if (oldTrailingComma > -1) refDestructuringErrors.trailingComma = oldTrailingComma\n  return left\n}\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc\n  var expr = this.parseExprOps(noIn, refDestructuringErrors)\n  if (this.checkExpressionErrors(refDestructuringErrors)) return expr\n  if (this.eat(tt.question)) {\n    var node = this.startNodeAt(startPos, startLoc)\n    node.test = expr\n    node.consequent = this.parseMaybeAssign()\n    this.expect(tt.colon)\n    node.alternate = this.parseMaybeAssign(noIn)\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n}\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false)\n  if (this.checkExpressionErrors(refDestructuringErrors)) return expr\n  return expr.start == startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n}\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop\n  if (prec != null && (!noIn || this.type !== tt._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === tt.logicalOR || this.type === tt.logicalAND\n      var op = this.value\n      this.next()\n      var startPos = this.start, startLoc = this.startLoc\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn)\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical)\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n}\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc)\n  node.left = left\n  node.operator = op\n  node.right = right\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n}\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr\n  if (this.inAsync && this.isContextual(\"await\")) {\n    expr = this.parseAwait(refDestructuringErrors)\n    sawUnary = true\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === tt.incDec\n    node.operator = this.value\n    node.prefix = true\n    this.next()\n    node.argument = this.parseMaybeUnary(null, true)\n    this.checkExpressionErrors(refDestructuringErrors, true)\n    if (update) this.checkLVal(node.argument)\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\")\n    else sawUnary = true\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\")\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors)\n    if (this.checkExpressionErrors(refDestructuringErrors)) return expr\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc)\n      node$1.operator = this$1.value\n      node$1.prefix = false\n      node$1.argument = expr\n      this$1.checkLVal(expr)\n      this$1.next()\n      expr = this$1.finishNode(node$1, \"UpdateExpression\")\n    }\n  }\n\n  if (!sawUnary && this.eat(tt.starstar))\n    return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false)\n  else\n    return expr\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc\n  var expr = this.parseExprAtom(refDestructuringErrors)\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\"\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) return expr\n  var result = this.parseSubscripts(expr, startPos, startLoc)\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) refDestructuringErrors.parenthesizedAssign = -1\n    if (refDestructuringErrors.parenthesizedBind >= result.start) refDestructuringErrors.parenthesizedBind = -1\n  }\n  return result\n}\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd == base.end && !this.canInsertSemicolon()\n  for (var computed;;) {\n    if ((computed = this$1.eat(tt.bracketL)) || this$1.eat(tt.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc)\n      node.object = base\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true)\n      node.computed = !!computed\n      if (computed) this$1.expect(tt.bracketR)\n      base = this$1.finishNode(node, \"MemberExpression\")\n    } else if (!noCalls && this$1.eat(tt.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos\n      this$1.yieldPos = 0\n      this$1.awaitPos = 0\n      var exprList = this$1.parseExprList(tt.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors)\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(tt.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false)\n        this$1.checkYieldAwaitInDefaultParams()\n        this$1.yieldPos = oldYieldPos\n        this$1.awaitPos = oldAwaitPos\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true)\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos\n      var node$1 = this$1.startNodeAt(startPos, startLoc)\n      node$1.callee = base\n      node$1.arguments = exprList\n      base = this$1.finishNode(node$1, \"CallExpression\")\n    } else if (this$1.type === tt.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc)\n      node$2.tag = base\n      node$2.quasi = this$1.parseTemplate()\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\")\n    } else {\n      return base\n    }\n  }\n}\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt == this.start\n  switch (this.type) {\n  case tt._super:\n    if (!this.inFunction)\n      this.raise(this.start, \"'super' outside of function or class\")\n\n  case tt._this:\n    var type = this.type === tt._this ? \"ThisExpression\" : \"Super\"\n    node = this.startNode()\n    this.next()\n    return this.finishNode(node, type)\n\n  case tt.name:\n    var startPos = this.start, startLoc = this.startLoc\n    var id = this.parseIdent(this.type !== tt.name)\n    if (this.options.ecmaVersion >= 8 && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(tt._function))\n      return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true)\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(tt.arrow))\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false)\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === tt.name) {\n        id = this.parseIdent()\n        if (this.canInsertSemicolon() || !this.eat(tt.arrow))\n          this.unexpected()\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case tt.regexp:\n    var value = this.value\n    node = this.parseLiteral(value.value)\n    node.regex = {pattern: value.pattern, flags: value.flags}\n    return node\n\n  case tt.num: case tt.string:\n    return this.parseLiteral(this.value)\n\n  case tt._null: case tt._true: case tt._false:\n    node = this.startNode()\n    node.value = this.type === tt._null ? null : this.type === tt._true\n    node.raw = this.type.keyword\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case tt.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow)\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        refDestructuringErrors.parenthesizedAssign = start\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        refDestructuringErrors.parenthesizedBind = start\n    }\n    return expr\n\n  case tt.bracketL:\n    node = this.startNode()\n    this.next()\n    node.elements = this.parseExprList(tt.bracketR, true, true, refDestructuringErrors)\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case tt.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case tt._function:\n    node = this.startNode()\n    this.next()\n    return this.parseFunction(node, false)\n\n  case tt._class:\n    return this.parseClass(this.startNode(), false)\n\n  case tt._new:\n    return this.parseNew()\n\n  case tt.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected()\n  }\n}\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode()\n  node.value = value\n  node.raw = this.input.slice(this.start, this.end)\n  this.next()\n  return this.finishNode(node, \"Literal\")\n}\n\npp$3.parseParenExpression = function() {\n  this.expect(tt.parenL)\n  var val = this.parseExpression()\n  this.expect(tt.parenR)\n  return val\n}\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8\n  if (this.options.ecmaVersion >= 6) {\n    this.next()\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc\n    var exprList = [], first = true, lastIsComma = false\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart, innerParenStart\n    this.yieldPos = 0\n    this.awaitPos = 0\n    while (this.type !== tt.parenR) {\n      first ? first = false : this$1.expect(tt.comma)\n      if (allowTrailingComma && this$1.afterTrailingComma(tt.parenR, true)) {\n        lastIsComma = true\n        break\n      } else if (this$1.type === tt.ellipsis) {\n        spreadStart = this$1.start\n        exprList.push(this$1.parseParenItem(this$1.parseRest()))\n        if (this$1.type === tt.comma) this$1.raise(this$1.start, \"Comma is not permitted after the rest element\")\n        break\n      } else {\n        if (this$1.type === tt.parenL && !innerParenStart) {\n          innerParenStart = this$1.start\n        }\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem))\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc\n    this.expect(tt.parenR)\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(tt.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false)\n      this.checkYieldAwaitInDefaultParams()\n      if (innerParenStart) this.unexpected(innerParenStart)\n      this.yieldPos = oldYieldPos\n      this.awaitPos = oldAwaitPos\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) this.unexpected(this.lastTokStart)\n    if (spreadStart) this.unexpected(spreadStart)\n    this.checkExpressionErrors(refDestructuringErrors, true)\n    this.yieldPos = oldYieldPos || this.yieldPos\n    this.awaitPos = oldAwaitPos || this.awaitPos\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc)\n      val.expressions = exprList\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc)\n    } else {\n      val = exprList[0]\n    }\n  } else {\n    val = this.parseParenExpression()\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc)\n    par.expression = val\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n}\n\npp$3.parseParenItem = function(item) {\n  return item\n}\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n}\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = []\n\npp$3.parseNew = function() {\n  var node = this.startNode()\n  var meta = this.parseIdent(true)\n  if (this.options.ecmaVersion >= 6 && this.eat(tt.dot)) {\n    node.meta = meta\n    node.property = this.parseIdent(true)\n    if (node.property.name !== \"target\")\n      this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\")\n    if (!this.inFunction)\n      this.raiseRecoverable(node.start, \"new.target can only be used in functions\")\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true)\n  if (this.eat(tt.parenL)) node.arguments = this.parseExprList(tt.parenR, this.options.ecmaVersion >= 8, false)\n  else node.arguments = empty$1\n  return this.finishNode(node, \"NewExpression\")\n}\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function() {\n  var elem = this.startNode()\n  elem.value = {\n    raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n    cooked: this.value\n  }\n  this.next()\n  elem.tail = this.type === tt.backQuote\n  return this.finishNode(elem, \"TemplateElement\")\n}\n\npp$3.parseTemplate = function() {\n  var this$1 = this;\n\n  var node = this.startNode()\n  this.next()\n  node.expressions = []\n  var curElt = this.parseTemplateElement()\n  node.quasis = [curElt]\n  while (!curElt.tail) {\n    this$1.expect(tt.dollarBraceL)\n    node.expressions.push(this$1.parseExpression())\n    this$1.expect(tt.braceR)\n    node.quasis.push(curElt = this$1.parseTemplateElement())\n  }\n  this.next()\n  return this.finishNode(node, \"TemplateLiteral\")\n}\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {}\n  node.properties = []\n  this.next()\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this$1.expect(tt.comma)\n      if (this$1.afterTrailingComma(tt.braceR)) break\n    } else first = false\n\n    var prop = this$1.startNode(), isGenerator, isAsync, startPos, startLoc\n    if (this$1.options.ecmaVersion >= 6) {\n      prop.method = false\n      prop.shorthand = false\n      if (isPattern || refDestructuringErrors) {\n        startPos = this$1.start\n        startLoc = this$1.startLoc\n      }\n      if (!isPattern)\n        isGenerator = this$1.eat(tt.star)\n    }\n    this$1.parsePropertyName(prop)\n    if (!isPattern && this$1.options.ecmaVersion >= 8 && !isGenerator && !prop.computed &&\n        prop.key.type === \"Identifier\" && prop.key.name === \"async\" && this$1.type !== tt.parenL &&\n        this$1.type !== tt.colon && !this$1.canInsertSemicolon()) {\n      isAsync = true\n      this$1.parsePropertyName(prop, refDestructuringErrors)\n    } else {\n      isAsync = false\n    }\n    this$1.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors)\n    this$1.checkPropClash(prop, propHash)\n    node.properties.push(this$1.finishNode(prop, \"Property\"))\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n}\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors) {\n  if ((isGenerator || isAsync) && this.type === tt.colon)\n    this.unexpected()\n\n  if (this.eat(tt.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors)\n    prop.kind = \"init\"\n  } else if (this.options.ecmaVersion >= 6 && this.type === tt.parenL) {\n    if (isPattern) this.unexpected()\n    prop.kind = \"init\"\n    prop.method = true\n    prop.value = this.parseMethod(isGenerator, isAsync)\n  } else if (this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type != tt.comma && this.type != tt.braceR)) {\n    if (isGenerator || isAsync || isPattern) this.unexpected()\n    prop.kind = prop.key.name\n    this.parsePropertyName(prop)\n    prop.value = this.parseMethod(false)\n    var paramCount = prop.kind === \"get\" ? 0 : 1\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start\n      if (prop.kind === \"get\")\n        this.raiseRecoverable(start, \"getter should have no params\")\n      else\n        this.raiseRecoverable(start, \"setter should have exactly one param\")\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\")\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (this.keywords.test(prop.key.name) ||\n        (this.strict ? this.reservedWordsStrict : this.reservedWords).test(prop.key.name) ||\n        (this.inGenerator && prop.key.name == \"yield\") ||\n        (this.inAsync && prop.key.name == \"await\"))\n      this.raiseRecoverable(prop.key.start, \"'\" + prop.key.name + \"' can not be used as shorthand property\")\n    prop.kind = \"init\"\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key)\n    } else if (this.type === tt.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        refDestructuringErrors.shorthandAssign = this.start\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key)\n    } else {\n      prop.value = prop.key\n    }\n    prop.shorthand = true\n  } else this.unexpected()\n}\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(tt.bracketL)) {\n      prop.computed = true\n      prop.key = this.parseMaybeAssign()\n      this.expect(tt.bracketR)\n      return prop.key\n    } else {\n      prop.computed = false\n    }\n  }\n  return prop.key = this.type === tt.num || this.type === tt.string ? this.parseExprAtom() : this.parseIdent(true)\n}\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false\n    node.expression = false\n  }\n  if (this.options.ecmaVersion >= 8)\n    node.async = false\n}\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction\n\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 6)\n    node.generator = isGenerator\n  if (this.options.ecmaVersion >= 8)\n    node.async = !!isAsync\n\n  this.inGenerator = node.generator\n  this.inAsync = node.async\n  this.yieldPos = 0\n  this.awaitPos = 0\n  this.inFunction = true\n  this.enterFunctionScope()\n\n  this.expect(tt.parenL)\n  node.params = this.parseBindingList(tt.parenR, false, this.options.ecmaVersion >= 8)\n  this.checkYieldAwaitInDefaultParams()\n  this.parseFunctionBody(node, false)\n\n  this.inGenerator = oldInGen\n  this.inAsync = oldInAsync\n  this.yieldPos = oldYieldPos\n  this.awaitPos = oldAwaitPos\n  this.inFunction = oldInFunc\n  return this.finishNode(node, \"FunctionExpression\")\n}\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction\n\n  this.enterFunctionScope()\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 8)\n    node.async = !!isAsync\n\n  this.inGenerator = false\n  this.inAsync = node.async\n  this.yieldPos = 0\n  this.awaitPos = 0\n  this.inFunction = true\n\n  node.params = this.toAssignableList(params, true)\n  this.parseFunctionBody(node, true)\n\n  this.inGenerator = oldInGen\n  this.inAsync = oldInAsync\n  this.yieldPos = oldYieldPos\n  this.awaitPos = oldAwaitPos\n  this.inFunction = oldInFunc\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n}\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== tt.braceL\n  var oldStrict = this.strict, useStrict = false\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign()\n    node.expression = true\n    this.checkParams(node, false)\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params)\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end)\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\")\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels\n    this.labels = []\n    if (useStrict) this.strict = true\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params))\n    node.body = this.parseBlock(false)\n    node.expression = false\n    this.labels = oldLabels\n  }\n  this.exitFunctionScope()\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\")\n  }\n  this.strict = oldStrict\n}\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0; i < params.length; i++)\n    if (params[i].type !== \"Identifier\") return false\n  return true\n}\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {}\n  for (var i = 0; i < node.params.length; i++) this$1.checkLVal(node.params[i], \"var\", allowDuplicates ? null : nameHash)\n}\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(tt.comma)\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) break\n    } else first = false\n\n    var elt\n    if (allowEmpty && this$1.type === tt.comma)\n      elt = null\n    else if (this$1.type === tt.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors)\n      if (refDestructuringErrors && this$1.type === tt.comma && refDestructuringErrors.trailingComma < 0)\n        refDestructuringErrors.trailingComma = this$1.start\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors)\n    }\n    elts.push(elt)\n  }\n  return elts\n}\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal) {\n  var node = this.startNode()\n  if (liberal && this.options.allowReserved == \"never\") liberal = false\n  if (this.type === tt.name) {\n    if (!liberal && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(this.value) &&\n        (this.options.ecmaVersion >= 6 ||\n         this.input.slice(this.start, this.end).indexOf(\"\\\\\") == -1))\n      this.raiseRecoverable(this.start, \"The keyword '\" + this.value + \"' is reserved\")\n    if (this.inGenerator && this.value === \"yield\")\n      this.raiseRecoverable(this.start, \"Can not use 'yield' as identifier inside a generator\")\n    if (this.inAsync && this.value === \"await\")\n      this.raiseRecoverable(this.start, \"Can not use 'await' as identifier inside an async function\")\n    node.name = this.value\n  } else if (liberal && this.type.keyword) {\n    node.name = this.type.keyword\n  } else {\n    this.unexpected()\n  }\n  this.next()\n  return this.finishNode(node, \"Identifier\")\n}\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) this.yieldPos = this.start\n\n  var node = this.startNode()\n  this.next()\n  if (this.type == tt.semi || this.canInsertSemicolon() || (this.type != tt.star && !this.type.startsExpr)) {\n    node.delegate = false\n    node.argument = null\n  } else {\n    node.delegate = this.eat(tt.star)\n    node.argument = this.parseMaybeAssign()\n  }\n  return this.finishNode(node, \"YieldExpression\")\n}\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) this.awaitPos = this.start\n\n  var node = this.startNode()\n  this.next()\n  node.argument = this.parseMaybeUnary(null, true)\n  return this.finishNode(node, \"AwaitExpression\")\n}\n\nvar pp$4 = Parser.prototype\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos)\n  message += \" (\" + loc.line + \":\" + loc.column + \")\"\n  var err = new SyntaxError(message)\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos\n  throw err\n}\n\npp$4.raiseRecoverable = pp$4.raise\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n}\n\nvar pp$5 = Parser.prototype\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0; i < sources.length; i++) {\n    var source = sources[i]\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key]\n      }\n    }\n  }\n  return target\n}\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}})\n}\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop()\n}\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1]\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}}\n\n  this.scopeStack.push(childScope)\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical)\n}\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop()\n  var parentScope = this.scopeStack[this.scopeStack.length - 1]\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar)\n}\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1]\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n}\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1]\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n}\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true\n}\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true\n}\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\"\n  this.start = pos\n  this.end = 0\n  if (parser.options.locations)\n    this.loc = new SourceLocation(parser, loc)\n  if (parser.options.directSourceFile)\n    this.sourceFile = parser.options.directSourceFile\n  if (parser.options.ranges)\n    this.range = [pos, 0]\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n}\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n}\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type\n  node.end = pos\n  if (this.options.locations)\n    node.loc.end = loc\n  if (this.options.ranges)\n    node.range[1] = pos\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n}\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n}\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token\n  this.isExpr = !!isExpr\n  this.preserveSpace = !!preserveSpace\n  this.override = override\n  this.generator = !!generator\n};\n\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", true),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.readTmplToken(); }),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n}\n\nvar pp$7 = Parser.prototype\n\npp$7.initialContext = function() {\n  return [types.b_stat]\n}\n\npp$7.braceIsBlock = function(prevType) {\n  if (prevType === tt.colon) {\n    var parent = this.curContext()\n    if (parent === types.b_stat || parent === types.b_expr)\n      return !parent.isExpr\n  }\n  if (prevType === tt._return)\n    return lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  if (prevType === tt._else || prevType === tt.semi || prevType === tt.eof || prevType === tt.parenR || prevType == tt.arrow)\n    return true\n  if (prevType == tt.braceL)\n    return this.curContext() === types.b_stat\n  return !this.exprAllowed\n}\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 0; i--)\n    if (this$1.context[i].generator) return true\n  return false\n}\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type\n  if (type.keyword && prevType == tt.dot)\n    this.exprAllowed = false\n  else if (update = type.updateContext)\n    update.call(this, prevType)\n  else\n    this.exprAllowed = type.beforeExpr\n}\n\n// Token-specific context update code\n\ntt.parenR.updateContext = tt.braceR.updateContext = function() {\n  if (this.context.length == 1) {\n    this.exprAllowed = true\n    return\n  }\n  var out = this.context.pop(), cur\n  if (out === types.b_stat && (cur = this.curContext()) && cur.token === \"function\") {\n    this.context.pop()\n    this.exprAllowed = false\n  } else if (out === types.b_tmpl) {\n    this.exprAllowed = true\n  } else {\n    this.exprAllowed = !out.isExpr\n  }\n}\n\ntt.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr)\n  this.exprAllowed = true\n}\n\ntt.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl)\n  this.exprAllowed = true\n}\n\ntt.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === tt._if || prevType === tt._for || prevType === tt._with || prevType === tt._while\n  this.context.push(statementParens ? types.p_stat : types.p_expr)\n  this.exprAllowed = true\n}\n\ntt.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n}\n\ntt._function.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== tt.semi && prevType !== tt._else &&\n      !((prevType === tt.colon || prevType === tt.braceL) && this.curContext() === types.b_stat))\n    this.context.push(types.f_expr)\n  this.exprAllowed = false\n}\n\ntt.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    this.context.pop()\n  else\n    this.context.push(types.q_tmpl)\n  this.exprAllowed = false\n}\n\ntt.star.updateContext = function(prevType) {\n  if (prevType == tt._function) {\n    if (this.curContext() === types.f_expr)\n      this.context[this.context.length - 1] = types.f_expr_gen\n    else\n      this.context.push(types.f_gen)\n  }\n  this.exprAllowed = true\n}\n\ntt.name.updateContext = function(prevType) {\n  var allowed = false\n  if (this.options.ecmaVersion >= 6) {\n    if (this.value == \"of\" && !this.exprAllowed ||\n        this.value == \"yield\" && this.inGeneratorContext())\n      allowed = true\n  }\n  this.exprAllowed = allowed\n}\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type\n  this.value = p.value\n  this.start = p.start\n  this.end = p.end\n  if (p.options.locations)\n    this.loc = new SourceLocation(p, p.startLoc, p.endLoc)\n  if (p.options.ranges)\n    this.range = [p.start, p.end]\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype\n\n// Are we running under Rhino?\nvar isRhino = typeof Packages == \"object\" && Object.prototype.toString.call(Packages) == \"[object JavaPackage]\"\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    this.options.onToken(new Token(this))\n\n  this.lastTokEnd = this.end\n  this.lastTokStart = this.start\n  this.lastTokEndLoc = this.endLoc\n  this.lastTokStartLoc = this.startLoc\n  this.nextToken()\n}\n\npp$8.getToken = function() {\n  this.next()\n  return new Token(this)\n}\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken()\n        return {\n          done: token.type === tt.eof,\n          value: token\n        }\n      }\n    }\n  }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n}\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext()\n  if (!curContext || !curContext.preserveSpace) this.skipSpace()\n\n  this.start = this.pos\n  if (this.options.locations) this.startLoc = this.curPosition()\n  if (this.pos >= this.input.length) return this.finishToken(tt.eof)\n\n  if (curContext.override) return curContext.override(this)\n  else this.readToken(this.fullCharCodeAtPos())\n}\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    return this.readWord()\n\n  return this.getTokenFromCode(code)\n}\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos)\n  if (code <= 0xd7ff || code >= 0xe000) return code\n  var next = this.input.charCodeAt(this.pos + 1)\n  return (code << 10) + next - 0x35fdc00\n}\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition()\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2)\n  if (end === -1) this.raise(this.pos - 2, \"Unterminated comment\")\n  this.pos = end + 2\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start\n    var match\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine\n      this$1.lineStart = match.index + match[0].length\n    }\n  }\n  if (this.options.onComment)\n    this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition())\n}\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos\n  var startLoc = this.options.onComment && this.curPosition()\n  var ch = this.input.charCodeAt(this.pos += startSkip)\n  while (this.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n    ++this$1.pos\n    ch = this$1.input.charCodeAt(this$1.pos)\n  }\n  if (this.options.onComment)\n    this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition())\n}\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos)\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos\n      if (this$1.options.locations) {\n        ++this$1.curLine\n        this$1.lineStart = this$1.pos\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment()\n        break\n      case 47:\n        this$1.skipLineComment(2)\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos\n      } else {\n        break loop\n      }\n    }\n  }\n}\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos\n  if (this.options.locations) this.endLoc = this.curPosition()\n  var prevType = this.type\n  this.type = type\n  this.value = val\n\n  this.updateContext(prevType)\n}\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next >= 48 && next <= 57) return this.readNumber(true)\n  var next2 = this.input.charCodeAt(this.pos + 2)\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3\n    return this.finishToken(tt.ellipsis)\n  } else {\n    ++this.pos\n    return this.finishToken(tt.dot)\n  }\n}\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.slash, 1)\n}\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1)\n  var size = 1\n  var tokentype = code === 42 ? tt.star : tt.modulo\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && next === 42) {\n    ++size\n    tokentype = tt.starstar\n    next = this.input.charCodeAt(this.pos + 2)\n  }\n\n  if (next === 61) return this.finishOp(tt.assign, size + 1)\n  return this.finishOp(tokentype, size)\n}\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next === code) return this.finishOp(code === 124 ? tt.logicalOR : tt.logicalAND, 2)\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(code === 124 ? tt.bitwiseOR : tt.bitwiseAND, 1)\n}\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.bitwiseXOR, 1)\n}\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next === code) {\n    if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 &&\n        lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {\n      // A `-->` line comment\n      this.skipLineComment(3)\n      this.skipSpace()\n      return this.nextToken()\n    }\n    return this.finishOp(tt.incDec, 2)\n  }\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.plusMin, 1)\n}\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1)\n  var size = 1\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2\n    if (this.input.charCodeAt(this.pos + size) === 61) return this.finishOp(tt.assign, size + 1)\n    return this.finishOp(tt.bitShift, size)\n  }\n  if (next == 33 && code == 60 && this.input.charCodeAt(this.pos + 2) == 45 &&\n      this.input.charCodeAt(this.pos + 3) == 45) {\n    if (this.inModule) this.unexpected()\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4)\n    this.skipSpace()\n    return this.nextToken()\n  }\n  if (next === 61) size = 2\n  return this.finishOp(tt.relational, size)\n}\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1)\n  if (next === 61) return this.finishOp(tt.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2)\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2\n    return this.finishToken(tt.arrow)\n  }\n  return this.finishOp(code === 61 ? tt.eq : tt.prefix, 1)\n}\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n    // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(tt.parenL)\n  case 41: ++this.pos; return this.finishToken(tt.parenR)\n  case 59: ++this.pos; return this.finishToken(tt.semi)\n  case 44: ++this.pos; return this.finishToken(tt.comma)\n  case 91: ++this.pos; return this.finishToken(tt.bracketL)\n  case 93: ++this.pos; return this.finishToken(tt.bracketR)\n  case 123: ++this.pos; return this.finishToken(tt.braceL)\n  case 125: ++this.pos; return this.finishToken(tt.braceR)\n  case 58: ++this.pos; return this.finishToken(tt.colon)\n  case 63: ++this.pos; return this.finishToken(tt.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) break\n    ++this.pos\n    return this.finishToken(tt.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1)\n    if (next === 120 || next === 88) return this.readRadixNumber(16) // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) return this.readRadixNumber(8) // '0o', '0O' - octal number\n      if (next === 98 || next === 66) return this.readRadixNumber(2) // '0b', '0B' - binary number\n    }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n    // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(tt.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\")\n}\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size)\n  this.pos += size\n  return this.finishToken(type, str)\n}\n\n// Parse a regular expression. Some context-awareness is necessary,\n// since a '/' inside a '[]' set does not end the expression.\n\nfunction tryCreateRegexp(src, flags, throwErrorAt, parser) {\n  try {\n    return new RegExp(src, flags)\n  } catch (e) {\n    if (throwErrorAt !== undefined) {\n      if (e instanceof SyntaxError) parser.raise(throwErrorAt, \"Error parsing regular expression: \" + e.message)\n      throw e\n    }\n  }\n}\n\nvar regexpUnicodeSupport = !!tryCreateRegexp(\"\\uffff\", \"u\")\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) this$1.raise(start, \"Unterminated regular expression\")\n    var ch = this$1.input.charAt(this$1.pos)\n    if (lineBreak.test(ch)) this$1.raise(start, \"Unterminated regular expression\")\n    if (!escaped) {\n      if (ch === \"[\") inClass = true\n      else if (ch === \"]\" && inClass) inClass = false\n      else if (ch === \"/\" && !inClass) break\n      escaped = ch === \"\\\\\"\n    } else escaped = false\n    ++this$1.pos\n  }\n  var content = this.input.slice(start, this.pos)\n  ++this.pos\n  // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n  // here (don't ask).\n  var mods = this.readWord1()\n  var tmp = content, tmpFlags = \"\"\n  if (mods) {\n    var validFlags = /^[gim]*$/\n    if (this.options.ecmaVersion >= 6) validFlags = /^[gimuy]*$/\n    if (!validFlags.test(mods)) this.raise(start, \"Invalid regular expression flag\")\n    if (mods.indexOf(\"u\") >= 0) {\n      if (regexpUnicodeSupport) {\n        tmpFlags = \"u\"\n      } else {\n        // Replace each astral symbol and every Unicode escape sequence that\n        // possibly represents an astral symbol or a paired surrogate with a\n        // single ASCII symbol to avoid throwing on regular expressions that\n        // are only valid in combination with the `/u` flag.\n        // Note: replacing with the ASCII symbol `x` might cause false\n        // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n        // perfectly valid pattern that is equivalent to `[a-b]`, but it would\n        // be replaced by `[x-b]` which throws an error.\n        tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function (_match, code, offset) {\n          code = Number(\"0x\" + code)\n          if (code > 0x10FFFF) this$1.raise(start + offset + 3, \"Code point out of bounds\")\n          return \"x\"\n        })\n        tmp = tmp.replace(/\\\\u([a-fA-F0-9]{4})|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \"x\")\n        tmpFlags = tmpFlags.replace(\"u\", \"\")\n      }\n    }\n  }\n  // Detect invalid regular expressions.\n  var value = null\n  // Rhino's regular expression parser is flaky and throws uncatchable exceptions,\n  // so don't do detection if we are running under Rhino\n  if (!isRhino) {\n    tryCreateRegexp(tmp, tmpFlags, start, this)\n    // Get a regular expression object for this pattern-flag pair, or `null` in\n    // case the current environment doesn't support the flags it uses.\n    value = tryCreateRegexp(content, mods)\n  }\n  return this.finishToken(tt.regexp, {pattern: content, flags: mods, value: value})\n}\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val\n    if (code >= 97) val = code - 97 + 10 // a\n    else if (code >= 65) val = code - 65 + 10 // A\n    else if (code >= 48 && code <= 57) val = code - 48 // 0-9\n    else val = Infinity\n    if (val >= radix) break\n    ++this$1.pos\n    total = total * radix + val\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) return null\n\n  return total\n}\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2 // 0x\n  var val = this.readInt(radix)\n  if (val == null) this.raise(this.start + 2, \"Expected number in radix \" + radix)\n  if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\")\n  return this.finishToken(tt.num, val)\n}\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos, isFloat = false, octal = this.input.charCodeAt(this.pos) === 48\n  if (!startsWithDot && this.readInt(10) === null) this.raise(start, \"Invalid number\")\n  if (octal && this.pos == start + 1) octal = false\n  var next = this.input.charCodeAt(this.pos)\n  if (next === 46 && !octal) { // '.'\n    ++this.pos\n    this.readInt(10)\n    isFloat = true\n    next = this.input.charCodeAt(this.pos)\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos)\n    if (next === 43 || next === 45) ++this.pos // '+-'\n    if (this.readInt(10) === null) this.raise(start, \"Invalid number\")\n    isFloat = true\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\")\n\n  var str = this.input.slice(start, this.pos), val\n  if (isFloat) val = parseFloat(str)\n  else if (!octal || str.length === 1) val = parseInt(str, 10)\n  else if (/[89]/.test(str) || this.strict) this.raise(start, \"Invalid number\")\n  else val = parseInt(str, 8)\n  return this.finishToken(tt.num, val)\n}\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code\n\n  if (ch === 123) {\n    if (this.options.ecmaVersion < 6) this.unexpected()\n    var codePos = ++this.pos\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos)\n    ++this.pos\n    if (code > 0x10FFFF) this.raise(codePos, \"Code point out of bounds\")\n  } else {\n    code = this.readHexChar(4)\n  }\n  return code\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) return String.fromCharCode(code)\n  code -= 0x10000\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) this$1.raise(this$1.start, \"Unterminated string constant\")\n    var ch = this$1.input.charCodeAt(this$1.pos)\n    if (ch === quote) break\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos)\n      out += this$1.readEscapedChar(false)\n      chunkStart = this$1.pos\n    } else {\n      if (isNewLine(ch)) this$1.raise(this$1.start, \"Unterminated string constant\")\n      ++this$1.pos\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++)\n  return this.finishToken(tt.string, out)\n}\n\n// Reads template string tokens.\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) this$1.raise(this$1.start, \"Unterminated template\")\n    var ch = this$1.input.charCodeAt(this$1.pos)\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && this$1.type === tt.template) {\n        if (ch === 36) {\n          this$1.pos += 2\n          return this$1.finishToken(tt.dollarBraceL)\n        } else {\n          ++this$1.pos\n          return this$1.finishToken(tt.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos)\n      return this$1.finishToken(tt.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos)\n      out += this$1.readEscapedChar(true)\n      chunkStart = this$1.pos\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos)\n      ++this$1.pos\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) ++this$1.pos\n      case 10:\n        out += \"\\n\"\n        break\n      default:\n        out += String.fromCharCode(ch)\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine\n        this$1.lineStart = this$1.pos\n      }\n      chunkStart = this$1.pos\n    } else {\n      ++this$1.pos\n    }\n  }\n}\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos)\n  ++this.pos\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) ++this.pos // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0]\n      var octal = parseInt(octalStr, 8)\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1)\n        octal = parseInt(octalStr, 8)\n      }\n      if (octalStr !== \"0\" && (this.strict || inTemplate)) {\n        this.raise(this.pos - 2, \"Octal literal in strict mode\")\n      }\n      this.pos += octalStr.length - 1\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n}\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos\n  var n = this.readInt(16, len)\n  if (n === null) this.raise(codePos, \"Bad character escape sequence\")\n  return n\n}\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false\n  var word = \"\", first = true, chunkStart = this.pos\n  var astral = this.options.ecmaVersion >= 6\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos()\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true\n      word += this$1.input.slice(chunkStart, this$1.pos)\n      var escStart = this$1.pos\n      if (this$1.input.charCodeAt(++this$1.pos) != 117) // \"u\"\n        this$1.raise(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\")\n      ++this$1.pos\n      var esc = this$1.readCodePoint()\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        this$1.raise(escStart, \"Invalid Unicode escape\")\n      word += codePointToString(esc)\n      chunkStart = this$1.pos\n    } else {\n      break\n    }\n    first = false\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n}\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1()\n  var type = tt.name\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word)\n    type = keywordTypes[word]\n  }\n  return this.finishToken(type, word)\n}\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/ternjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/ternjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.0.3\"\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos)\n  p.nextToken()\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\n// eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser, plugins) {\n  parse_dammit = parse // eslint-disable-line camelcase\n  LooseParser = Parser\n  pluginsLoose = plugins\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, parse_dammit, LooseParser, pluginsLoose, addLooseExports, Parser, plugins, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, tt as tokTypes, keywordTypes, TokContext, types as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };","var charToInteger = {};\nvar integerToChar = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split( '' ).forEach( function ( char, i ) {\n\tcharToInteger[ char ] = i;\n\tintegerToChar[ i ] = char;\n});\n\nexport function decode ( string ) {\n\tvar result = [],\n\t\tlen = string.length,\n\t\ti,\n\t\thasContinuationBit,\n\t\tshift = 0,\n\t\tvalue = 0,\n\t\tinteger,\n\t\tshouldNegate;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tinteger = charToInteger[ string[i] ];\n\n\t\tif ( integer === undefined ) {\n\t\t\tthrow new Error( 'Invalid character (' + string[i] + ')' );\n\t\t}\n\n\t\thasContinuationBit = integer & 32;\n\n\t\tinteger &= 31;\n\t\tvalue += integer << shift;\n\n\t\tif ( hasContinuationBit ) {\n\t\t\tshift += 5;\n\t\t} else {\n\t\t\tshouldNegate = value & 1;\n\t\t\tvalue >>= 1;\n\n\t\t\tresult.push( shouldNegate ? -value : value );\n\n\t\t\t// reset\n\t\t\tvalue = shift = 0;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function encode ( value ) {\n\tvar result, i;\n\n\tif ( typeof value === 'number' ) {\n\t\tresult = encodeInteger( value );\n\t} else {\n\t\tresult = '';\n\t\tfor ( i = 0; i < value.length; i += 1 ) {\n\t\t\tresult += encodeInteger( value[i] );\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction encodeInteger ( num ) {\n\tvar result = '', clamped;\n\n\tif ( num < 0 ) {\n\t\tnum = ( -num << 1 ) | 1;\n\t} else {\n\t\tnum <<= 1;\n\t}\n\n\tdo {\n\t\tclamped = num & 31;\n\t\tnum >>= 5;\n\n\t\tif ( num > 0 ) {\n\t\t\tclamped |= 32;\n\t\t}\n\n\t\tresult += integerToChar[ clamped ];\n\t} while ( num > 0 );\n\n\treturn result;\n}\n","import { encode } from 'vlq';\n\nfunction Chunk ( start, end, content ) {\n\tthis.start = start;\n\tthis.end = end;\n\tthis.original = content;\n\n\tthis.intro = '';\n\tthis.outro = '';\n\n\tthis.content = content;\n\tthis.storeName = false;\n\tthis.edited = false;\n\n\t// we make these non-enumerable, for sanity while debugging\n\tObject.defineProperties( this, {\n\t\tprevious: { writable: true, value: null },\n\t\tnext: { writable: true, value: null }\n\t});\n}\n\nChunk.prototype = {\n\tappendLeft: function appendLeft ( content ) {\n\t\tthis.outro += content;\n\t},\n\n\tappendRight: function appendRight ( content ) {\n\t\tthis.intro = this.intro + content;\n\t},\n\n\tclone: function clone () {\n\t\tvar chunk = new Chunk( this.start, this.end, this.original );\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t},\n\n\tcontains: function contains ( index ) {\n\t\treturn this.start < index && index < this.end;\n\t},\n\n\teachNext: function eachNext ( fn ) {\n\t\tvar chunk = this;\n\t\twhile ( chunk ) {\n\t\t\tfn( chunk );\n\t\t\tchunk = chunk.next;\n\t\t}\n\t},\n\n\teachPrevious: function eachPrevious ( fn ) {\n\t\tvar chunk = this;\n\t\twhile ( chunk ) {\n\t\t\tfn( chunk );\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t},\n\n\tedit: function edit ( content, storeName ) {\n\t\tthis.content = content;\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t},\n\n\tprependLeft: function prependLeft ( content ) {\n\t\tthis.outro = content + this.outro;\n\t},\n\n\tprependRight: function prependRight ( content ) {\n\t\tthis.intro = content + this.intro;\n\t},\n\n\tsplit: function split ( index ) {\n\t\tvar sliceIndex = index - this.start;\n\n\t\tvar originalBefore = this.original.slice( 0, sliceIndex );\n\t\tvar originalAfter = this.original.slice( sliceIndex );\n\n\t\tthis.original = originalBefore;\n\n\t\tvar newChunk = new Chunk( index, this.end, originalAfter );\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif ( this.edited ) {\n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit( '', false );\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif ( newChunk.next ) { newChunk.next.previous = newChunk; }\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t},\n\n\ttoString: function toString () {\n\t\treturn this.intro + this.content + this.outro;\n\t},\n\n\ttrimEnd: function trimEnd ( rx ) {\n\t\tthis.outro = this.outro.replace( rx, '' );\n\t\tif ( this.outro.length ) { return true; }\n\n\t\tvar trimmed = this.content.replace( rx, '' );\n\n\t\tif ( trimmed.length ) {\n\t\t\tif ( trimmed !== this.content ) {\n\t\t\t\tthis.split( this.start + trimmed.length ).edit( '', false );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit( '', false );\n\n\t\t\tthis.intro = this.intro.replace( rx, '' );\n\t\t\tif ( this.intro.length ) { return true; }\n\t\t}\n\t},\n\n\ttrimStart: function trimStart ( rx ) {\n\t\tthis.intro = this.intro.replace( rx, '' );\n\t\tif ( this.intro.length ) { return true; }\n\n\t\tvar trimmed = this.content.replace( rx, '' );\n\n\t\tif ( trimmed.length ) {\n\t\t\tif ( trimmed !== this.content ) {\n\t\t\t\tthis.split( this.end - trimmed.length );\n\t\t\t\tthis.edit( '', false );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit( '', false );\n\n\t\t\tthis.outro = this.outro.replace( rx, '' );\n\t\t\tif ( this.outro.length ) { return true; }\n\t\t}\n\t}\n};\n\nvar _btoa;\n\nif ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {\n\t_btoa = window.btoa;\n} else if ( typeof Buffer === 'function' ) {\n\t_btoa = function (str) { return new Buffer( str ).toString( 'base64' ); };\n} else {\n\t_btoa = function () {\n\t\tthrow new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );\n\t};\n}\n\nvar btoa = _btoa;\n\nfunction SourceMap ( properties ) {\n\tthis.version = 3;\n\n\tthis.file           = properties.file;\n\tthis.sources        = properties.sources;\n\tthis.sourcesContent = properties.sourcesContent;\n\tthis.names          = properties.names;\n\tthis.mappings       = properties.mappings;\n}\n\nSourceMap.prototype = {\n\ttoString: function toString () {\n\t\treturn JSON.stringify( this );\n\t},\n\n\ttoUrl: function toUrl () {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\n\t}\n};\n\nfunction guessIndent ( code ) {\n\tvar lines = code.split( '\\n' );\n\n\tvar tabbed = lines.filter( function (line) { return /^\\t+/.test( line ); } );\n\tvar spaced = lines.filter( function (line) { return /^ {2,}/.test( line ); } );\n\n\tif ( tabbed.length === 0 && spaced.length === 0 ) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif ( tabbed.length >= spaced.length ) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tvar min = spaced.reduce( function ( previous, current ) {\n\t\tvar numSpaces = /^ +/.exec( current )[0].length;\n\t\treturn Math.min( numSpaces, previous );\n\t}, Infinity );\n\n\treturn new Array( min + 1 ).join( ' ' );\n}\n\nfunction getRelativePath ( from, to ) {\n\tvar fromParts = from.split( /[\\/\\\\]/ );\n\tvar toParts = to.split( /[\\/\\\\]/ );\n\n\tfromParts.pop(); // get dirname\n\n\twhile ( fromParts[0] === toParts[0] ) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif ( fromParts.length ) {\n\t\tvar i = fromParts.length;\n\t\twhile ( i-- ) { fromParts[i] = '..'; }\n\t}\n\n\treturn fromParts.concat( toParts ).join( '/' );\n}\n\nvar toString = Object.prototype.toString;\n\nfunction isObject ( thing ) {\n\treturn toString.call( thing ) === '[object Object]';\n}\n\nfunction getLocator ( source ) {\n\tvar originalLines = source.split( '\\n' );\n\n\tvar start = 0;\n\tvar lineRanges = originalLines.map( function ( line, i ) {\n\t\tvar end = start + line.length + 1;\n\t\tvar range = { start: start, end: end, line: i };\n\n\t\tstart = end;\n\t\treturn range;\n\t});\n\n\tvar i = 0;\n\n\tfunction rangeContains ( range, index ) {\n\t\treturn range.start <= index && index < range.end;\n\t}\n\n\tfunction getLocation ( range, index ) {\n\t\treturn { line: range.line, column: index - range.start };\n\t}\n\n\treturn function locate ( index ) {\n\t\tvar range = lineRanges[i];\n\n\t\tvar d = index >= range.end ? 1 : -1;\n\n\t\twhile ( range ) {\n\t\t\tif ( rangeContains( range, index ) ) { return getLocation( range, index ); }\n\n\t\t\ti += d;\n\t\t\trange = lineRanges[i];\n\t\t}\n\t};\n}\n\nfunction Mappings ( hires ) {\n\tvar this$1 = this;\n\n\tvar offsets = {\n\t\tgeneratedCodeColumn: 0,\n\t\tsourceIndex: 0,\n\t\tsourceCodeLine: 0,\n\t\tsourceCodeColumn: 0,\n\t\tsourceCodeName: 0\n\t};\n\n\tvar generatedCodeLine = 0;\n\tvar generatedCodeColumn = 0;\n\n\tthis.raw = [];\n\tvar rawSegments = this.raw[ generatedCodeLine ] = [];\n\n\tvar pending = null;\n\n\tthis.addEdit = function ( sourceIndex, content, original, loc, nameIndex ) {\n\t\tif ( content.length ) {\n\t\t\trawSegments.push([\n\t\t\t\tgeneratedCodeColumn,\n\t\t\t\tsourceIndex,\n\t\t\t\tloc.line,\n\t\t\t\tloc.column,\n\t\t\t\tnameIndex ]);\n\t\t} else if ( pending ) {\n\t\t\trawSegments.push( pending );\n\t\t}\n\n\t\tthis$1.advance( content );\n\t\tpending = null;\n\t};\n\n\tthis.addUneditedChunk = function ( sourceIndex, chunk, original, loc, sourcemapLocations ) {\n\t\tvar originalCharIndex = chunk.start;\n\t\tvar first = true;\n\n\t\twhile ( originalCharIndex < chunk.end ) {\n\t\t\tif ( hires || first || sourcemapLocations[ originalCharIndex ] ) {\n\t\t\t\trawSegments.push([\n\t\t\t\t\tgeneratedCodeColumn,\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tloc.line,\n\t\t\t\t\tloc.column,\n\t\t\t\t\t-1\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\tif ( original[ originalCharIndex ] === '\\n' ) {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tgeneratedCodeLine += 1;\n\t\t\t\tthis$1.raw[ generatedCodeLine ] = rawSegments = [];\n\t\t\t\tgeneratedCodeColumn = 0;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tgeneratedCodeColumn += 1;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t\tfirst = false;\n\t\t}\n\n\t\tpending = [\n\t\t\tgeneratedCodeColumn,\n\t\t\tsourceIndex,\n\t\t\tloc.line,\n\t\t\tloc.column,\n\t\t\t-1 ];\n\t};\n\n\tthis.advance = function (str) {\n\t\tif ( !str ) { return; }\n\n\t\tvar lines = str.split( '\\n' );\n\t\tvar lastLine = lines.pop();\n\n\t\tif ( lines.length ) {\n\t\t\tgeneratedCodeLine += lines.length;\n\t\t\tthis$1.raw[ generatedCodeLine ] = rawSegments = [];\n\t\t\tgeneratedCodeColumn = lastLine.length;\n\t\t} else {\n\t\t\tgeneratedCodeColumn += lastLine.length;\n\t\t}\n\t};\n\n\tthis.encode = function () {\n\t\treturn this$1.raw.map( function (segments) {\n\t\t\tvar generatedCodeColumn = 0;\n\n\t\t\treturn segments.map( function (segment) {\n\t\t\t\tvar arr = [\n\t\t\t\t\tsegment[0] - generatedCodeColumn,\n\t\t\t\t\tsegment[1] - offsets.sourceIndex,\n\t\t\t\t\tsegment[2] - offsets.sourceCodeLine,\n\t\t\t\t\tsegment[3] - offsets.sourceCodeColumn\n\t\t\t\t];\n\n\t\t\t\tgeneratedCodeColumn = segment[0];\n\t\t\t\toffsets.sourceIndex = segment[1];\n\t\t\t\toffsets.sourceCodeLine = segment[2];\n\t\t\t\toffsets.sourceCodeColumn = segment[3];\n\n\t\t\t\tif ( ~segment[4] ) {\n\t\t\t\t\tarr.push( segment[4] - offsets.sourceCodeName );\n\t\t\t\t\toffsets.sourceCodeName = segment[4];\n\t\t\t\t}\n\n\t\t\t\treturn encode( arr );\n\t\t\t}).join( ',' );\n\t\t}).join( ';' );\n\t};\n}\n\nvar Stats = function Stats () {\n\tObject.defineProperties( this, {\n\t\tstartTimes: { value: {} }\n\t});\n};\n\nStats.prototype.time = function time ( label ) {\n\tthis.startTimes[ label ] = process.hrtime();\n};\n\nStats.prototype.timeEnd = function timeEnd ( label ) {\n\tvar elapsed = process.hrtime( this.startTimes[ label ] );\n\n\tif ( !this[ label ] ) { this[ label ] = 0; }\n\tthis[ label ] += elapsed[0] * 1e3 + elapsed[1] * 1e-6;\n};\n\nvar warned = {\n\tinsertLeft: false,\n\tinsertRight: false\n};\n\nfunction MagicString$1 ( string, options ) {\n\tif ( options === void 0 ) options = {};\n\n\tvar chunk = new Chunk( 0, string.length, string );\n\n\tObject.defineProperties( this, {\n\t\toriginal:              { writable: true, value: string },\n\t\toutro:                 { writable: true, value: '' },\n\t\tintro:                 { writable: true, value: '' },\n\t\tfirstChunk:            { writable: true, value: chunk },\n\t\tlastChunk:             { writable: true, value: chunk },\n\t\tlastSearchedChunk:     { writable: true, value: chunk },\n\t\tbyStart:               { writable: true, value: {} },\n\t\tbyEnd:                 { writable: true, value: {} },\n\t\tfilename:              { writable: true, value: options.filename },\n\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\tsourcemapLocations:    { writable: true, value: {} },\n\t\tstoredNames:           { writable: true, value: {} },\n\t\tindentStr:             { writable: true, value: guessIndent( string ) }\n\t});\n\n\tthis.byStart[ 0 ] = chunk;\n\tthis.byEnd[ string.length ] = chunk;\n}\n\nMagicString$1.prototype = {\n\taddSourcemapLocation: function addSourcemapLocation ( char ) {\n\t\tthis.sourcemapLocations[ char ] = true;\n\t},\n\n\tappend: function append ( content ) {\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'outro content must be a string' ); }\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t},\n\n\tappendLeft: function appendLeft ( index, content ) {\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'inserted content must be a string' ); }\n\n\t\tthis._split( index );\n\n\t\tvar chunk = this.byEnd[ index ];\n\n\t\tif ( chunk ) {\n\t\t\tchunk.appendLeft( content );\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tappendRight: function appendRight ( index, content ) {\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'inserted content must be a string' ); }\n\n\t\tthis._split( index );\n\n\t\tvar chunk = this.byStart[ index ];\n\n\t\tif ( chunk ) {\n\t\t\tchunk.appendRight( content );\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function clone () {\n\t\tvar cloned = new MagicString$1( this.original, { filename: this.filename });\n\n\t\tvar originalChunk = this.firstChunk;\n\t\tvar clonedChunk = cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone();\n\n\t\twhile ( originalChunk ) {\n\t\t\tcloned.byStart[ clonedChunk.start ] = clonedChunk;\n\t\t\tcloned.byEnd[ clonedChunk.end ] = clonedChunk;\n\n\t\t\tvar nextOriginalChunk = originalChunk.next;\n\t\t\tvar nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif ( nextClonedChunk ) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif ( this.indentExclusionRanges ) {\n\t\t\tcloned.indentExclusionRanges = typeof this.indentExclusionRanges[0] === 'number' ?\n\t\t\t\t[ this.indentExclusionRanges[0], this.indentExclusionRanges[1] ] :\n\t\t\t\tthis.indentExclusionRanges.map( function (range) { return [ range.start, range.end ]; } );\n\t\t}\n\n\t\tObject.keys( this.sourcemapLocations ).forEach( function (loc) {\n\t\t\tcloned.sourcemapLocations[ loc ] = true;\n\t\t});\n\n\t\treturn cloned;\n\t},\n\n\tgenerateMap: function generateMap ( options ) {\n\t\tvar this$1 = this;\n\n\t\toptions = options || {};\n\n\t\tvar sourceIndex = 0;\n\t\tvar names = Object.keys( this.storedNames );\n\t\tvar mappings = new Mappings( options.hires );\n\n\t\tvar locate = getLocator( this.original );\n\n\t\tif ( this.intro ) {\n\t\t\tmappings.advance( this.intro );\n\t\t}\n\n\t\tthis.firstChunk.eachNext( function (chunk) {\n\t\t\tvar loc = locate( chunk.start );\n\n\t\t\tif ( chunk.intro.length ) { mappings.advance( chunk.intro ); }\n\n\t\t\tif ( chunk.edited ) {\n\t\t\t\tmappings.addEdit( sourceIndex, chunk.content, chunk.original, loc, chunk.storeName ? names.indexOf( chunk.original ) : -1 );\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk( sourceIndex, chunk, this$1.original, loc, this$1.sourcemapLocations );\n\t\t\t}\n\n\t\t\tif ( chunk.outro.length ) { mappings.advance( chunk.outro ); }\n\t\t});\n\n\t\tvar map = new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],\n\t\t\tsourcesContent: options.includeContent ? [ this.original ] : [ null ],\n\t\t\tnames: names,\n\t\t\tmappings: mappings.encode()\n\t\t});\n\t\treturn map;\n\t},\n\n\tgetIndentString: function getIndentString () {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t},\n\n\tindent: function indent ( indentStr, options ) {\n\t\tvar this$1 = this;\n\n\t\tvar pattern = /^[^\\r\\n]/gm;\n\n\t\tif ( isObject( indentStr ) ) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\\t' );\n\n\t\tif ( indentStr === '' ) { return this; } // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tvar isExcluded = {};\n\n\t\tif ( options.exclude ) {\n\t\t\tvar exclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;\n\t\t\texclusions.forEach( function (exclusion) {\n\t\t\t\tfor ( var i = exclusion[0]; i < exclusion[1]; i += 1 ) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvar shouldIndentNextCharacter = options.indentStart !== false;\n\t\tvar replacer = function (match) {\n\t\t\tif ( shouldIndentNextCharacter ) { return (\"\" + indentStr + match); }\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace( pattern, replacer );\n\n\t\tvar charIndex = 0;\n\n\t\tvar chunk = this.firstChunk;\n\n\t\twhile ( chunk ) {\n\t\t\tvar end = chunk.end;\n\n\t\t\tif ( chunk.edited ) {\n\t\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\t\tchunk.content = chunk.content.replace( pattern, replacer );\n\n\t\t\t\t\tif ( chunk.content.length ) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[ chunk.content.length - 1 ] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile ( charIndex < end ) {\n\t\t\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\t\t\tvar char = this$1.original[ charIndex ];\n\n\t\t\t\t\t\tif ( char === '\\n' ) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if ( char !== '\\r' && shouldIndentNextCharacter ) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif ( charIndex === chunk.start ) {\n\t\t\t\t\t\t\t\tchunk.prependRight( indentStr );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar rhs = chunk.split( charIndex );\n\t\t\t\t\t\t\t\trhs.prependRight( indentStr );\n\n\t\t\t\t\t\t\t\tthis$1.byStart[ charIndex ] = rhs;\n\t\t\t\t\t\t\t\tthis$1.byEnd[ charIndex ] = chunk;\n\n\t\t\t\t\t\t\t\tchunk = rhs;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace( pattern, replacer );\n\n\t\treturn this;\n\t},\n\n\tinsert: function insert () {\n\t\tthrow new Error( 'magicString.insert(...) is deprecated. Use insertRight(...) or insertLeft(...)' );\n\t},\n\n\tinsertLeft: function insertLeft ( index, content ) {\n\t\tif ( !warned.insertLeft ) {\n\t\t\tconsole.warn( 'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead' ); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft( index, content );\n\t},\n\n\tinsertRight: function insertRight ( index, content ) {\n\t\tif ( !warned.insertRight ) {\n\t\t\tconsole.warn( 'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead' ); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight( index, content );\n\t},\n\n\tmove: function move ( start, end, index ) {\n\t\tif ( index >= start && index <= end ) { throw new Error( 'Cannot move a selection inside itself' ); }\n\n\t\tthis._split( start );\n\t\tthis._split( end );\n\t\tthis._split( index );\n\n\t\tvar first = this.byStart[ start ];\n\t\tvar last = this.byEnd[ end ];\n\n\t\tvar oldLeft = first.previous;\n\t\tvar oldRight = last.next;\n\n\t\tvar newRight = this.byStart[ index ];\n\t\tif ( !newRight && last === this.lastChunk ) { return this; }\n\t\tvar newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif ( oldLeft ) { oldLeft.next = oldRight; }\n\t\tif ( oldRight ) { oldRight.previous = oldLeft; }\n\n\t\tif ( newLeft ) { newLeft.next = first; }\n\t\tif ( newRight ) { newRight.previous = last; }\n\n\t\tif ( !first.previous ) { this.firstChunk = last.next; }\n\t\tif ( !last.next ) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight;\n\n\t\tif ( !newLeft ) { this.firstChunk = first; }\n\t\tif ( !newRight ) { this.lastChunk = last; }\n\n\t\treturn this;\n\t},\n\n\toverwrite: function overwrite ( start, end, content, storeName ) {\n\t\tvar this$1 = this;\n\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'replacement content must be a string' ); }\n\n\t\twhile ( start < 0 ) { start += this$1.original.length; }\n\t\twhile ( end < 0 ) { end += this$1.original.length; }\n\n\t\tif ( end > this.original.length ) { throw new Error( 'end is out of bounds' ); }\n\t\tif ( start === end ) { throw new Error( 'Cannot overwrite a zero-length range – use insertLeft or insertRight instead' ); }\n\n\t\tthis._split( start );\n\t\tthis._split( end );\n\n\t\tif ( storeName ) {\n\t\t\tvar original = this.original.slice( start, end );\n\t\t\tthis.storedNames[ original ] = true;\n\t\t}\n\n\t\tvar first = this.byStart[ start ];\n\t\tvar last = this.byEnd[ end ];\n\n\t\tif ( first ) {\n\t\t\tif ( end > first.end && first.next !== this.byStart[ first.end ] ) {\n\t\t\t\tthrow new Error( 'Cannot overwrite across a split point' );\n\t\t\t}\n\n\t\t\tfirst.edit( content, storeName );\n\n\t\t\tif ( last ) {\n\t\t\t\tfirst.next = last.next;\n\t\t\t} else {\n\t\t\t\tfirst.next = null;\n\t\t\t\tthis.lastChunk = first;\n\t\t\t}\n\n\t\t\tfirst.original = this.original.slice( start, end );\n\t\t\tfirst.end = end;\n\t\t}\n\n\t\telse {\n\t\t\t// must be inserting at the end\n\t\t\tvar newChunk = new Chunk( start, end, '' ).edit( content, storeName );\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tprepend: function prepend ( content ) {\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'outro content must be a string' ); }\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t},\n\n\tprependLeft: function prependLeft ( index, content ) {\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'inserted content must be a string' ); }\n\n\t\tthis._split( index );\n\n\t\tvar chunk = this.byEnd[ index ];\n\n\t\tif ( chunk ) {\n\t\t\tchunk.prependLeft( content );\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tprependRight: function prependRight ( index, content ) {\n\t\tif ( typeof content !== 'string' ) { throw new TypeError( 'inserted content must be a string' ); }\n\n\t\tthis._split( index );\n\n\t\tvar chunk = this.byStart[ index ];\n\n\t\tif ( chunk ) {\n\t\t\tchunk.prependRight( content );\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremove: function remove ( start, end ) {\n\t\tvar this$1 = this;\n\n\t\twhile ( start < 0 ) { start += this$1.original.length; }\n\t\twhile ( end < 0 ) { end += this$1.original.length; }\n\n\t\tif ( start === end ) { return this; }\n\n\t\tif ( start < 0 || end > this.original.length ) { throw new Error( 'Character is out of bounds' ); }\n\t\tif ( start > end ) { throw new Error( 'end must be greater than start' ); }\n\n\t\tthis._split( start );\n\t\tthis._split( end );\n\n\t\tvar chunk = this.byStart[ start ];\n\n\t\twhile ( chunk ) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit( '' );\n\n\t\t\tchunk = end > chunk.end ? this$1.byStart[ chunk.end ] : null;\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tslice: function slice ( start, end ) {\n\t\tvar this$1 = this;\n\t\tif ( start === void 0 ) start = 0;\n\t\tif ( end === void 0 ) end = this.original.length;\n\n\t\twhile ( start < 0 ) { start += this$1.original.length; }\n\t\twhile ( end < 0 ) { end += this$1.original.length; }\n\n\t\tvar result = '';\n\n\t\t// find start chunk\n\t\tvar chunk = this.firstChunk;\n\t\twhile ( chunk && ( chunk.start > start || chunk.end <= start ) ) {\n\n\t\t\t// found end chunk before start\n\t\t\tif ( chunk.start < end && chunk.end >= end ) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif ( chunk && chunk.edited && chunk.start !== start ) { throw new Error((\"Cannot use replaced character \" + start + \" as slice start anchor.\")); }\n\n\t\tvar startChunk = chunk;\n\t\twhile ( chunk ) {\n\t\t\tif ( chunk.intro && ( startChunk !== chunk || chunk.start === start ) ) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tvar containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif ( containsEnd && chunk.edited && chunk.end !== end ) { throw new Error((\"Cannot use replaced character \" + end + \" as slice end anchor.\")); }\n\n\t\t\tvar sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tvar sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice( sliceStart, sliceEnd );\n\n\t\t\tif ( chunk.outro && ( !containsEnd || chunk.end === end ) ) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif ( containsEnd ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\t// TODO deprecate this? not really very useful\n\tsnip: function snip ( start, end ) {\n\t\tvar clone = this.clone();\n\t\tclone.remove( 0, start );\n\t\tclone.remove( end, clone.original.length );\n\n\t\treturn clone;\n\t},\n\n\t_split: function _split ( index ) {\n\t\tvar this$1 = this;\n\n\t\tif ( this.byStart[ index ] || this.byEnd[ index ] ) { return; }\n\n\t\tvar chunk = this.lastSearchedChunk;\n\t\tvar searchForward = index > chunk.end;\n\n\t\twhile ( true ) {\n\t\t\tif ( chunk.contains( index ) ) { return this$1._splitChunk( chunk, index ); }\n\n\t\t\tchunk = searchForward ?\n\t\t\t\tthis$1.byStart[ chunk.end ] :\n\t\t\t\tthis$1.byEnd[ chunk.start ];\n\t\t}\n\t},\n\n\t_splitChunk: function _splitChunk ( chunk, index ) {\n\t\tif ( chunk.edited && chunk.content.length ) { // zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tvar loc = getLocator( this.original )( index );\n\t\t\tthrow new Error( (\"Cannot split a chunk that has already been edited (\" + (loc.line) + \":\" + (loc.column) + \" – \\\"\" + (chunk.original) + \"\\\")\") );\n\t\t}\n\n\t\tvar newChunk = chunk.split( index );\n\n\t\tthis.byEnd[ index ] = chunk;\n\t\tthis.byStart[ index ] = newChunk;\n\t\tthis.byEnd[ newChunk.end ] = newChunk;\n\n\t\tif ( chunk === this.lastChunk ) { this.lastChunk = newChunk; }\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\treturn true;\n\t},\n\n\ttoString: function toString () {\n\t\tvar str = this.intro;\n\n\t\tvar chunk = this.firstChunk;\n\t\twhile ( chunk ) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t},\n\n\ttrimLines: function trimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim: function trim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimEnd: function trimEnd ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tthis.outro = this.outro.replace( rx, '' );\n\t\tif ( this.outro.length ) { return this; }\n\n\t\tvar chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tvar end = chunk.end;\n\t\t\tvar aborted = chunk.trimEnd( rx );\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif ( chunk.end !== end ) {\n\t\t\t\tthis$1.lastChunk = chunk.next;\n\n\t\t\t\tthis$1.byEnd[ chunk.end ] = chunk;\n\t\t\t\tthis$1.byStart[ chunk.next.start ] = chunk.next;\n\t\t\t}\n\n\t\t\tif ( aborted ) { return this$1; }\n\t\t\tchunk = chunk.previous;\n\t\t} while ( chunk );\n\n\t\treturn this;\n\t},\n\n\ttrimStart: function trimStart ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\n\t\tthis.intro = this.intro.replace( rx, '' );\n\t\tif ( this.intro.length ) { return this; }\n\n\t\tvar chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tvar end = chunk.end;\n\t\t\tvar aborted = chunk.trimStart( rx );\n\n\t\t\tif ( chunk.end !== end ) {\n\t\t\t\t// special case...\n\t\t\t\tif ( chunk === this$1.lastChunk ) { this$1.lastChunk = chunk.next; }\n\n\t\t\t\tthis$1.byEnd[ chunk.end ] = chunk;\n\t\t\t\tthis$1.byStart[ chunk.next.start ] = chunk.next;\n\t\t\t}\n\n\t\t\tif ( aborted ) { return this$1; }\n\t\t\tchunk = chunk.next;\n\t\t} while ( chunk );\n\n\t\treturn this;\n\t}\n};\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\n\nfunction Bundle ( options ) {\n\tif ( options === void 0 ) options = {};\n\n\tthis.intro = options.intro || '';\n\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\n\tthis.sources = [];\n\n\tthis.uniqueSources = [];\n\tthis.uniqueSourceIndexByFilename = {};\n}\n\nBundle.prototype = {\n\taddSource: function addSource ( source ) {\n\t\tif ( source instanceof MagicString$1 ) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator\n\t\t\t});\n\t\t}\n\n\t\tif ( !isObject( source ) || !source.content ) {\n\t\t\tthrow new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );\n\t\t}\n\n\t\t[ 'filename', 'indentExclusionRanges', 'separator' ].forEach( function (option) {\n\t\t\tif ( !hasOwnProp.call( source, option ) ) { source[ option ] = source.content[ option ]; }\n\t\t});\n\n\t\tif ( source.separator === undefined ) { // TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif ( source.filename ) {\n\t\t\tif ( !hasOwnProp.call( this.uniqueSourceIndexByFilename, source.filename ) ) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[ source.filename ] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tvar uniqueSource = this.uniqueSources[ this.uniqueSourceIndexByFilename[ source.filename ] ];\n\t\t\t\tif ( source.content.original !== uniqueSource.content ) {\n\t\t\t\t\tthrow new Error( (\"Illegal source: same filename (\" + (source.filename) + \"), different contents\") );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push( source );\n\t\treturn this;\n\t},\n\n\tappend: function append ( str, options ) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString$1( str ),\n\t\t\tseparator: ( options && options.separator ) || ''\n\t\t});\n\n\t\treturn this;\n\t},\n\n\tclone: function clone () {\n\t\tvar bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator\n\t\t});\n\n\t\tthis.sources.forEach( function (source) {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t},\n\n\tgenerateMap: function generateMap ( options ) {\n\t\tvar this$1 = this;\n\t\tif ( options === void 0 ) options = {};\n\n\t\tvar names = [];\n\t\tthis.sources.forEach( function (source) {\n\t\t\tObject.keys( source.content.storedNames ).forEach( function (name) {\n\t\t\t\tif ( !~names.indexOf( name ) ) { names.push( name ); }\n\t\t\t});\n\t\t});\n\n\t\tvar mappings = new Mappings( options.hires );\n\n\t\tif ( this.intro ) {\n\t\t\tmappings.advance( this.intro );\n\t\t}\n\n\t\tthis.sources.forEach( function ( source, i ) {\n\t\t\tif ( i > 0 ) {\n\t\t\t\tmappings.advance( this$1.separator );\n\t\t\t}\n\n\t\t\tvar sourceIndex = source.filename ? this$1.uniqueSourceIndexByFilename[ source.filename ] : -1;\n\t\t\tvar magicString = source.content;\n\t\t\tvar locate = getLocator( magicString.original );\n\n\t\t\tif ( magicString.intro ) {\n\t\t\t\tmappings.advance( magicString.intro );\n\t\t\t}\n\n\t\t\tmagicString.firstChunk.eachNext( function (chunk) {\n\t\t\t\tvar loc = locate( chunk.start );\n\n\t\t\t\tif ( chunk.intro.length ) { mappings.advance( chunk.intro ); }\n\n\t\t\t\tif ( source.filename ) {\n\t\t\t\t\tif ( chunk.edited ) {\n\t\t\t\t\t\tmappings.addEdit( sourceIndex, chunk.content, chunk.original, loc, chunk.storeName ? names.indexOf( chunk.original ) : -1 );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappings.addUneditedChunk( sourceIndex, chunk, magicString.original, loc, magicString.sourcemapLocations );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tmappings.advance( chunk.content );\n\t\t\t\t}\n\n\t\t\t\tif ( chunk.outro.length ) { mappings.advance( chunk.outro ); }\n\t\t\t});\n\n\t\t\tif ( magicString.outro ) {\n\t\t\t\tmappings.advance( magicString.outro );\n\t\t\t}\n\t\t});\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: this.uniqueSources.map( function (source) {\n\t\t\t\treturn options.file ? getRelativePath( options.file, source.filename ) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map( function (source) {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames: names,\n\t\t\tmappings: mappings.encode()\n\t\t});\n\t},\n\n\tgetIndentString: function getIndentString () {\n\t\tvar indentStringCounts = {};\n\n\t\tthis.sources.forEach( function (source) {\n\t\t\tvar indentStr = source.content.indentStr;\n\n\t\t\tif ( indentStr === null ) { return; }\n\n\t\t\tif ( !indentStringCounts[ indentStr ] ) { indentStringCounts[ indentStr ] = 0; }\n\t\t\tindentStringCounts[ indentStr ] += 1;\n\t\t});\n\n\t\treturn ( Object.keys( indentStringCounts ).sort( function ( a, b ) {\n\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t})[0] ) || '\\t';\n\t},\n\n\tindent: function indent ( indentStr ) {\n\t\tvar this$1 = this;\n\n\t\tif ( !arguments.length ) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif ( indentStr === '' ) { return this; } // noop\n\n\t\tvar trailingNewline = !this.intro || this.intro.slice( -1 ) === '\\n';\n\n\t\tthis.sources.forEach( function ( source, i ) {\n\t\t\tvar separator = source.separator !== undefined ? source.separator : this$1.separator;\n\t\t\tvar indentStart = trailingNewline || ( i > 0 && /\\r?\\n$/.test( separator ) );\n\n\t\t\tsource.content.indent( indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart: indentStart//: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\t// TODO this is a very slow way to determine this\n\t\t\ttrailingNewline = source.content.toString().slice( 0, -1 ) === '\\n';\n\t\t});\n\n\t\tif ( this.intro ) {\n\t\t\tthis.intro = indentStr + this.intro.replace( /^[^\\n]/gm, function ( match, index ) {\n\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tprepend: function prepend ( str ) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t},\n\n\ttoString: function toString () {\n\t\tvar this$1 = this;\n\n\t\tvar body = this.sources.map( function ( source, i ) {\n\t\t\tvar separator = source.separator !== undefined ? source.separator : this$1.separator;\n\t\t\tvar str = ( i > 0 ? separator : '' ) + source.content.toString();\n\n\t\t\treturn str;\n\t\t}).join( '' );\n\n\t\treturn this.intro + body;\n\t},\n\n\ttrimLines: function trimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim: function trim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimStart: function trimStart ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\t\tthis.intro = this.intro.replace( rx, '' );\n\n\t\tif ( !this.intro ) {\n\t\t\tvar source;\n\t\t\tvar i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this$1.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimStart( charType );\n\t\t\t\ti += 1;\n\t\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttrimEnd: function trimEnd ( charType ) {\n\t\tvar this$1 = this;\n\n\t\tvar rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tvar source;\n\t\tvar i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this$1.sources[i];\n\n\t\t\tif ( !source ) {\n\t\t\t\tthis$1.intro = this$1.intro.replace( rx, '' );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsource.content.trimEnd( charType );\n\t\t\ti -= 1;\n\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\n\t\treturn this;\n\t}\n};\n\nexport { Bundle };export default MagicString$1;\n//# sourceMappingURL=magic-string.es.js.map\n","export default {\n\tProgram: [ 'body' ],\n\tLiteral: []\n};\n","export const UNKNOWN = {};\nexport const TRUTHY = {};\nexport const FALSY = {};\n","import wrap from './wrap.js';\nimport keys from './keys.js';\nimport { UNKNOWN } from '../utils/sentinels.js';\n\nexport default class Node {\n\tconstructor ( raw, parent ) {\n\t\traw.parent = parent;\n\t\traw.program = parent.program || parent;\n\t\traw.depth = parent.depth + 1;\n\t\traw.keys = keys[ raw.type ];\n\t\traw.indentation = undefined;\n\n\t\tfor ( const key of keys[ raw.type ] ) {\n\t\t\twrap( raw[ key ], raw );\n\t\t}\n\n\t\traw.program.magicString.addSourcemapLocation( raw.start );\n\t\traw.program.magicString.addSourcemapLocation( raw.end );\n\t}\n\n\tancestor ( level ) {\n\t\tlet node = this;\n\t\twhile ( level-- ) {\n\t\t\tnode = node.parent;\n\t\t\tif ( !node ) return null;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tcontains ( node ) {\n\t\twhile ( node ) {\n\t\t\tif ( node === this ) return true;\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfindLexicalBoundary () {\n\t\treturn this.parent.findLexicalBoundary();\n\t}\n\n\tfindNearest ( type ) {\n\t\tif ( typeof type === 'string' ) type = new RegExp( `^${type}$` );\n\t\tif ( type.test( this.type ) ) return this;\n\t\treturn this.parent.findNearest( type );\n\t}\n\n\tfindScope ( functionScope ) {\n\t\treturn this.parent.findScope( functionScope );\n\t}\n\n\tgetIndentation () {\n\t\tconst lastLine = /\\n(.+)$/.exec( this.program.magicString.original.slice( 0, this.start ) );\n\t\treturn lastLine ? /^[ \\t]*/.exec( lastLine[1] )[0] : '';\n\t}\n\n\tgetLeftHandSide () {\n\t\treturn this;\n\t}\n\n\tgetPrecedence () {\n\t\treturn 0;\n\t}\n\n\tgetRightHandSide () {\n\t\treturn this;\n\t}\n\n\tgetValue () {\n\t\treturn UNKNOWN;\n\t}\n\n\tinitialise () {\n\t\tfor ( var key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( value ) {\n\t\t\t\tif ( 'length' in value ) {\n\t\t\t\t\tlet i = value.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( value[i] ) value[i].initialise();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue.initialise();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfindVarDeclarations ( varsToHoist ) {\n\t\tfor ( var key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( value ) {\n\t\t\t\tif ( 'length' in value ) {\n\t\t\t\t\tlet i = value.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( value[i] ) value[i].findVarDeclarations( varsToHoist );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue.findVarDeclarations( varsToHoist );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tminify ( code ) {\n\t\tfor ( var key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( value ) {\n\t\t\t\tif ( 'length' in value ) {\n\t\t\t\t\tlet i = value.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( value[i] ) value[i].minify( code );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvalue.minify( code );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpreventsCollapsedReturns ( returnStatements ) {\n\t\tif ( this.type === 'ExpressionStatement' ) return false;\n\t\tif ( this.type === 'ReturnStatement' ) return returnStatements.push( this ), false;\n\t\tif ( this.type === 'IfStatement' ) return !this.preventsCollapsedReturns( returnStatements );\n\t\treturn true;\n\t}\n\n\tsource () {\n\t\treturn this.program.magicString.original.slice( this.start, this.end );\n\t}\n\n\ttoString () {\n\t\treturn this.program.magicString.slice( this.start, this.end );\n\t}\n}\n","import Node from '../../Node.js';\nimport { UNKNOWN, TRUTHY, FALSY } from '../../../utils/sentinels.js';\n\nexport default class ArrayExpression extends Node {\n\tgetValue () {\n\t\tlet values = new Array( this.elements.length );\n\n\t\tfor ( let i = 0; i < this.elements.length; i += 1 ) {\n\t\t\tconst element = this.elements[i];\n\n\t\t\tif ( element ) {\n\t\t\t\tconst value = element.getValue();\n\t\t\t\tif ( value === UNKNOWN || value === TRUTHY || value === FALSY ) return TRUTHY;\n\n\t\t\t\tvalues[i] = value;\n\t\t\t}\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tminify ( code ) {\n\t\tlet c = this.start;\n\n\t\tif ( this.elements.length ) {\n\t\t\tlet insert = '[';\n\t\t\tthis.elements.forEach( ( element, i ) => {\n\t\t\t\tif ( !element ) {\n\t\t\t\t\tinsert += i === this.elements.length - 1 ? ',]' : ',';\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( element.start > c + 1 ) code.overwrite( c, element.start, insert );\n\t\t\t\tc = element.end;\n\n\t\t\t\tinsert = i === this.elements.length - 1 ? ']' : ',';\n\t\t\t});\n\n\t\t\tif ( this.end > insert.length ) code.overwrite( c, this.end, insert );\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.end > c + 2 ) code.overwrite( c, this.end, '[]' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ArrowFunctionExpression extends Node {\n\tfindScope () {\n\t\treturn this.body.scope;\n\t}\n\n\tinitialise () {\n\t\tthis.body.createScope( this.parent.findScope( false ) );\n\t\tsuper.initialise();\n\t}\n\n\tfindVarDeclarations () {\n\t\t// noop\n\t}\n\n\tminify ( code ) {\n\t\tlet c = this.start;\n\t\tif ( this.async ) c += 5;\n\n\t\tif ( this.params.length === 0 ) {\n\t\t\tif ( this.body.start > c + 4 ) {\n\t\t\t\tcode.overwrite( c, this.body.start, '()=>' );\n\t\t\t}\n\t\t}\n\n\t\telse if ( this.params.length === 1 ) {\n\t\t\tthis.params[0].minify( code );\n\n\t\t\tif ( this.params[0].type === 'Identifier' ) {\n\t\t\t\t// remove parens\n\t\t\t\tif ( this.async ) {\n\t\t\t\t\tcode.overwrite( c, this.params[0].start, ' ' );\n\t\t\t\t} else {\n\t\t\t\t\tcode.remove( c, this.params[0].start );\n\t\t\t\t}\n\n\t\t\t\tif ( this.body.start > this.params[0].end + 2 ) {\n\t\t\t\t\tcode.overwrite( this.params[0].end, this.body.start, '=>' );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( this.params[0].start > c + 1 ) {\n\t\t\t\t\tcode.remove( c + 1, this.params[0].start );\n\t\t\t\t}\n\n\t\t\t\tif ( this.body.start > this.params[0].end + 3 ) {\n\t\t\t\t\tcode.overwrite( this.params[0].end, this.body.start, ')=>' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tthis.params.forEach( ( param, i ) => {\n\t\t\t\tparam.minify( code );\n\t\t\t\tif ( param.start > c + 1 ) code.overwrite( c, param.start, i ? ',' : '(' );\n\t\t\t\tc = param.end;\n\t\t\t});\n\n\t\t\tif ( this.body.start > c + 3 ) {\n\t\t\t\tcode.overwrite( c, this.body.start, ')=>' );\n\t\t\t}\n\t\t}\n\n\t\tthis.body.minify( code );\n\t}\n}\n","export default function locate ( source, index ) {\n\tvar lines = source.split( '\\n' );\n\tvar len = lines.length;\n\n\tvar lineStart = 0;\n\tvar i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tvar line = lines[i];\n\t\tvar lineEnd =  lineStart + line.length + 1; // +1 for newline\n\n\t\tif ( lineEnd > index ) {\n\t\t\treturn { line: i + 1, column: index - lineStart, char: i };\n\t\t}\n\n\t\tlineStart = lineEnd;\n\t}\n\n\tthrow new Error( 'Could not determine location of character' );\n}\n","function pad ( num, len ) {\n\tlet result = String( num );\n\treturn result + repeat( ' ', len - result.length );\n}\n\nfunction repeat ( str, times ) {\n\tlet result = '';\n\twhile ( times-- ) result += str;\n\treturn result;\n}\n\nexport default function getSnippet ( source, loc, length = 1 ) {\n\tconst first = Math.max( loc.line - 5, 0 );\n\tconst last = loc.line;\n\n\tconst numDigits = String( last ).length;\n\n\tconst lines = source.split( '\\n' ).slice( first, last );\n\n\tconst lastLine = lines[ lines.length - 1 ];\n\tconst offset = lastLine.slice( 0, loc.column ).replace( /\\t/g, '  ' ).length;\n\n\tlet snippet = lines\n\t\t.map( ( line, i ) => `${pad( i + first + 1, numDigits )} : ${line.replace( /\\t/g, '  ')}` )\n\t\t.join( '\\n' );\n\n\tsnippet += '\\n' + repeat( ' ', numDigits + 3 + offset ) + repeat( '^', length );\n\n\treturn snippet;\n}\n","import locate from './locate.js';\nimport getSnippet from './getSnippet.js';\n\nexport default class CompileError extends Error {\n\tconstructor ( node, message ) {\n\t\tsuper();\n\n\t\tconst source = node.program.magicString.original;\n\t\tconst loc = locate( source, node.start );\n\n\t\tthis.name = 'CompileError';\n\t\tthis.message = message + ` (${loc.line}:${loc.column})`;\n\n\t\tthis.stack = new Error().stack.replace( new RegExp( `.+new ${this.name}.+\\\\n`, 'm' ), '' );\n\n\t\tthis.loc = loc;\n\t\tthis.snippet = getSnippet( source, loc, node.end - node.start );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nlet commutative = {};\n// we exclude + because it's not commutative when it's\n// operating on strings\nfor ( let operator of '*&^|' ) commutative[ operator ] = true;\n\nexport default class AssignmentExpression extends Node {\n\tgetLeftHandSide () {\n\t\treturn this.left.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\treturn 3;\n\t}\n\n\tinitialise () {\n\t\tif ( this.left.type === 'Identifier' ) {\n\t\t\tconst declaration = this.findScope( false ).findDeclaration( this.left.name );\n\t\t\tif ( declaration && declaration.kind === 'const' ) {\n\t\t\t\tthrow new CompileError( this.left, `${this.left.name} is read-only` );\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise();\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.right.start > this.left.end + this.operator.length ) {\n\t\t\tcode.overwrite( this.left.end, this.right.start, this.operator );\n\t\t}\n\n\t\t// special case – `a = a + 1` -> `a += 1`\n\t\tif ( this.operator === '=' && this.left.type === 'Identifier' && this.right.type === 'BinaryExpression' ) {\n\t\t\tif ( this.right.left.type === 'Identifier' && ( this.right.left.name === this.left.name ) ) {\n\t\t\t\tcode.appendLeft( this.left.end, this.right.operator );\n\t\t\t\tcode.remove( this.right.start, this.right.right.start );\n\n\t\t\t\tthis.right.right.minify( code );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// addition and multiplication\n\t\t\tif ( commutative[ this.right.operator ] && this.right.right.type === 'Identifier' && ( this.right.right.name === this.left.name ) ) {\n\t\t\t\tcode.appendLeft( this.left.end, this.right.operator );\n\t\t\t\tcode.remove( this.right.left.end, this.right.end );\n\n\t\t\t\tthis.right.left.minify( code );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","export default function stringify ( value ) {\n\tif ( typeof value === 'function' ) return null;\n\tif ( typeof value === 'object' ) return null;\n\n\tif ( value !== value ) return 'NaN';\n\tif ( value === true ) return '!0';\n\tif ( value === false ) return '!1';\n\tif ( value === undefined ) return 'void 0';\n\n\t// TODO if string, determine which quotes to use\n\t// TODO if number, determine whether to use e notation\n\n\tif ( isNegativeZero( value ) ) return '-0';\n\treturn JSON.stringify( value )\n\t\t.replace( /\\u2028/g, '\\\\u2028' )\n\t\t.replace( /\\u2029/g, '\\\\u2029' );\n}\n\nfunction isNegativeZero ( num ) {\n\treturn num === 0 && ( 1 / num < 0 );\n}","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nconst calculators = {\n\t'**' : ( a, b ) => Math.power( a, b ),\n\t'*'  : ( a, b ) => a * b,\n\t'/'  : ( a, b ) => a / b,\n\t'%'  : ( a, b ) => a % b,\n\t'+'  : ( a, b ) => a + b,\n\t'-'  : ( a, b ) => a - b,\n\t'<<' : ( a, b ) => a << b,\n\t'>>' : ( a, b ) => a >> b,\n\t'>>>': ( a, b ) => a >>> b,\n\t'<'  : ( a, b ) => a < b,\n\t'<=' : ( a, b ) => a <= b,\n\t'>'  : ( a, b ) => a > b,\n\t'>=' : ( a, b ) => a >= b,\n\t'==' : ( a, b ) => a == b,\n\t'!=' : ( a, b ) => a != b,\n\t'===': ( a, b ) => a === b,\n\t'!==': ( a, b ) => a !== b,\n\t'&'  : ( a, b ) => a & b,\n\t'^'  : ( a, b ) => a ^ b,\n\t'|'  : ( a, b ) => a | b,\n\tin   : ( a, b ) => a in b,\n\tinstanceof: ( a, b ) => a instanceof b\n};\n\nconst binaryExpressionPrecedence = {};\n[\n\t[  7, '|' ],\n\t[  8, '^' ],\n\t[  9, '&' ],\n\t[ 10, '!== === != ==' ],\n\t[ 11, 'instanceof in >= > <= <' ],\n\t[ 12, '>>> >> <<' ],\n\t[ 13, '- +' ],\n\t[ 14, '% / * **' ]\n].forEach( ([ precedence, operators ]) => {\n\toperators.split( ' ' ).forEach( operator => binaryExpressionPrecedence[ operator ] = precedence );\n});\n\nexport default class BinaryExpression extends Node {\n\tgetLeftHandSide () {\n\t\treturn this.left.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\tconst left = this.left.getValue();\n\t\tconst right = this.right.getValue();\n\n\t\tif ( left === UNKNOWN || right === UNKNOWN ) return binaryExpressionPrecedence[ this.operator ];\n\n\t\treturn 20; // will be replaced by a literal\n\t}\n\n\tgetValue () {\n\t\tconst left = this.left.getValue();\n\t\tconst right = this.right.getValue();\n\n\t\tif ( left === UNKNOWN || right === UNKNOWN ) return UNKNOWN;\n\n\t\treturn calculators[ this.operator ]( left, right );\n\t}\n\n\tminify ( code ) {\n\t\tconst value = this.getValue();\n\n\t\tif ( value !== UNKNOWN ) {\n\t\t\tcode.overwrite( this.start, this.end, stringify( value ) );\n\t\t}\n\n\t\telse {\n\t\t\tlet operator = this.operator;\n\n\t\t\tif ( code.original[ this.right.getLeftHandSide().start ] === operator ) {\n\t\t\t\t// prevent e.g. `1 - --t` becoming 1---t\n\t\t\t\toperator = `${operator} `;\n\t\t\t} else if ( /\\w/.test( this.operator ) ) {\n\t\t\t\t// `foo in bar`, not `fooinbar`\n\t\t\t\toperator = ` ${operator} `;\n\t\t\t}\n\n\t\t\tif ( this.right.start > this.left.end + operator.length ) {\n\t\t\t\tcode.overwrite( this.left.end, this.right.start, operator );\n\t\t\t}\n\n\t\t\tsuper.minify( code );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN, TRUTHY, FALSY } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nconst safeFunctions = [\n\tArray.prototype.concat,\n\n\tString.fromCharCode,\n\tString.fromCodePoint,\n\n\tString.prototype.charAt,\n\tString.prototype.charCodeAt,\n\tString.prototype.codePointAt,\n\tString.prototype.concat, // WARNING! https://github.com/jquery/jquery/pull/473\n\tString.prototype.endsWith,\n\tString.prototype.includes,\n\tString.prototype.indexOf,\n\tString.prototype.lastIndexOf,\n\tString.prototype.slice,\n\tString.prototype.startsWith,\n\tString.prototype.substr,\n\tString.prototype.substring,\n\tString.prototype.toLowerCase,\n\tString.prototype.toString,\n\tString.prototype.toUpperCase,\n\tString.prototype.trim,\n\tString.prototype.trimLeft,\n\tString.prototype.trimRight,\n\tString.prototype.valueOf\n\n\t// TODO others...\n];\n\nexport default class CallExpression extends Node {\n\tgetPrecedence () {\n\t\treturn 17;\n\t}\n\n\tgetValue () {\n\t\tconst calleeValue = this.callee.getValue();\n\n\t\tif ( typeof calleeValue !== 'function' ) return UNKNOWN;\n\t\tif ( !~safeFunctions.indexOf( calleeValue ) ) return UNKNOWN;\n\n\t\tlet contextValue = this.callee.type === 'MemberExpression' ?\n\t\t\tthis.callee.object.getValue() :\n\t\t\tnull;\n\n\t\tlet argumentValues = new Array( this.arguments.length );\n\t\tfor ( let i = 0; i < this.arguments.length; i += 1 ) {\n\t\t\tconst argument = this.arguments[i];\n\n\t\t\tif ( argument ) {\n\t\t\t\tconst value = argument.getValue();\n\t\t\t\tif ( value === UNKNOWN || value === TRUTHY || value === FALSY ) return UNKNOWN;\n\n\t\t\t\targumentValues[i] = value;\n\t\t\t}\n\t\t}\n\n\t\treturn calleeValue.apply( contextValue, argumentValues );\n\t}\n\n\tinitialise () {\n\t\tsuper.initialise();\n\t}\n\n\tminify ( code ) {\n\t\tconst value = this.getValue();\n\n\t\tif ( value !== UNKNOWN ) {\n\t\t\tconst str = stringify( value );\n\n\t\t\tif ( str !== null ) {\n\t\t\t\tcode.overwrite( this.start, this.end, str );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif ( this.arguments.length ) {\n\t\t\tlet lastNode = this.callee;\n\n\t\t\tfor ( let i = 0; i < this.arguments.length; i += 1 ) {\n\t\t\t\tconst argument = this.arguments[i];\n\n\t\t\t\tif ( argument.start > lastNode.end + 1 ) code.overwrite( lastNode.end, argument.start, i ? ',' : '(' );\n\t\t\t\tlastNode = argument;\n\t\t\t}\n\n\t\t\tif ( this.end > lastNode.end + 1 ) code.overwrite( lastNode.end, this.end, ')' );\n\t\t}\n\n\t\telse if ( this.end > this.callee.end + 2 ) {\n\t\t\tcode.overwrite( this.callee.end, this.end, '()' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class CatchClause extends Node {\n\tminify ( code ) {\n\t\tif ( this.param.start > this.start + 6 ) {\n\t\t\tcode.overwrite( this.start + 5, this.param.start, '(' );\n\t\t}\n\n\t\tif ( this.body.start > this.param.end + 1 ) {\n\t\t\tcode.overwrite( this.param.end, this.body.start, ')' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","export default function minifyPropertyKey ( code, property, isObject ) {\n\tif ( property.shorthand ) return;\n\n\tconst separator = ( isObject && !property.method ) ? ':' : '';\n\n\tif ( property.value.async || property.value.generator || property.computed ) {\n\t\tconst prefix = ( property.value.async ? ( property.computed ? 'async' : 'async ' ) : property.value.generator ? '*' : '' ) + ( property.computed ? '[' : '' );\n\t\tif ( property.key.start - property.start > prefix.length ) code.overwrite( property.start, property.key.start, prefix );\n\n\t\tconst suffix = ( property.computed ? ']' : '' ) + separator;\n\t\tif ( property.value.start - property.key.end > suffix.length ) code.overwrite( property.key.end, property.value.start, suffix );\n\t}\n\n\telse if ( separator ) {\n\t\tif ( property.value.start - property.key.end > 1 ) code.overwrite( property.key.end, property.value.start, separator );\n\t}\n\n\telse {\n\t\tcode.remove( property.key.end, property.value.start );\n\t}\n}","import Node from '../Node.js';\nimport minifyPropertyKey from './shared/minifyPropertyKey.js';\n\nexport default class ClassBody extends Node {\n\tminify ( code ) {\n\t\tlet c = this.start + 1;\n\n\t\tfor ( let i = 0; i < this.body.length; i += 1 ) {\n\t\t\tconst method = this.body[i];\n\t\t\tif ( method.start > c ) code.remove( c, method.start );\n\n\t\t\tminifyPropertyKey( code, method, false );\n\n\t\t\tc = method.end;\n\t\t}\n\n\t\tif ( this.end > c + 1 ) code.remove( c, this.end - 1 );\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../../Node.js';\n\nexport default class Class extends Node {\n\tminify ( code ) {\n\t\tlet c = this.superClass ? this.superClass.end : this.id ? this.id.end : this.start + 6;\n\n\t\tif ( this.id ) {\n\t\t\tif ( this.id.start > this.start + 6 ) {\n\t\t\t\tcode.remove( this.start + 6, this.id.start );\n\t\t\t}\n\n\t\t\tif ( this.superClass ) {\n\t\t\t\tif ( this.superClass.start > this.id.end + 9 ) {\n\t\t\t\t\tcode.overwrite( this.id.end, this.superClass.start, ' extends ' );\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( this.superClass ) {\n\t\t\tif ( this.superClass.start > this.start + 14 ) {\n\t\t\t\tcode.overwrite( this.start + 6, this.superClass.start, 'extends ' );\n\t\t\t}\n\t\t}\n\n\t\tif ( this.body.start > c ) code.remove( c, this.body.start );\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Class from './shared/Class.js';\n\nexport default class ClassDeclaration extends Class {\n\tactivate () {\n\t\tthis.skip = false;\n\t\tsuper.initialise();\n\t}\n\n\tinitialise () {\n\t\tthis.skip = true;\n\t\tthis.id.declaration = this;\n\n\t\tthis.name = this.id.name; // TODO what is this used for?\n\t\tthis.findScope( true ).addDeclaration( this.id, 'class' );\n\t}\n}\n","let reserved = Object.create( null );\n'do if in for let new try var case else enum eval null this true void with await break catch class const false super throw while yield delete export import public return static switch typeof default extends finally package private continue debugger function arguments interface protected implements instanceof'.split( ' ' )\n\t.forEach( word => reserved[ word ] = true );\n\nexport default reserved;\n","import reserved from '../utils/reserved.js';\nimport CompileError from '../utils/CompileError.js';\n\nconst letConst = /^(?:let|const)$/;\n\nconst validChars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$';\n\nexport default function Scope ( options ) {\n\toptions = options || {};\n\n\tthis.parent = options.parent;\n\tthis.owner = options.owner;\n\tthis.isBlockScope = !!options.block;\n\n\tlet scope = this;\n\twhile ( scope.isBlockScope ) scope = scope.parent;\n\tthis.functionScope = scope;\n\n\tthis.identifiers = [];\n\tthis.declarations = Object.create( null );\n\tthis.references = Object.create( null );\n\tthis.blockScopedDeclarations = this.isBlockScope ? null : Object.create( null );\n\tthis.aliases = Object.create( null );\n\n\tthis.idCounter = [ 0 ];\n}\n\nScope.prototype = {\n\taddAlias ( alias ) {\n\t\tthis.aliases[ alias ] = true;\n\t\tif ( this.parent ) this.parent.addAlias( alias );\n\t},\n\n\taddDeclaration ( identifier, kind ) {\n\t\tif ( kind === 'var' && this.isBlockScope ) {\n\t\t\tthis.parent.addDeclaration( identifier, kind );\n\t\t\treturn;\n\t\t}\n\n\t\tconst { name } = identifier;\n\n\t\tconst existingDeclaration = this.declarations[ name ];\n\t\tif ( existingDeclaration ) {\n\t\t\tif ( letConst.test( kind ) || letConst.test( existingDeclaration.kind ) ) {\n\t\t\t\t// TODO warn about double var declarations?\n\t\t\t\tthrow new CompileError( identifier, `${name} is already declared` );\n\t\t\t}\n\n\t\t\t// special case — function expression IDs that are shadowed by\n\t\t\t// declarations should just be removed (TODO unless the user wishes\n\t\t\t// to keep function names — https://github.com/Rich-Harris/butternut/issues/17)\n\t\t\tif ( existingDeclaration.node.parent.type === 'FunctionExpression' ) {\n\t\t\t\texistingDeclaration.node.parent.removeId = true;\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tidentifier.isDuplicate = true;\n\n\t\t\t\tif ( existingDeclaration.activated ) {\n\t\t\t\t\tidentifier.activate();\n\t\t\t\t} else {\n\t\t\t\t\texistingDeclaration.duplicates.push( identifier );\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst declaration = {\n\t\t\tactivated: !this.parent, // TODO is this necessary?\n\t\t\tname,\n\t\t\tnode: identifier,\n\t\t\tkind,\n\t\t\tinstances: [],\n\t\t\tduplicates: []\n\t\t};\n\n\t\tthis.declarations[ name ] = declaration;\n\n\t\tif ( this.isBlockScope ) {\n\t\t\tif ( !this.functionScope.blockScopedDeclarations[ name ] ) this.functionScope.blockScopedDeclarations[ name ] = [];\n\t\t\tthis.functionScope.blockScopedDeclarations[ name ].push( declaration );\n\t\t}\n\n\t\tif ( kind === 'param' ) {\n\t\t\tdeclaration.instances.push( identifier );\n\t\t}\n\n\t\tif ( !this.parent ) {\n\t\t\tidentifier.activate();\n\t\t}\n\t},\n\n\taddReference ( identifier ) {\n\t\tif ( this.consolidated ) {\n\t\t\tthis.consolidateReference( identifier );\n\t\t} else {\n\t\t\tthis.identifiers.push( identifier );\n\t\t}\n\t},\n\n\tconsolidate () {\n\t\tfor ( let i = 0; i < this.identifiers.length; i += 1 ) { // we might push to the array during consolidation, so don't cache length\n\t\t\tconst identifier = this.identifiers[i];\n\t\t\tthis.consolidateReference( identifier );\n\t\t}\n\n\t\tthis.consolidated = true; // TODO understand why this is necessary... seems bad\n\t},\n\n\tconsolidateReference ( identifier ) {\n\t\tconst declaration = this.declarations[ identifier.name ];\n\t\tif ( declaration ) {\n\t\t\tdeclaration.instances.push( identifier );\n\n\t\t\tif ( !declaration.activated ) {\n\t\t\t\tdeclaration.activated = true;\n\t\t\t\t// const parent = declaration.node.parent;\n\n\t\t\t\tdeclaration.node.activate();\n\t\t\t\tdeclaration.duplicates.forEach( dupe => {\n\t\t\t\t\tdupe.activate();\n\t\t\t\t});\n\t\t\t\t// if ( declaration.kind === 'param' ) {\n\t\t\t\t// \t// TODO is there anything to do here?\n\t\t\t\t// } else if ( parent.activate ) {\n\t\t\t\t// \tparent.activate();\n\t\t\t\t// }\n\t\t\t}\n\t\t} else {\n\t\t\tthis.references[ identifier.name ] = true;\n\t\t\tif ( this.parent ) this.parent.addReference( identifier );\n\t\t}\n\t},\n\n\tcontains ( name ) {\n\t\treturn this.declarations[ name ] ||\n\t\t       ( this.parent ? this.parent.contains( name ) : false );\n\t},\n\n\tcontainsAlias ( alias ) {\n\t\treturn this.aliases[ alias ] || ( this.parent && this.parent.containsAlias( alias ) );\n\t},\n\n\tcreateIdentifier ( used ) {\n\t\tlet alias;\n\n\t\tdo {\n\t\t\talias = this.idCounter.map( i => validChars[i] ).join( '' );\n\n\t\t\tlet i = this.idCounter.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tthis.idCounter[i] += 1;\n\t\t\t\tif ( this.idCounter[i] === validChars.length ) {\n\t\t\t\t\tthis.idCounter[i] = 0;\n\n\t\t\t\t\tif ( i === 0 ) this.idCounter.push( 0 );\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} while ( used[ alias ] || reserved[ alias ] );\n\n\t\treturn alias;\n\t},\n\n\tfindDeclaration ( name ) {\n\t\treturn this.declarations[ name ] ||\n\t\t       ( this.parent && this.parent.findDeclaration( name ) );\n\t},\n\n\tmangle ( code ) {\n\t\tif ( !this.parent ) return;\n\n\t\tlet used = Object.create( null );\n\n\t\tObject.keys( this.references ).forEach( reference => {\n\t\t\tconst declaration = this.parent && this.parent.findDeclaration( reference );\n\t\t\tused[ declaration ? declaration.alias : reference ] = true;\n\t\t});\n\n\t\tObject.keys( this.declarations ).forEach( name => {\n\t\t\tconst declaration = this.declarations[ name ];\n\t\t\tdeclaration.alias = this.createIdentifier( used );\n\n\t\t\tdeclaration.instances.forEach( instance => {\n\t\t\t\t// special case — function expression IDs may be removed outright\n\t\t\t\tif ( instance.parent.type === 'FunctionExpression' && instance === instance.parent.id && instance.parent.removeId ) return;\n\n\t\t\t\tconst replacement = instance.parent.type === 'Property' && instance.parent.shorthand ?\n\t\t\t\t\t`${instance.name}:${declaration.alias}` :\n\t\t\t\t\tdeclaration.alias;\n\n\t\t\t\tcode.overwrite( instance.start, instance.end, replacement, true );\n\t\t\t});\n\t\t});\n\t}\n};\n","import Class from './shared/Class.js';\nimport Scope from '../Scope.js';\n\nexport default class ClassExpression extends Class {\n\tfindScope () {\n\t\treturn this.scope;\n\t}\n\n\tinitialise () {\n\t\tthis.scope = new Scope({\n\t\t\tblock: true,\n\t\t\tparent: this.parent.findScope( false ),\n\t\t\towner: this\n\t\t});\n\n\t\tif ( this.id ) {\n\t\t\tthis.id.declaration = this;\n\n\t\t\t// function expression IDs belong to the child scope...\n\t\t\tthis.scope.addDeclaration( this.id, 'class' );\n\t\t\tthis.scope.addReference( this.id );\n\t\t}\n\n\t\tsuper.initialise();\n\n\t\tthis.scope.consolidate();\n\t}\n\n\tminify ( code ) {\n\t\tthis.scope.mangle( code );\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN, FALSY } from '../../utils/sentinels.js';\n\nexport default class ConditionalExpression extends Node {\n\tgetLeftHandSide () {\n\t\tconst testValue = this.test.getValue();\n\t\tconst node = testValue === UNKNOWN ? this.test : ( testValue && testValue !== FALSY ? this.consequent : this.alternate );\n\n\t\treturn node.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\tconst testValue = this.test.getValue();\n\t\treturn testValue === UNKNOWN ? 4 : ( testValue && testValue !== FALSY ? this.consequent : this.alternate ).getPrecedence();\n\t}\n\n\tgetRightHandSide () {\n\t\tconst testValue = this.test.getValue();\n\t\tconst node = testValue === UNKNOWN ? this.alternate : ( testValue && testValue !== FALSY ? this.alternate : this.consequent );\n\n\t\treturn node.getRightHandSide();\n\t}\n\n\tgetValue () {\n\t\tconst testValue = this.test.getValue();\n\t\tconst consequentValue = this.consequent.getValue();\n\t\tconst alternateValue = this.alternate.getValue();\n\n\t\tif ( testValue === UNKNOWN || consequentValue === UNKNOWN || alternateValue === UNKNOWN ) return UNKNOWN;\n\n\t\treturn ( testValue && testValue !== FALSY ) ? consequentValue : alternateValue;\n\t}\n\n\tinitialise () {\n\t\tconst testValue = this.test.getValue();\n\n\t\tif ( testValue === UNKNOWN ) {\n\t\t\tsuper.initialise();\n\t\t} else if ( testValue ) {\n\t\t\tthis.consequent.initialise();\n\t\t} else {\n\t\t\tthis.alternate.initialise();\n\t\t}\n\t}\n\n\tminify ( code ) {\n\t\tconst testValue = this.test.getValue();\n\n\t\t// TODO rewrite `!a ? b() : c()` as `a ? c() : b()`\n\n\t\tif ( testValue === UNKNOWN ) {\n\t\t\t// remove whitespace\n\t\t\tif ( this.consequent.start > this.test.end + 1 ) {\n\t\t\t\tcode.overwrite( this.test.end, this.consequent.start, '?' );\n\t\t\t}\n\n\t\t\tif ( this.alternate.start > this.consequent.end + 1 ) {\n\t\t\t\tcode.overwrite( this.consequent.end, this.alternate.start, ':' );\n\t\t\t}\n\n\t\t\tsuper.minify( code );\n\t\t} else if ( testValue && testValue !== FALSY ) {\n\t\t\t// remove test and alternate\n\t\t\tcode.remove( this.start, this.consequent.start );\n\t\t\tcode.remove( this.consequent.end, this.end );\n\n\t\t\tthis.consequent.minify( code );\n\t\t} else {\n\t\t\t// remove test and consequent\n\t\t\tcode.remove( this.start, this.alternate.start );\n\n\t\t\tthis.alternate.minify( code );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class DoWhileStatement extends Node {\n\tminify ( code ) {\n\t\t// special case\n\t\tif ( this.body.body.length === 0 || this.body.body[0].type === 'EmptyStatement' ) {\n\t\t\tcode.overwrite( this.start + 2, this.test.start, ';while(' );\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.body.synthetic ) {\n\t\t\t\tcode.overwrite( this.start + 2, this.body.body[0].start, '{' );\n\n\t\t\t\tlet c = this.body.body[ this.body.body.length - 1 ].end;\n\t\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t\t\tcode.overwrite( c, this.test.start, '}while(' );\n\t\t\t} else {\n\t\t\t\tcode.remove( this.start + 2, this.body.start );\n\t\t\t\tcode.overwrite( this.body.end, this.test.start, 'while(' );\n\t\t\t}\n\t\t}\n\n\t\tif ( this.end > this.test.end + 1 ) {\n\t\t\tlet c = this.end;\n\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t\tcode.overwrite( this.test.end, c, ')' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ExpressionStatement extends Node {\n\tgetPrecedence () {\n\t\treturn this.expression.getPrecedence();\n\t}\n}\n","import Node from '../../Node.js';\n\nexport default class LoopStatement extends Node {\n\tfindScope ( functionScope ) {\n\t\tif ( functionScope || !this.hasVariableDeclaration() ) return this.parent.findScope( functionScope );\n\n\t\tif ( !this.body.scope ) this.body.createScope( this.parent.findScope() );\n\t\treturn this.body.scope;\n\t}\n\n\tminify ( code ) {\n\t\t// special case — empty body\n\t\tif ( this.body.body.length === 0 || this.body.body[0].type === 'EmptyStatement' ) {\n\t\t\tcode.appendLeft( this.body.start, ';' );\n\t\t\tcode.remove( this.body.start, this.body.end );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import LoopStatement from './shared/LoopStatement.js';\n\nexport default class ForStatement extends LoopStatement {\n\tgetRightHandSide () {\n\t\treturn this.body.getRightHandSide();\n\t}\n\n\thasVariableDeclaration () {\n\t\treturn this.init && this.init.type === 'VariableDeclaration';\n\t}\n\n\tminify ( code, transforms ) {\n\t\tlet c = this.start + 3;\n\n\t\tlet replacement = '(';\n\n\t\t[ this.init, this.test, this.update ].forEach( ( statement, i ) => {\n\t\t\tif ( statement ) {\n\t\t\t\tif ( statement.start > c + replacement.length ) {\n\t\t\t\t\tcode.overwrite( c, statement.start, replacement );\n\t\t\t\t}\n\n\t\t\t\tc = statement.end;\n\t\t\t\treplacement = '';\n\t\t\t}\n\n\t\t\treplacement += i === 2 ? ')' : ';';\n\t\t});\n\n\t\tif ( this.body.start > c + replacement.length ) {\n\t\t\tcode.overwrite( c, this.body.start, replacement );\n\t\t}\n\n\t\tsuper.minify( code, transforms );\n\t}\n}\n","import LoopStatement from './LoopStatement.js';\n\nexport default class ForInOfStatement extends LoopStatement {\n\tgetRightHandSide () {\n\t\treturn this.body.getRightHandSide();\n\t}\n\n\thasVariableDeclaration () {\n\t\treturn this.left.type === 'VariableDeclaration';\n\t}\n\n\tminify ( code, transforms ) {\n\t\tif ( this.left.start > this.start + 4 ) {\n\t\t\tcode.overwrite( this.start + 3, this.left.start, '(' );\n\t\t}\n\n\t\tif ( this.right.start > this.left.end + 4 ) {\n\t\t\tcode.overwrite( this.left.end, this.right.start, ' in ' );\n\t\t}\n\n\t\tif ( this.body.start > this.right.end + 1 ) {\n\t\t\tcode.overwrite( this.right.end, this.body.start, ')' );\n\t\t}\n\n\t\tsuper.minify( code, transforms );\n\t}\n}\n","import Node from '../../Node.js';\n\nexport default class Function extends Node {\n\tfindVarDeclarations () {\n\t\t// noop\n\t}\n\n\tminify ( code ) {\n\t\tlet c = this.start;\n\t\tlet openParams;\n\n\t\tif ( this.parent.type === 'MethodDefinition' || this.parent.method ) {\n\t\t\t// `async` or `*` are dealt with by the parent\n\t\t\topenParams = '(';\n\t\t}\n\n\t\telse {\n\t\t\topenParams = this.generator ? '*(' : '(';\n\n\t\t\tif ( this.async ) {\n\t\t\t\tc += 6;\n\t\t\t\twhile ( code.original[c] !== 'f' ) c += 1;\n\t\t\t\tif ( c > this.start + 6 ) code.remove( this.start + 6, c );\n\t\t\t}\n\n\t\t\tc += 8;\n\n\t\t\tif ( this.id && !this.removeId ) {\n\t\t\t\tc += 1;\n\n\t\t\t\tif ( this.id.start > c ) code.remove( c, this.id.start );\n\t\t\t\tc = this.id.end;\n\t\t\t}\n\t\t}\n\n\t\tif ( this.params.length ) {\n\t\t\tfor ( let i = 0; i < this.params.length; i += 1 ) {\n\t\t\t\tconst param = this.params[i];\n\n\t\t\t\tif ( param.start > c + 1 ) code.overwrite( c, param.start, i ? ',' : openParams );\n\t\t\t\tc = param.end;\n\t\t\t}\n\n\t\t\tif ( this.end > c + 1 ) code.overwrite( c, this.body.start, ')' );\n\t\t}\n\n\t\telse if ( this.body.start > c + 2 ) {\n\t\t\tcode.overwrite( c, this.body.start, `${openParams})` );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Function from './shared/Function.js';\n\nexport default class FunctionDeclaration extends Function {\n\tactivate () {\n\t\tthis.skip = false;\n\t\tsuper.initialise();\n\t}\n\n\tinitialise () {\n\t\tconst scope = this.findScope( false );\n\t\tthis.body.createScope( scope );\n\n\t\tif ( this.id ) { // if not, it's a default export\n\t\t\tthis.id.declaration = this;\n\t\t\tscope.addDeclaration( this.id, 'function' );\n\n\t\t\tthis.skip = !!scope.parent; // guilty until proven innocent\n\t\t}\n\t}\n}\n","import Function from './shared/Function.js';\n\nexport default class FunctionExpression extends Function {\n\tgetPrecedence () {\n\t\treturn 20;\n\t}\n\n\tinitialise () {\n\t\tthis.body.createScope( this.parent.findScope( false ) );\n\n\t\tif ( this.id ) {\n\t\t\tthis.id.declaration = this;\n\n\t\t\t// function expression IDs belong to the child scope...\n\t\t\tthis.body.scope.addDeclaration( this.id, 'function' );\n\t\t\tthis.body.scope.addReference( this.id );\n\t\t}\n\n\t\tsuper.initialise();\n\t}\n}\n","export default function isReference ( node, parent ) {\n\tif ( node.type === 'MemberExpression' ) {\n\t\treturn !node.computed && isReference( node.object, node );\n\t}\n\n\tif ( node.type === 'Identifier' ) {\n\t\t// the only time we could have an identifier node without a parent is\n\t\t// if it's the entire body of a function without a block statement –\n\t\t// i.e. an arrow function expression like `a => a`\n\t\tif ( !parent ) return true;\n\n\t\t// TODO what was this for?\n\t\t//if ( /(Function|Class)Expression/.test( parent.type ) && node === parent.id ) return false;\n\n\t\t// TODO is this right?\n\t\tif ( parent.type === 'MemberExpression' || parent.type === 'MethodDefinition' ) {\n\t\t\treturn parent.computed || node === parent.object;\n\t\t}\n\n\t\t// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n\t\tif ( parent.type === 'Property' ) return parent.computed || node === parent.value;\n\n\t\t// disregard the `bar` in `class Foo { bar () {...} }`\n\t\tif ( parent.type === 'MethodDefinition' ) return false;\n\n\t\t// disregard the `bar` in `export { foo as bar }`\n\t\tif ( parent.type === 'ExportSpecifier' && node !== parent.local ) return false;\n\n\t\treturn true;\n\t}\n}\n","import Node from '../Node.js';\nimport isReference from '../../utils/isReference.js';\n\nexport default class Identifier extends Node {\n\tactivate () {\n\t\tif ( this.declaration && this.declaration.activate ) {\n\t\t\tthis.declaration.activate();\n\t\t}\n\t}\n\n\tgetPrecedence () {\n\t\treturn 20;\n\t}\n\n\tinitialise () {\n\t\t// special case\n\t\tif ( ( this.parent.type === 'FunctionExpression' || this.parent.type === 'ClassExpression' ) && this === this.parent.id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isReference( this, this.parent ) ) {\n\t\t\tthis.findScope( false ).addReference( this );\n\t\t}\n\t}\n\n\tminify () {\n\t\t// TODO should aliasing happen here, rather than in Scope?\n\t\t// if ( this.alias ) {\n\t\t// \tconst replacement = this.parent.type === 'Property' && this.parent.shorthand ?\n\t\t// \t\t`${this.name}:${this.alias}` :\n\t\t// \t\tthis.alias;\n\n\t\t// \tcode.overwrite( this.start, this.end, replacement, true );\n\t\t// }\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN } from '../../utils/sentinels.js';\n\nconst invalidChars = /[a-zA-Z$_0-9/]/;\n\nfunction canRewriteBlockAsSequence ( body ) {\n\tlet i = body.length;\n\twhile ( i-- ) {\n\t\tconst child = body[i];\n\t\tif ( child.type !== 'ExpressionStatement' /*&& child.type !== 'ReturnStatement'*/ ) {\n\t\t\tif ( child.type !== 'IfStatement' ) return false;\n\t\t\tif ( !canRewriteIfStatementAsSequence( child ) ) return false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction canRewriteIfStatementAsSequence ( node ) {\n\tif ( !canRewriteBlockAsSequence( node.consequent.body ) ) return false;\n\n\tif ( node.alternate ) {\n\t\tif ( node.alternate.type === 'IfStatement' ) {\n\t\t\treturn canRewriteIfStatementAsSequence( node.alternate );\n\t\t}\n\n\t\tif ( node.alternate.type === 'BlockStatement' ) {\n\t\t\tif ( !canRewriteBlockAsSequence( node.alternate.body ) ) return false;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn node.alternate.type === 'ExpressionStatement';\n\t}\n\n\treturn true;\n}\n\nfunction isVarDeclaration ( node ) {\n\treturn node.kind === 'var';\n}\n\n// TODO this whole thing is kinda messy... refactor it\n\nexport default class IfStatement extends Node {\n\tgetRightHandSide () {\n\t\t// TODO what if we know the test value?\n\t\tif ( this.alternate ) return this.alternate.getRightHandSide();\n\t\treturn this.consequent.getRightHandSide();\n\t}\n\n\tinitialise () {\n\t\tthis.rewriteConsequentAsSequence = canRewriteBlockAsSequence( this.consequent.body );\n\t\tthis.rewriteAlternateAsSequence = !this.alternate ||\n\t\t\t( this.alternate.type === 'ExpressionStatement' ) ||\n\t\t\t( this.alternate.type === 'IfStatement' && canRewriteIfStatementAsSequence( this.alternate ) ) ||\n\t\t\t( this.alternate.type === 'BlockStatement' ) && canRewriteBlockAsSequence( this.alternate.body );\n\n\t\tthis.rewriteAsSequence = this.rewriteConsequentAsSequence && this.rewriteAlternateAsSequence;\n\n\t\tconst testValue = this.test.getValue();\n\n\t\tif ( testValue === UNKNOWN ) {\n\t\t\t// initialise everything\n\t\t\tthis.test.initialise();\n\t\t\tthis.consequent.initialise();\n\t\t\tif ( this.alternate ) this.alternate.initialise();\n\n\t\t\tif ( this.rewriteConsequentAsSequence || this.consequent.body.every( isVarDeclaration ) ) {\n\t\t\t\tthis.consequent.removeCurlies = true;\n\t\t\t}\n\n\t\t\tif ( this.alternate ) {\n\t\t\t\tif ( this.rewriteAlternateAsSequence || isVarDeclaration( this.alternate ) || ( this.alternate.type === 'BlockStatement' && this.alternate.body.every( isVarDeclaration ) ) ) {\n\t\t\t\t\tthis.alternate.removeCurlies = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\telse if ( testValue ) { // if ( true ) {...}\n\t\t\tthis.consequent.initialise();\n\n\t\t\t// hoist any var declarations in the alternate, so we can\n\t\t\t// discard the whole thing\n\t\t\tif ( this.alternate ) {\n\t\t\t\tlet varsToHoist = {};\n\t\t\t\tthis.alternate.findVarDeclarations( varsToHoist );\n\n\t\t\t\t// TODO do something with varsToHoist\n\t\t\t}\n\n\t\t\t// TODO does this apply equally to else blocks?\n\t\t\tif ( !this.consequent.synthetic ) {\n\t\t\t\t// if there are no let/const/class/function declarations, we can\n\t\t\t\t// remove the curlies\n\t\t\t\tlet removeCurlies = true;\n\t\t\t\tlet i = this.consequent.body.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tconst node = this.consequent.body[i];\n\t\t\t\t\tif ( /Declaration/.test( node.type ) && node.kind !== 'var' ) {\n\t\t\t\t\t\tremoveCurlies = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.consequent.removeCurlies = removeCurlies;\n\t\t\t}\n\t\t}\n\n\t\telse { // if ( false ) {...}\n\t\t\tif ( this.alternate ) {\n\t\t\t\tthis.alternate.removeCurlies = this.rewriteAlternateAsSequence;\n\t\t\t\tthis.alternate.initialise();\n\t\t\t} else {\n\t\t\t\tthis.skip = true;\n\t\t\t}\n\n\t\t\tlet varsToHoist = {};\n\t\t\tthis.consequent.findVarDeclarations( varsToHoist );\n\n\t\t\t// TODO do something with varsToHoist\n\t\t}\n\t}\n\n\tminify ( code ) {\n\t\tconst testValue = this.test.getValue();\n\n\t\tif ( testValue !== UNKNOWN ) {\n\t\t\tif ( testValue ) { // if ( true ) {...}\n\t\t\t\tif ( this.alternate ) {\n\t\t\t\t\t// TODO handle var declarations in alternate\n\t\t\t\t\tcode.remove( this.consequent.end, this.end );\n\t\t\t\t}\n\n\t\t\t\tcode.remove( this.start, this.consequent.start );\n\t\t\t\tthis.consequent.minify( code );\n\t\t\t} else { // if ( false ) {...}\n\t\t\t\t// we know there's an alternate, otherwise we wouldn't be here\n\t\t\t\tthis.alternate.minify( code );\n\t\t\t\tcode.remove( this.start, this.alternate.start );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.test.minify( code );\n\n\t\tconst inverted = this.test.type === 'UnaryExpression' && this.test.operator === '!';\n\n\t\t// if we're rewriting as &&, test must be higher precedence than 6\n\t\t// to avoid being wrapped in parens. If ternary, 4\n\t\tconst targetPrecedence = this.alternate ? 4 : inverted ? 5 : 6;\n\n\t\tconst shouldParenthesiseTest = this.test.getPrecedence() < targetPrecedence;\n\t\tconst shouldParenthesiseConsequent = this.consequent.body.length === 1 ?\n\t\t\tthis.consequent.body[0].getPrecedence() < targetPrecedence :\n\t\t\ttrue;\n\n\t\t// special case – empty if block\n\t\tif ( this.consequent.body.length === 0 ) {\n\t\t\tconst canRemoveTest = this.test.type === 'Identifier' || this.test.getValue() !== UNKNOWN; // TODO can this ever happen?\n\n\t\t\tif ( this.alternate ) {\n\t\t\t\tthis.alternate.minify( code );\n\n\t\t\t\tif ( this.alternate.type === 'BlockStatement' && this.alternate.body.length === 0 ) {\n\t\t\t\t\tif ( canRemoveTest ) {\n\t\t\t\t\t\tcode.remove( this.start, this.end );\n\t\t\t\t\t\tthis.removed = true;\n\t\t\t\t\t}\n\t\t\t\t} else if ( canRewriteIfStatementAsSequence( this ) ) {\n\t\t\t\t\tthis.alternate.joinStatements = true;\n\n\t\t\t\t\tlet alternatePrecedence;\n\t\t\t\t\tif ( this.alternate.type === 'IfStatement' ) {\n\t\t\t\t\t\talternatePrecedence = this.alternate.alternate ?\n\t\t\t\t\t\t\t4 : // will rewrite as ternary\n\t\t\t\t\t\t\t5;\n\t\t\t\t\t} else if ( this.alternate.type === 'BlockStatement' ) {\n\t\t\t\t\t\talternatePrecedence = this.alternate.body.length === 1 ?\n\t\t\t\t\t\t\tthis.alternate.body[0].getPrecedence() :\n\t\t\t\t\t\t\t0; // sequence\n\t\t\t\t\t} else {\n\t\t\t\t\t\talternatePrecedence = 0; // err on side of caution\n\t\t\t\t\t}\n\n\t\t\t\t\tconst shouldParenthesiseAlternate = alternatePrecedence < ( inverted ? 6 : 5 );\n\t\t\t\t\tif ( shouldParenthesiseAlternate ) {\n\t\t\t\t\t\tcode.prependRight( this.alternate.start, '(' ).appendLeft( this.alternate.end, ')' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inverted ) code.remove( this.test.start, this.test.argument.start );\n\t\t\t\t\tcode.remove( this.start, this.test.start );\n\t\t\t\t\tcode.overwrite( this.test.end, this.alternate.start, inverted ? '&&' : '||' );\n\t\t\t\t} else {\n\t\t\t\t\tif ( inverted ) {\n\t\t\t\t\t\tcode.overwrite( this.start + 2, this.test.argument.start, '(' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode.overwrite( this.start + 2, this.test.start, '(!' );\n\t\t\t\t\t}\n\n\t\t\t\t\tcode.overwrite( this.test.end, this.alternate.start, ')' );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// TODO is `removed` still used?\n\t\t\t\tif ( canRemoveTest ) {\n\t\t\t\t\tcode.remove( this.start, this.end );\n\t\t\t\t\tthis.removed = true;\n\t\t\t\t} else {\n\t\t\t\t\tcode.remove( this.start, this.test.start );\n\t\t\t\t\tcode.remove( this.test.end, this.consequent.end );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// special case - empty else block\n\t\tif ( this.alternate && this.alternate.type === 'BlockStatement' && this.alternate.body.length === 0 ) {\n\t\t\tcode.remove( this.consequent.end, this.end );\n\n\t\t\tif ( canRewriteIfStatementAsSequence( this ) ) {\n\t\t\t\tthis.consequent.joinStatements = true;\n\n\t\t\t\tcode.overwrite( this.start, ( inverted ? this.test.argument.start : this.test.start ), shouldParenthesiseTest ? '(' : '' );\n\n\t\t\t\tlet replacement = shouldParenthesiseTest ? ')' : '';\n\t\t\t\treplacement += inverted ? '||' : '&&';\n\t\t\t\tif ( shouldParenthesiseConsequent ) replacement += '(';\n\n\t\t\t\tcode.overwrite( this.test.end, this.consequent.start, replacement );\n\n\t\t\t\tif ( shouldParenthesiseConsequent ) code.appendRight( this.consequent.end, ')' );\n\t\t\t} else {\n\t\t\t\tif ( this.test.start > this.start + 3 ) code.overwrite( this.start, this.test.start, 'if(' );\n\n\t\t\t\tif ( this.consequent.start > this.test.end + 1 ) code.overwrite( this.test.end, this.consequent.start, ')' );\n\t\t\t\tif ( this.end > this.consequent.end + 1 ) code.remove( this.consequent.end, this.end - 1 );\n\t\t\t}\n\n\t\t\t// don't minify alternate\n\t\t\tthis.consequent.minify( code );\n\t\t\treturn;\n\t\t}\n\n\t\tthis.consequent.minify( code );\n\t\tif ( this.alternate ) this.alternate.minify( code );\n\n\t\tif ( canRewriteIfStatementAsSequence( this ) ) {\n\t\t\tthis.consequent.joinStatements = true;\n\n\t\t\tif ( inverted ) code.remove( this.test.start, this.test.start + 1 );\n\n\t\t\tif ( this.alternate ) {\n\t\t\t\tthis.rewriteAsTernaryExpression( code, inverted, shouldParenthesiseTest, shouldParenthesiseConsequent );\n\t\t\t} else {\n\t\t\t\tthis.rewriteAsLogicalExpression( code, inverted, shouldParenthesiseTest, shouldParenthesiseConsequent );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.test.start > this.start + 3 ) code.overwrite( this.start + 2, this.test.start, '(' );\n\t\t\tif ( this.consequent.start > this.test.end + 1 ) code.overwrite( this.test.end, this.consequent.start, ')' );\n\n\t\t\tif ( this.alternate ) {\n\t\t\t\tconst lastNodeOfConsequent = this.consequent.getRightHandSide();\n\n\t\t\t\tconst firstNodeOfAlternate = ( this.alternate.type === 'BlockStatement' && this.alternate.removeCurlies ?\n\t\t\t\t\tthis.alternate.body[0] :\n\t\t\t\t\tthis.alternate ).getLeftHandSide();\n\n\t\t\t\tlet gap = ( lastNodeOfConsequent.type === 'BlockStatement' ? '' : ';' ) + 'else';\n\t\t\t\tif ( invalidChars.test( code.original[ firstNodeOfAlternate.start ] ) ) gap += ' ';\n\n\t\t\t\tlet c = this.consequent.end;\n\t\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\n\t\t\t\tcode.overwrite( c, this.alternate.start, gap );\n\t\t\t}\n\t\t}\n\t}\n\n\tpreventsCollapsedReturns ( returnStatements ) {\n\t\tfor ( let statement of this.consequent.body ) {\n\t\t\tif ( statement.skip ) continue;\n\t\t\tif ( statement.preventsCollapsedReturns( returnStatements ) ) return true;\n\t\t}\n\n\t\tif ( this.alternate ) {\n\t\t\tif ( this.alternate.type === 'ExpressionStatement' ) return false;\n\t\t\tif ( this.alternate.type === 'ReturnStatement' ) return returnStatements.push( this.alternate ), false;\n\t\t\tif ( this.alternate.type === 'IfStatement' ) return this.alternate.preventsCollapsedReturns( returnStatements );\n\n\t\t\tif ( this.alternate.type === 'BlockStatement' ) {\n\t\t\t\tfor ( let statement of this.alternate.body ) {\n\t\t\t\t\tif ( statement.skip ) continue;\n\t\t\t\t\tif ( statement.preventsCollapsedReturns( returnStatements ) ) return true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trewriteAsLogicalExpression ( code, inverted, shouldParenthesiseTest, shouldParenthesiseConsequent ) {\n\t\tthis.rewriteAsSequence = true;\n\n\t\tcode.overwrite( this.start, this.test.start, shouldParenthesiseTest ? '(' : '' );\n\n\t\tlet replacement = ( shouldParenthesiseTest ? ')' : '' ) + ( inverted ? '||' : '&&' ) + ( shouldParenthesiseConsequent ? '(' : '' );\n\t\tcode.overwrite( this.test.end, this.consequent.start, replacement );\n\n\t\tif ( shouldParenthesiseConsequent ) {\n\t\t\tlet c = this.consequent.end;\n\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t\tcode.appendLeft( c, ')' );\n\t\t}\n\t}\n\n\trewriteAsTernaryExpression ( code, inverted, shouldParenthesiseTest, shouldParenthesiseConsequent ) {\n\t\tthis.rewriteAsSequence = true;\n\n\t\tthis.alternate.joinStatements = true;\n\n\t\tlet shouldParenthesiseAlternate = false;\n\t\tif ( this.alternate.type === 'BlockStatement' ) {\n\t\t\tif ( this.alternate.body.length > 1 ) {\n\t\t\t\tshouldParenthesiseAlternate = true;\n\t\t\t} else if ( this.alternate.body[0].type !== 'IfStatement' ) {\n\t\t\t\tshouldParenthesiseAlternate = this.alternate.body[0].getPrecedence() < 4;\n\t\t\t}\n\t\t}\n\t\t// const shouldParenthesiseAlternate = this.alternate.type === 'BlockStatement' ?\n\t\t// \t( this.alternate.body.length === 1 ? getPrecedence( this.alternate.body[0] ) < 4 : true ) :\n\t\t// \tfalse; // TODO <-- is this right? Ternaries are r-to-l, so... maybe?\n\n\t\tcode.overwrite( this.start, this.test.start, shouldParenthesiseTest ? '(' : '' );\n\n\t\tlet replacement = shouldParenthesiseTest ? ')?' : '?';\n\t\tif ( inverted && shouldParenthesiseAlternate ) replacement += '(';\n\t\tif ( !inverted && shouldParenthesiseConsequent ) replacement += '(';\n\n\t\tcode.overwrite( this.test.end, this.consequent.start, replacement );\n\n\t\tlet consequentEnd = this.consequent.end;\n\t\twhile ( code.original[ consequentEnd - 1 ] === ';' ) consequentEnd -= 1;\n\n\t\tlet alternateEnd = this.alternate.end;\n\t\twhile ( code.original[ alternateEnd - 1 ] === ';' ) alternateEnd -= 1;\n\n\t\tcode.remove( consequentEnd, this.alternate.start );\n\n\t\tif ( inverted ) {\n\t\t\tlet alternateEnd = this.alternate.end;\n\t\t\twhile ( code.original[ alternateEnd - 1 ] === ';' ) alternateEnd -= 1;\n\n\t\t\tlet consequentEnd = this.consequent.end;\n\t\t\twhile ( code.original[ consequentEnd - 1 ] === ';' ) consequentEnd -= 1;\n\n\t\t\tcode.move( this.alternate.start, alternateEnd, this.consequent.start );\n\t\t\tcode.move( this.consequent.start, consequentEnd, alternateEnd );\n\n\t\t\tlet replacement = shouldParenthesiseAlternate ? '):' : ':';\n\t\t\tif ( shouldParenthesiseConsequent ) replacement += '(';\n\n\t\t\tcode.prependRight( this.consequent.start, replacement );\n\n\t\t\tif ( shouldParenthesiseConsequent ) code.appendLeft( consequentEnd, ')' );\n\t\t} else {\n\t\t\tlet replacement = shouldParenthesiseConsequent ? '):' : ':';\n\t\t\tif ( shouldParenthesiseAlternate ) replacement += '(';\n\n\t\t\tcode.appendLeft( this.consequent.end, replacement );\n\n\t\t\tlet c = this.alternate.end;\n\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t\tif ( shouldParenthesiseAlternate ) code.appendLeft( c, ')' );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ImportDefaultSpecifier extends Node {\n\tinitialise () {\n\t\tthis.local.declaration = this;\n\n\t\tthis.findScope( true ).addDeclaration( this.local, 'import' );\n\t\tsuper.initialise();\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ImportSpecifier extends Node {\n\tinitialise () {\n\t\tthis.local.declaration = this;\n\n\t\tthis.findScope( true ).addDeclaration( this.local, 'import' );\n\t\tsuper.initialise();\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class Literal extends Node {\n\tgetPrecedence () {\n\t\treturn 20;\n\t}\n\n\tgetValue () {\n\t\treturn this.value;\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.value === true ) {\n\t\t\tcode.overwrite( this.start, this.end, '!0' );\n\t\t} else if ( this.value === false ) {\n\t\t\tcode.overwrite( this.start, this.end, '!1' );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN, FALSY } from '../../utils/sentinels.js';\n\nexport default class LogicalExpression extends Node {\n\tgetLeftHandSide () {\n\t\treturn this.left.getLeftHandSide();\n\t}\n\n\tgetPrecedence () {\n\t\tconst leftValue = this.left.getValue();\n\t\tconst rightValue = this.right.getValue();\n\n\t\tif ( leftValue === UNKNOWN || rightValue === UNKNOWN ) return this.operator === '&&' ? 6 : 5;\n\n\t\treturn 20; // will be replaced by a literal\n\t}\n\n\tgetValue () {\n\t\tconst leftValue = this.left.getValue();\n\t\tconst rightValue = this.right.getValue();\n\n\t\tif ( leftValue === UNKNOWN || rightValue === UNKNOWN ) return UNKNOWN;\n\n\t\tif ( this.operator === '&&' ) {\n\t\t\tif ( leftValue && leftValue !== FALSY ) return rightValue;\n\t\t} else {\n\t\t\tif ( leftValue && leftValue !== FALSY ) return leftValue;\n\t\t\treturn rightValue;\n\t\t}\n\t}\n\n\tminify ( code ) {\n\t\tconst leftValue = this.left.getValue();\n\n\t\tif ( leftValue === UNKNOWN ) {\n\t\t\tif ( this.right.start > this.left.end + this.operator.length ) {\n\t\t\t\tcode.overwrite( this.left.end, this.right.start, this.operator );\n\t\t\t}\n\n\t\t\tsuper.minify( code );\n\t\t}\n\n\t\telse if ( leftValue && leftValue !== FALSY ) {\n\t\t\tif ( this.operator === '&&' ) {\n\t\t\t\tcode.remove( this.start, this.right.start );\n\t\t\t\tthis.right.minify( code );\n\t\t\t} else {\n\t\t\t\tcode.remove( this.left.start, this.end );\n\t\t\t\tthis.left.minify( code );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.operator === '&&' ) {\n\t\t\t\tcode.remove( this.left.start, this.end );\n\t\t\t\tthis.left.minify( code );\n\t\t\t} else {\n\t\t\t\tcode.remove( this.start, this.right.start );\n\t\t\t\tthis.right.minify( code );\n\t\t\t}\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport reserved from '../../utils/reserved.js';\nimport { UNKNOWN, TRUTHY, FALSY } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nfunction isValidIdentifier ( str ) {\n\t// TODO there's probably a bit more to it than this\n\treturn !reserved[ str ] && /^[a-zA-Z_$][a-zA-Z_$0-9]*$/.test( str );\n}\n\nexport default class MemberExpression extends Node {\n\tgetValue () {\n\t\tconst objectValue = this.object.getValue();\n\t\tif ( objectValue === UNKNOWN || objectValue === TRUTHY || objectValue === FALSY ) return UNKNOWN;\n\n\t\tif ( this.computed ) {\n\t\t\tconst propertyValue = this.property.getValue();\n\t\t\tif ( propertyValue === UNKNOWN || propertyValue === TRUTHY || propertyValue === FALSY ) return UNKNOWN;\n\n\t\t\treturn objectValue[ propertyValue ];\n\t\t}\n\n\t\tif ( !objectValue ) return UNKNOWN;\n\n\t\treturn objectValue[ this.property.name ];\n\t}\n\n\tgetPrecedence () {\n\t\treturn 18;\n\t}\n\n\tminify ( code ) {\n\t\tconst value = this.getValue();\n\n\t\tif ( value !== UNKNOWN ) {\n\t\t\tconst str = stringify( value );\n\n\t\t\tif ( str !== null ) {\n\t\t\t\tcode.overwrite( this.start, this.end, str );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif ( this.computed ) {\n\t\t\tconst value = this.property.getValue();\n\n\t\t\tif ( String( Number( value ) ) === String( value ) ) {\n\t\t\t\tcode.overwrite( this.object.end, this.end, `[${value}]` );\n\t\t\t}\n\n\t\t\telse if ( typeof value === 'string' && isValidIdentifier( value ) ) {\n\t\t\t\tcode.overwrite( this.object.end, this.end, `.${value}` );\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tif ( this.property.start > this.object.end + 1 ) {\n\t\t\t\t\tcode.overwrite( this.object.end, this.property.start, '[' );\n\t\t\t\t}\n\n\t\t\t\tif ( this.end > this.property.end + 1 ) {\n\t\t\t\t\tcode.overwrite( this.property.end, this.end, ']' );\n\t\t\t\t}\n\n\t\t\t\tthis.property.minify( code );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.property.start > this.object.end + 1 ) {\n\t\t\t\tcode.overwrite( this.object.end, this.property.start, '.' );\n\t\t\t}\n\t\t}\n\n\t\tthis.object.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class MethodDefinition extends Node {\n\tminify ( code ) {\n\t\tif ( this.computed ) {\n\t\t\tif ( this.key.start > this.start + 1 ) code.remove( this.start + 1, this.key.start );\n\t\t\tif ( this.value.start > this.key.end + 1 ) code.overwrite( this.key.end, this.value.start, ']' );\n\t\t}\n\n\t\telse {\n\t\t\tif ( this.value.start > this.key.end ) code.remove( this.key.end, this.value.start );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class NewExpression extends Node {\n\tgetPrecedence () {\n\t\treturn this.end > this.callee.end ? 18 : 17;\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.arguments.length ) {\n\t\t\tlet lastNode = this.callee;\n\n\t\t\tfor ( let i = 0; i < this.arguments.length; i += 1 ) {\n\t\t\t\tconst argument = this.arguments[i];\n\n\t\t\t\tif ( argument.start > lastNode.end + 1 ) code.overwrite( lastNode.end, argument.start, i ? ',' : '(' );\n\t\t\t\tlastNode = argument;\n\t\t\t}\n\n\t\t\tif ( this.end > lastNode.end + 1 ) code.overwrite( lastNode.end, this.end, ')' );\n\t\t}\n\n\t\telse if ( this.end > this.callee.end + 2 ) {\n\t\t\tcode.overwrite( this.callee.end, this.end, '()' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\nimport minifyPropertyKey from './shared/minifyPropertyKey.js';\nimport { TRUTHY } from '../../utils/sentinels.js';\n\nexport default class ObjectExpression extends Node {\n\tgetValue () {\n\t\treturn TRUTHY;\n\t}\n\n\tminify ( code ) {\n\t\tlet c = this.start;\n\n\t\tif ( this.properties.length ) {\n\t\t\tfor ( let i = 0; i < this.properties.length; i += 1 ) {\n\t\t\t\tconst p = this.properties[i];\n\n\t\t\t\tif ( p.start > c + 1 ) code.overwrite( c, p.start, i ? ',' : '{' );\n\n\t\t\t\tminifyPropertyKey( code, p, true );\n\t\t\t\tc = p.end;\n\t\t\t}\n\n\t\t\tif ( this.end > c + 1 ) code.remove( c, this.end - 1 );\n\t\t} else if ( this.end > this.start + 2 ) {\n\t\t\tcode.overwrite( this.start, this.end, '{}' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ObjectPattern extends Node {\n\tminify ( code ) {\n\t\tlet c = this.start + 1;\n\t\tfor ( let i = 0; i < this.properties.length; i += 1 ) {\n\t\t\t// TODO remove unused properties\n\t\t\tconst property = this.properties[i];\n\t\t\tproperty.minify( code );\n\n\t\t\tif ( property.start > c ) code.overwrite( c, property.start, i ? ',' : '' );\n\t\t\tc = property.end;\n\t\t}\n\n\t\tcode.remove( c, this.end - 1 );\n\t}\n}\n","import Node from '../Node.js';\n\nfunction shouldRemoveParens ( expression, parent ) {\n\tconst expressionPrecedence = expression.getPrecedence();\n\tconst parentPrecedence = parent.getPrecedence();\n\n\tif ( expression.type === 'CallExpression' ) {\n\t\treturn expression.callee.type === 'FunctionExpression'; // TODO is this right?\n\t}\n\n\tif ( expression.type === 'FunctionExpression' ) {\n\t\treturn (\n\t\t\t( parent.type === 'CallExpression' && parent.parent.type === 'ExpressionStatement' ) ||\n\t\t\t( parent.type === 'ExpressionStatement' && parent.parent.type === 'CallExpression' )\n\t\t);\n\t}\n\n\tif ( parentPrecedence > expressionPrecedence ) return false;\n\tif ( expressionPrecedence > parentPrecedence ) return true;\n\n\tif ( expression.type === 'UnaryExpression' ) return true;\n\tif ( expression.type === 'AssignmentExpression' ) return true;\n\tif ( expression.type === 'LogicalExpression' || expression.type === 'BinaryExpression' ) {\n\t\treturn ( parent.operator === '**' ? parent.right : parent.left ).contains( expression );\n\t}\n}\n\nexport default class ParenthesizedExpression extends Node {\n\tgetLeftHandSide () {\n\t\tlet node = this;\n\n\t\twhile ( node.type === 'ParenthesizedExpression' ) {\n\t\t\tnode = node.expression;\n\t\t}\n\n\t\tif ( shouldRemoveParens( node, this.parent ) ) return node.getLeftHandSide();\n\t\treturn node.parent;\n\t}\n\n\tgetValue () {\n\t\treturn this.expression.getValue();\n\t}\n\n\tminify ( code ) {\n\t\tlet parent = this.parent;\n\n\t\t// TODO we can do two remove operations — one at the start, one at the\n\t\t// end. don't need to do it on each descent\n\n\t\tlet expression = this.expression;\n\t\twhile ( expression.type === 'ParenthesizedExpression' ) {\n\t\t\tcode.remove( this.start, expression.start );\n\t\t\tcode.remove( expression.end, this.end );\n\t\t\texpression = expression.expression;\n\t\t}\n\n\t\tif ( shouldRemoveParens( expression, parent ) ) {\n\t\t\tcode.remove( this.start, expression.start );\n\t\t\tcode.remove( expression.end, this.end );\n\t\t} else {\n\t\t\tif ( expression.start > this.start + 1 ) code.remove( this.start + 1, expression.start );\n\t\t\tif ( this.end > expression.end + 1 ) code.remove( expression.end, this.end - 1 );\n\t\t}\n\n\t\t// special case (?) – IIFE\n\t\tif (\n\t\t\t(\n\t\t\t\tthis.parent.type === 'CallExpression' &&\n\t\t\t\tthis.parent.parent.type === 'ExpressionStatement' &&\n\t\t\t\t/FunctionExpression/.test( expression.type )\n\t\t\t) ||\n\t\t\t(\n\t\t\t\tthis.parent.type === 'ExpressionStatement' &&\n\t\t\t\texpression.type === 'CallExpression' &&\n\t\t\t\t/FunctionExpression/.test( expression.callee.type )\n\t\t\t)\n\t\t) {\n\t\t\tcode.prependRight( this.start, '!' ); // could be any unary operator – uglify uses !\n\t\t}\n\n\t\texpression.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nconst invalidChars = /[a-zA-Z$_0-9/]/;\n\nexport default class ReturnStatement extends Node {\n\tminify ( code ) {\n\t\tif ( !this.argument ) return;\n\n\t\tconst expression = this.argument.getLeftHandSide();\n\n\t\tconst needsTrailingWhitespace = invalidChars.test( code.original[ expression.start ] );\n\n\t\tif ( needsTrailingWhitespace && this.argument.start === this.start + 6 ) {\n\t\t\t// ensure that parenthesized expression isn't too close\n\t\t\tcode.appendLeft( this.start + 6, ' ' );\n\t\t}\n\n\t\tlet c = this.start + ( needsTrailingWhitespace ? 7 : 6 );\n\t\tif ( this.argument.start > c ) {\n\t\t\tcode.remove( c, this.argument.start );\n\t\t}\n\n\t\tthis.argument.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class SpreadElement extends Node {\n\tgetPrecedence () {\n\t\treturn 1;\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class SwitchCase extends Node {\n\tminify ( code ) {\n\t\tlet c;\n\n\t\tif ( this.test ) {\n\t\t\tthis.test.minify( code );\n\n\t\t\tif ( this.test.start > this.start + 5 ) {\n\t\t\t\tcode.remove( this.start + 5, this.test.start );\n\t\t\t}\n\n\t\t\tc = this.test.end;\n\t\t} else {\n\t\t\t// default\n\t\t\tc = this.start + 7;\n\t\t}\n\n\t\tthis.consequent.forEach( ( statement, i ) => {\n\t\t\tstatement.minify( code );\n\n\t\t\tconst separator = i ? ';' : ':'; // TODO can consequents be written as sequences?\n\n\t\t\tif ( statement.start === c ) {\n\t\t\t\tcode.appendLeft( c, separator );\n\t\t\t} else {\n\t\t\t\tif ( code.original.slice( c, statement.start ) !== separator ) {\n\t\t\t\t\tcode.overwrite( c, statement.start, separator );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc = statement.end;\n\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t});\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class SwitchStatement extends Node {\n\tminify ( code ) {\n\t\tif ( this.discriminant.start > this.start + 7 ) {\n\t\t\tcode.overwrite( this.start + 6, this.discriminant.start, '(' );\n\t\t}\n\n\t\tlet c = this.discriminant.end;\n\n\t\tthis.cases.forEach( ( switchCase, i ) => {\n\t\t\tif ( switchCase.start > c + ( i ? 1 : 2 ) ) {\n\t\t\t\tcode.overwrite( c, switchCase.start, i ? ';' : '){' );\n\t\t\t}\n\n\t\t\tc = switchCase.end;\n\t\t\twhile ( code.original[ c - 1 ] === ';' ) c -= 1;\n\t\t});\n\n\t\tif ( this.end > c + 1 ) code.overwrite( c, this.end, '}' );\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN, TRUTHY, FALSY } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nexport default class TemplateLiteral extends Node {\n\tgetValue () {\n\t\tlet values = new Array( this.expressions.length );\n\t\tlet i;\n\n\t\tfor ( i = 0; i < this.expressions.length; i += 1 ) {\n\t\t\tconst expression = this.expressions[i];\n\t\t\tconst value = expression.getValue();\n\n\t\t\tif ( value === UNKNOWN || value === TRUTHY || value === FALSY ) return UNKNOWN;\n\n\t\t\tvalues[i] = value;\n\t\t}\n\n\t\tlet result = '';\n\n\t\tfor ( i = 0; i < this.expressions.length; i += 1 ) {\n\t\t\tconst value = values[i];\n\n\t\t\tresult += this.quasis[i].value.raw;\n\t\t\tresult += value;\n\t\t}\n\n\t\tresult += this.quasis[i].value.raw;\n\n\t\treturn result;\n\t}\n\n\tminify ( code ) {\n\t\tconst value = this.getValue();\n\n\t\tif ( value !== UNKNOWN ) {\n\t\t\tcode.overwrite( this.start, this.end, stringify( value ) );\n\t\t\treturn;\n\t\t}\n\n\t\tlet c = this.start;\n\t\tlet i;\n\t\tfor ( i = 0; i < this.expressions.length; i += 1 ) {\n\t\t\tconst expression = this.expressions[i];\n\t\t\tconst quasi = this.quasis[i];\n\n\t\t\texpression.minify( code );\n\n\t\t\tif ( quasi.start > c + 1 ) {\n\t\t\t\tcode.remove( c, quasi.start - 1 );\n\t\t\t}\n\n\t\t\tif ( expression.start > quasi.end + 2 ) {\n\t\t\t\tcode.remove( quasi.end + 2, expression.start );\n\t\t\t}\n\n\t\t\tc = expression.end;\n\t\t}\n\n\t\tconst lastQuasi = this.quasis[i];\n\n\t\tif ( lastQuasi.start > c + 1 ) {\n\t\t\tcode.remove( c, lastQuasi.start - 1 );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class TryStatement extends Node {\n\tminify ( code ) {\n\t\tif ( this.block.start > this.start + 3 ) code.remove( this.start + 3, this.block.start );\n\n\t\tif ( this.handler ) {\n\t\t\tif ( this.handler.start > this.block.end ) {\n\t\t\t\tcode.remove( this.block.end, this.handler.start );\n\t\t\t}\n\n\t\t\tif ( this.finalizer && this.finalizer.start > this.handler.end + 7 ) {\n\t\t\t\tcode.overwrite( this.handler.end, this.finalizer.start, 'finally' );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( this.finalizer.start > this.block.end + 7 ) {\n\t\t\t\tcode.overwrite( this.block.end, this.finalizer.start, 'finally' );\n\t\t\t}\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\nimport { UNKNOWN, TRUTHY, FALSY } from '../../utils/sentinels.js';\nimport stringify from '../../utils/stringify.js';\n\nconst calculators = {\n\t'!': x => !x,\n\t'~': x => ~x,\n\t'+': x => +x,\n\t'-': x => -x,\n\t'typeof': x  => typeof x,\n\t'void'  : x  => void x,\n\t'delete': () => UNKNOWN\n};\n\nexport default class UnaryExpression extends Node {\n\tgetPrecedence () {\n\t\treturn 15;\n\t}\n\n\tgetValue () {\n\t\tconst arg = this.argument.getValue();\n\n\t\tif ( arg === UNKNOWN ) return UNKNOWN;\n\n\t\tif ( this.operator === '!' ) {\n\t\t\tif ( arg === TRUTHY ) return false;\n\t\t\tif ( arg === FALSY ) return true;\n\t\t}\n\n\t\treturn calculators[ this.operator ]( arg );\n\t}\n\n\tminify ( code ) {\n\t\tconst value = this.getValue();\n\t\tif ( value !== UNKNOWN && value !== TRUTHY && value !== FALSY ) {\n\t\t\tcode.overwrite( this.start, this.end, stringify( value ) );\n\t\t}\n\n\t\telse {\n\t\t\tconst len = this.operator.length;\n\t\t\tconst start = this.start + len;\n\n\t\t\tconst insertWhitespace = len > 1 && this.argument.getLeftHandSide().type !== 'ParenthesizedExpression';\n\t\t\tif ( insertWhitespace ) code.appendLeft( start, ' ' );\n\n\t\t\tcode.remove( start, this.argument.start );\n\n\t\t\tsuper.minify( code );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class UpdateExpression extends Node {\n\tgetPrecedence () {\n\t\treturn this.prefix ? 15 : 16;\n\t}\n\n\tinitialise () {\n\t\tif ( this.argument.type === 'Identifier' ) {\n\t\t\tconst declaration = this.findScope( false ).findDeclaration( this.argument.name );\n\t\t\tif ( declaration && declaration.kind === 'const' ) {\n\t\t\t\tthrow new CompileError( this, `${this.argument.name} is read-only` );\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise();\n\t}\n}\n","export default function extractNames ( node ) {\n\tconst names = [];\n\textractors[ node.type ]( names, node );\n\treturn names;\n}\n\nconst extractors = {\n\tIdentifier ( names, node ) {\n\t\tnames.push( node );\n\t},\n\n\tObjectPattern ( names, node ) {\n\t\tfor ( const prop of node.properties ) {\n\t\t\textractors[ prop.value.type ]( names, prop.value );\n\t\t}\n\t},\n\n\tArrayPattern ( names, node ) {\n\t\tfor ( const element of node.elements )  {\n\t\t\tif ( element ) extractors[ element.type ]( names, element );\n\t\t}\n\t},\n\n\tRestElement ( names, node ) {\n\t\textractors[ node.argument.type ]( names, node.argument );\n\t},\n\n\tAssignmentPattern ( names, node ) {\n\t\textractors[ node.left.type ]( names, node.left );\n\t}\n};\n","import Node from '../Node.js';\nimport extractNames from '../extractNames.js';\n\nexport default class VariableDeclaration extends Node {\n\tinitialise () {\n\t\tthis.scope = this.findScope( this.kind === 'var' );\n\t\tthis.skip = !!this.scope.parent; // TODO get rid of this\n\n\t\tthis.declarations.forEach( declarator => declarator.initialise() );\n\t}\n\n\tminify ( code ) {\n\t\tconst declarations = this.declarations.filter( d => !d.skip );\n\n\t\tlet allDupes = declarations.every( declarator => {\n\t\t\treturn extractNames( declarator.id ).every( identifier => {\n\t\t\t\treturn identifier.isDuplicate;\n\t\t\t});\n\t\t});\n\n\t\tlet c = allDupes ? this.start : this.start + this.kind.length + ( this.declarations[0].id.type === 'Identifier' ? 1 : 0 );\n\n\t\tfor ( let i = 0; i < declarations.length; i += 1 ) {\n\t\t\tconst declarator = declarations[i];\n\t\t\tif ( declarator.skip ) continue;\n\n\t\t\tif ( declarator.start > c ) code.overwrite( c, declarator.start, i ? ',' : '' );\n\t\t\tc = declarator.end;\n\t\t}\n\n\t\tif ( this.end > c + 1 ) code.remove( c, this.end - 1 ); // TODO semi-less declarations\n\n\t\tdeclarations.forEach( declarator => declarator.minify( code ) );\n\t}\n}\n","import Node from '../Node.js';\nimport extractNames from '../extractNames.js';\n\nexport default class VariableDeclarator extends Node {\n\tactivate () {\n\t\tthis.skip = this.parent.skip = false;\n\t\tthis.id.initialise();\n\t\tif ( this.init ) this.init.initialise();\n\t}\n\n\tinitialise () {\n\t\tconst kind = this.parent.kind;\n\t\tthis.scope = this.findScope( kind === 'var' );\n\n\t\tthis.skip = this.parent.skip;\n\n\t\textractNames( this.id ).forEach( node => {\n\t\t\tnode.declaration = this;\n\t\t\tthis.scope.addDeclaration( node, kind );\n\t\t});\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.init ) {\n\t\t\tif ( this.init.start > this.id.end + 1 ) code.overwrite( this.id.end, this.init.start, '=' );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class WhileStatement extends Node {\n\tgetRightHandSide () {\n\t\treturn this.body.getRightHandSide();\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.test.start > this.start + 6 ) {\n\t\t\tcode.overwrite( this.start + 5, this.test.start, '(' );\n\t\t}\n\n\t\tif ( this.body.start > this.test.end + 1 ) {\n\t\t\tcode.overwrite( this.test.end, this.body.start, ')' );\n\t\t}\n\n\t\t// special case — empty body\n\t\tif ( this.body.body.length === 0 || this.body.body[0].type === 'EmptyStatement' ) {\n\t\t\tcode.appendLeft( this.body.start, ';' );\n\t\t\tcode.remove( this.body.start, this.body.end );\n\t\t}\n\n\t\tsuper.minify( code );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class YieldExpression extends Node {\n\tgetPrecedence () {\n\t\treturn 2;\n\t}\n}\n","import Array from './shared/Array.js';\nimport ArrowFunctionExpression from './ArrowFunctionExpression.js';\nimport AssignmentExpression from './AssignmentExpression.js';\nimport BinaryExpression from './BinaryExpression.js';\nimport CallExpression from './CallExpression.js';\nimport CatchClause from './CatchClause.js';\nimport ClassBody from './ClassBody.js';\nimport ClassDeclaration from './ClassDeclaration.js';\nimport ClassExpression from './ClassExpression.js';\nimport ConditionalExpression from './ConditionalExpression.js';\nimport DoWhileStatement from './DoWhileStatement.js';\nimport ExpressionStatement from './ExpressionStatement.js';\nimport ForStatement from './ForStatement.js';\nimport ForInOfStatement from './shared/ForInOfStatement.js';\nimport FunctionDeclaration from './FunctionDeclaration.js';\nimport FunctionExpression from './FunctionExpression.js';\nimport Identifier from './Identifier.js';\nimport IfStatement from './IfStatement.js';\nimport ImportDefaultSpecifier from './ImportDefaultSpecifier.js';\nimport ImportSpecifier from './ImportSpecifier.js';\nimport Literal from './Literal.js';\nimport LogicalExpression from './LogicalExpression.js';\nimport MemberExpression from './MemberExpression.js';\nimport MethodDefinition from './MethodDefinition.js';\nimport NewExpression from './NewExpression.js';\nimport ObjectExpression from './ObjectExpression.js';\nimport ObjectPattern from './ObjectPattern.js';\nimport ParenthesizedExpression from './ParenthesizedExpression.js';\nimport ReturnStatement from './ReturnStatement.js';\nimport SpreadElement from './SpreadElement.js';\nimport SwitchCase from './SwitchCase.js';\nimport SwitchStatement from './SwitchStatement.js';\nimport TemplateLiteral from './TemplateLiteral.js';\nimport TryStatement from './TryStatement.js';\nimport UnaryExpression from './UnaryExpression.js';\nimport UpdateExpression from './UpdateExpression.js';\nimport VariableDeclaration from './VariableDeclaration.js';\nimport VariableDeclarator from './VariableDeclarator.js';\nimport WhileStatement from './WhileStatement.js';\nimport YieldExpression from './YieldExpression.js';\n\nexport default {\n\tArrayExpression: Array,\n\tArrayPattern: Array,\n\tArrowFunctionExpression,\n\tAssignmentExpression,\n\tBinaryExpression,\n\tCallExpression,\n\tCatchClause,\n\tClassBody,\n\tClassDeclaration,\n\tClassExpression,\n\tConditionalExpression,\n\tDoWhileStatement,\n\tExpressionStatement,\n\tForStatement,\n\tForInStatement: ForInOfStatement,\n\tForOfStatement: ForInOfStatement,\n\tFunctionDeclaration,\n\tFunctionExpression,\n\tIdentifier,\n\tIfStatement,\n\tImportDefaultSpecifier,\n\tImportSpecifier,\n\tLiteral,\n\tLogicalExpression,\n\tMemberExpression,\n\tMethodDefinition,\n\tNewExpression,\n\tObjectExpression,\n\tObjectPattern,\n\tParenthesizedExpression,\n\tReturnStatement,\n\tSpreadElement,\n\tSwitchCase,\n\tSwitchStatement,\n\tTemplateLiteral,\n\tTryStatement,\n\tUnaryExpression,\n\tUpdateExpression,\n\tVariableDeclaration,\n\tVariableDeclarator,\n\tWhileStatement,\n\tYieldExpression\n};\n","import breaksExecution from './breaksExecution.js';\n\nexport default function blockBreaksExecution ( body ) {\n\tlet i = body.length;\n\twhile ( i-- ) {\n\t\tconst maybeReturnNode = breaksExecution( body[i] );\n\t\tif ( maybeReturnNode ) return maybeReturnNode;\n\t}\n\n\treturn null;\n}\n","import { UNKNOWN } from '../utils/sentinels.js';\nimport blockBreaksExecution from './blockBreaksExecution.js';\n\nexport default function breaksExecution ( node ) {\n\tif ( node.type === 'ReturnStatement' || node.type === 'BreakStatement' || node.type === 'ContinueStatement' ) {\n\t\treturn node;\n\t}\n\n\tif ( node.type === 'IfStatement' ) {\n\t\tconst testValue = node.test.getValue();\n\n\t\tif ( testValue === UNKNOWN ) return null;\n\n\t\tif ( testValue ) { // if ( true ) {...}\n\t\t\treturn blockBreaksExecution( node.consequent.body );\n\t\t}\n\n\t\t// if ( false ) {...}\n\t\tif ( !node.alternate ) return null;\n\n\t\tif ( node.alternate.type === 'BlockStatement' ) {\n\t\t\treturn blockBreaksExecution( node.alternate.body );\n\t\t}\n\n\t\tif ( node.alternate.type === 'IfStatement' ) {\n\t\t\treturn breaksExecution( node.alternate );\n\t\t}\n\n\t\treturn null;\n\t}\n}\n","import Node from './Node.js';\nimport Scope from './Scope.js';\nimport extractNames from './extractNames.js';\nimport breaksExecution from '../analysis/breaksExecution.js';\n\nfunction compatibleDeclarations ( a, b ) {\n\tif ( a === b ) return true;\n\tif ( a === 'var' || b === 'var' ) return false;\n\treturn true;\n}\n\nconst shouldPreserveAfterReturn = {\n\tFunctionDeclaration: true,\n\tVariableDeclaration: true,\n\tClassDeclaration: true\n};\n\nconst allowsBlockLessStatement = {\n\tForStatement: true,\n\tForInStatement: true,\n\tForOfStatement: true,\n\tIfStatement: true,\n\tWhileStatement: true\n};\n\nfunction endsWithCurlyBrace ( statement ) {\n\tif ( statement.type === 'IfStatement' ) {\n\t\tif ( statement.rewriteAsSequence ) return false;\n\n\t\tif ( statement.alternate ) {\n\t\t\tif ( statement.alternate.type === 'IfStatement' ) {\n\t\t\t\treturn endsWithCurlyBrace( statement.alternate );\n\t\t\t}\n\n\t\t\tif ( statement.alternate.synthetic ) return false;\n\t\t\tif ( statement.alternate.removeCurlies ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !statement.consequent.synthetic && !statement.consequent.removeCurlies;\n\t}\n\n\tif ( /^(?:For(?:In|Of)?|While)Statement/.test( statement.type ) ) {\n\t\treturn !statement.body.synthetic && !statement.body.removeCurlies;\n\t}\n\n\treturn /(?:Class|Function)Declaration/.test( statement.type );\n}\n\nexport default class BlockStatement extends Node {\n\tcreateScope ( parent ) {\n\t\tthis.parentIsFunction = /Function/.test( this.parent.type );\n\t\tthis.isFunctionBlock = this.parentIsFunction || this.parent.type === 'Root';\n\n\t\tthis.scope = new Scope({\n\t\t\tblock: !this.isFunctionBlock,\n\t\t\tparent: parent || this.parent.findScope( false ), // TODO always supply parent\n\t\t\towner: this\n\t\t});\n\n\t\tconst params = this.parent.params || ( this.parent.type === 'CatchClause' && [ this.parent.param ] );\n\n\t\tif ( params && params.length ) {\n\t\t\tparams.forEach( node => {\n\t\t\t\textractNames( node ).forEach( identifier => {\n\t\t\t\t\tthis.scope.addDeclaration( identifier, 'param' );\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\tinitialise () {\n\t\t// normally the scope gets created here, during initialisation,\n\t\t// but in some cases (e.g. `for` statements), we need to create\n\t\t// the scope early, as it pertains to both the init block and\n\t\t// the body of the statement\n\t\tif ( !this.scope ) this.createScope( this.parent.findScope( false ) );\n\n\t\tlet executionIsBroken = false;\n\t\tlet maybeReturnNode;\n\t\tlet hasDeclarationsAfterBreak = false;\n\n\t\tlet canCollapseReturns = this.parentIsFunction;\n\t\tlet returnStatements = [];\n\n\t\tfor ( let i = 0; i < this.body.length; i += 1 ) {\n\t\t\tconst node = this.body[i];\n\n\t\t\tif ( executionIsBroken ) {\n\t\t\t\tif ( shouldPreserveAfterReturn[ node.type ] ) {\n\t\t\t\t\thasDeclarationsAfterBreak = true;\n\t\t\t\t\tnode.initialise();\n\t\t\t\t} else {\n\t\t\t\t\tnode.skip = true;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmaybeReturnNode = breaksExecution( node );\n\t\t\tif ( maybeReturnNode ) executionIsBroken = true;\n\n\t\t\tnode.initialise();\n\n\t\t\tif ( canCollapseReturns ) {\n\t\t\t\tif ( node.preventsCollapsedReturns( returnStatements ) ) {\n\t\t\t\t\tcanCollapseReturns = false;\n\t\t\t\t} else {\n\t\t\t\t\t// console.log( `${node.type} preventsCollapsedReturns`)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.collapseReturnStatements = canCollapseReturns && returnStatements.length;\n\t\tthis.returnStatements = returnStatements;\n\n\t\t// if `return` is the last line of a function, remove it\n\t\tif ( maybeReturnNode && this.parentIsFunction && !hasDeclarationsAfterBreak ) {\n\t\t\t// TODO also capture `return undefined` and `return void 0` etc?\n\t\t\tif ( !maybeReturnNode.argument ) {\n\t\t\t\tmaybeReturnNode.skip = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.scope.consolidate();\n\t}\n\n\tfindVarDeclarations ( varsToHoist ) {\n\t\tif ( !this.scope ) this.createScope( this.parent.findScope( false ) );\n\n\t\tthis.body.forEach( node => {\n\t\t\tif ( node.type === 'VariableDeclaration' && node.kind === 'var' ) {\n\t\t\t\tnode.declarations.forEach( declarator => {\n\t\t\t\t\textractNames( declarator.id ).forEach( identifier => {\n\t\t\t\t\t\tvarsToHoist[ identifier.name ] = true;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tnode.findVarDeclarations( varsToHoist );\n\t\t\t}\n\t\t});\n\n\t\tthis.scope.consolidate();\n\t}\n\n\tfindLexicalBoundary () {\n\t\tif ( this.type === 'Program' ) return this;\n\t\tif ( /^Function/.test( this.parent.type ) ) return this;\n\n\t\treturn this.parent.findLexicalBoundary();\n\t}\n\n\tfindScope ( functionScope ) {\n\t\tif ( functionScope && !this.isFunctionBlock ) return this.parent.findScope( functionScope );\n\t\treturn this.scope;\n\t}\n\n\tgetLeftHandSide () {\n\t\tif ( this.removeCurlies || this.synthetic ) return this.body[0].getLeftHandSide();\n\t\treturn this;\n\t}\n\n\tgetRightHandSide () {\n\t\tif ( this.removeCurlies || this.synthetic ) return this.body[this.body.length - 1].getRightHandSide();\n\t\treturn this;\n\t}\n\n\tminify ( code ) {\n\t\tif ( this.scope ) this.scope.mangle( code ); // class declarations do not create their own scope\n\n\t\tconst statements = this.body.filter( statement => !statement.skip );\n\n\t\t// if ( this.collapseReturnStatements ) {\n\t\t// \tthis.minifyWithCollapsedReturnStatements( code, statements );\n\t\t// } else {\n\t\tstatements.forEach( statement => {\n\t\t\tstatement.minify( code );\n\t\t});\n\t\t// }\n\n\t\t// TODO this is confusing\n\t\tconst rewriteAsSequence = !this.parentIsFunction && statements.length > 0 && ( this.joinStatements || statements.every( statement => {\n\t\t\treturn statement.type === 'ExpressionStatement' ||\n\t\t\t       statement.rewriteAsSequence;\n\t\t}) );\n\n\t\tconst separator = rewriteAsSequence ? ',' : ';';\n\n\t\t// TODO this is confusing\n\t\tlet removeCurlies = this.parent.type === 'Root' || !this.synthetic && (\n\t\t\tthis.parent.type === 'IfStatement' ?\n\t\t\t\tthis.removeCurlies :\n\t\t\t\t( allowsBlockLessStatement[ this.parent.type ] && rewriteAsSequence )\n\t\t);\n\n\t\tthis.removeCurlies = removeCurlies;\n\n\t\t// remove leading whitespace\n\t\tlet lastEnd = ( this.parent.type === 'Root' || removeCurlies ) ? this.start : this.start + 1;\n\n\t\tif ( statements.length ) {\n\t\t\tlet nextSeparator = '';\n\n\t\t\tfor ( let i = 0; i < statements.length; i += 1 ) {\n\t\t\t\tconst statement = statements[i];\n\n\t\t\t\tif ( nextSeparator === '' ) {\n\t\t\t\t\tif ( statement.start > lastEnd ) code.remove( lastEnd, statement.start );\n\t\t\t\t} else {\n\t\t\t\t\tif ( statement.start === lastEnd ) {\n\t\t\t\t\t\tcode.appendLeft( lastEnd, separator );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ( code.original.slice( lastEnd, statement.start ) !== nextSeparator ) {\n\t\t\t\t\t\t\tcode.overwrite( lastEnd, statement.start, nextSeparator );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlastEnd = statement.end;\n\n\t\t\t\t// remove superfluous semis\n\t\t\t\twhile ( code.original[ lastEnd - 1 ] === ';' ) lastEnd -= 1;\n\n\t\t\t\tif ( statement.removed ) {\n\t\t\t\t\tnextSeparator = '';\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tnextSeparator = endsWithCurlyBrace( statement ) ? '' : separator;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst end = removeCurlies ? this.end : this.end - 1;\n\t\t\tif ( end > lastEnd ) code.remove( lastEnd, end );\n\t\t} else {\n\t\t\t// empty block\n\t\t\tif ( this.removeCurlies || this.parent.type === 'Root' ) {\n\t\t\t\tcode.remove( this.start, this.end );\n\t\t\t} else if ( this.end > this.start + 2 ) {\n\t\t\t\tcode.remove( this.start + 1, this.end - 1 );\n\t\t\t}\n\t\t}\n\n\t\t// combine adjacent var declarations\n\t\tlet lastStatement;\n\t\tfor ( let statement of statements ) {\n\t\t\tif ( lastStatement && lastStatement.type === 'VariableDeclaration' && statement.type === 'VariableDeclaration' ) {\n\t\t\t\t// are they compatible?\n\t\t\t\tif ( compatibleDeclarations( lastStatement.kind, statement.kind ) ) {\n\t\t\t\t\tconst lastDeclarator = lastStatement.declarations[ lastStatement.declarations.length - 1 ];\n\t\t\t\t\tcode.overwrite( lastDeclarator.end, statement.declarations[0].start, ',' );\n\n\t\t\t\t\tstatement.collapsed = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !statement.collapsed && statement.kind === 'const' && ( !lastStatement || lastStatement.kind !== 'VariableDeclaration' ) ) {\n\t\t\t\tcode.overwrite( statement.start, statement.start + 5, 'let' );\n\t\t\t}\n\n\t\t\tlastStatement = statement;\n\t\t}\n\t}\n\n\t// TODO make this work!\n\t// minifyWithCollapsedReturnStatements ( code, statements ) {\n\t// \tif ( this.returnStatements.length === 1 ) {\n\t// \t\tconst returnStatement = this.returnStatements[0];\n\n\t// \t\tif ( returnStatement.parent === this ) {\n\t// \t\t\t// case 1 – a single top-level return with no argument\n\t// \t\t\tif ( !returnStatement.argument ) {\n\t// \t\t\t\t// does this already get skipped above?\n\t// \t\t\t\tthrow new Error( 'TODO single return statement without arg' );\n\t// \t\t\t}\n\n\t// \t\t\t// case 2 – a single top-level return with an argument\n\t// \t\t\telse {\n\t// \t\t\t\tthrow new Error( 'TODO single return statement with arg' );\n\t// \t\t\t}\n\t// \t\t}\n\n\t// \t\telse {\n\t// \t\t\t// case 3 – a single conditional return with no argument\n\t// \t\t\tif ( !returnStatement.argument ) {\n\t// \t\t\t\treturnStatement.skip = true;\n\t// \t\t\t}\n\n\t// \t\t\t// case 4 – a single conditional return with an argument\n\t// \t\t\telse {\n\t// \t\t\t\tthrow new Error( 'TODO single return statement with arg' );\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\n\t// \telse {\n\t// \t\tthrow new Error( 'TODO multiple return statements' );\n\t// \t}\n\n\t// \tstatements.forEach( statement => {\n\t// \t\tstatement.minify( code );\n\t// \t});\n\t// }\n}\n","import types from './types/index.js';\nimport BlockStatement from './BlockStatement.js';\nimport Node from './Node.js';\nimport keys from './keys.js';\n\nconst statementsWithBlocks = {\n\tForStatement: 'body',\n\tForInStatement: 'body',\n\tForOfStatement: 'body',\n\tWhileStatement: 'body',\n\tDoWhileStatement: 'body',\n\tArrowFunctionExpression: 'body'\n};\n\nfunction synthetic ( expression ) {\n\treturn {\n\t\tstart: expression.start,\n\t\tend: expression.end,\n\t\ttype: 'BlockStatement',\n\t\tbody: [ expression ],\n\t\tsynthetic: true\n\t};\n}\n\nexport default function wrap ( raw, parent ) {\n\tif ( !raw ) return;\n\n\tif ( 'length' in raw ) {\n\t\tlet i = raw.length;\n\t\twhile ( i-- ) wrap( raw[i], parent );\n\t\treturn;\n\t}\n\n\t// with e.g. shorthand properties, key and value are\n\t// the same node. We don't want to wrap an object twice\n\tif ( raw.__wrapped ) return;\n\traw.__wrapped = true;\n\n\tif ( !keys[ raw.type ] ) {\n\t\tkeys[ raw.type ] = Object.keys( raw ).filter( key => typeof raw[ key ] === 'object' );\n\t}\n\n\t// create synthetic block statements, otherwise all hell\n\t// breaks loose when it comes to block scoping\n\tif ( raw.type === 'IfStatement' ) {\n\t\tif ( raw.consequent.type !== 'BlockStatement' ) raw.consequent = synthetic( raw.consequent );\n\t\tif ( raw.alternate && raw.alternate.type !== 'BlockStatement' ) raw.alternate = synthetic( raw.alternate );\n\t} else if ( statementsWithBlocks[ raw.type ] && raw.body.type !== 'BlockStatement' ) {\n\t\traw.body = synthetic( raw.body );\n\t}\n\n\tNode( raw, parent );\n\n\tconst type = ( raw.type === 'BlockStatement' ? BlockStatement : types[ raw.type ] ) || Node;\n\traw.__proto__ = type.prototype;\n}\n","var charToInteger = {};\nvar integerToChar = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split( '' ).forEach( function ( char, i ) {\n\tcharToInteger[ char ] = i;\n\tintegerToChar[ i ] = char;\n});\n\nfunction decode$1 ( string ) {\n\tvar result = [],\n\t\tlen = string.length,\n\t\ti,\n\t\thasContinuationBit,\n\t\tshift = 0,\n\t\tvalue = 0,\n\t\tinteger,\n\t\tshouldNegate;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tinteger = charToInteger[ string[i] ];\n\n\t\tif ( integer === undefined ) {\n\t\t\tthrow new Error( 'Invalid character (' + string[i] + ')' );\n\t\t}\n\n\t\thasContinuationBit = integer & 32;\n\n\t\tinteger &= 31;\n\t\tvalue += integer << shift;\n\n\t\tif ( hasContinuationBit ) {\n\t\t\tshift += 5;\n\t\t} else {\n\t\t\tshouldNegate = value & 1;\n\t\t\tvalue >>= 1;\n\n\t\t\tresult.push( shouldNegate ? -value : value );\n\n\t\t\t// reset\n\t\t\tvalue = shift = 0;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction encode$1 ( value ) {\n\tvar result, i;\n\n\tif ( typeof value === 'number' ) {\n\t\tresult = encodeInteger( value );\n\t} else {\n\t\tresult = '';\n\t\tfor ( i = 0; i < value.length; i += 1 ) {\n\t\t\tresult += encodeInteger( value[i] );\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction encodeInteger ( num ) {\n\tvar result = '', clamped;\n\n\tif ( num < 0 ) {\n\t\tnum = ( -num << 1 ) | 1;\n\t} else {\n\t\tnum <<= 1;\n\t}\n\n\tdo {\n\t\tclamped = num & 31;\n\t\tnum >>= 5;\n\n\t\tif ( num > 0 ) {\n\t\t\tclamped |= 32;\n\t\t}\n\n\t\tresult += integerToChar[ clamped ];\n\t} while ( num > 0 );\n\n\treturn result;\n}\n\nfunction decodeSegments ( encodedSegments ) {\n\tvar i = encodedSegments.length;\n\tvar segments = new Array( i );\n\n\twhile ( i-- ) { segments[i] = decode$1( encodedSegments[i] ); }\n\treturn segments;\n}\n\nfunction decode$$1 ( mappings ) {\n\tvar sourceFileIndex = 0;   // second field\n\tvar sourceCodeLine = 0;    // third field\n\tvar sourceCodeColumn = 0;  // fourth field\n\tvar nameIndex = 0;         // fifth field\n\n\tvar lines = mappings.split( ';' );\n\tvar numLines = lines.length;\n\tvar decoded = new Array( numLines );\n\n\tvar i;\n\tvar j;\n\tvar line;\n\tvar generatedCodeColumn;\n\tvar decodedLine;\n\tvar segments;\n\tvar segment;\n\tvar result;\n\n\tfor ( i = 0; i < numLines; i += 1 ) {\n\t\tline = lines[i];\n\n\t\tgeneratedCodeColumn = 0; // first field - reset each time\n\t\tdecodedLine = [];\n\n\t\tsegments = decodeSegments( line.split( ',' ) );\n\n\t\tfor ( j = 0; j < segments.length; j += 1 ) {\n\t\t\tsegment = segments[j];\n\n\t\t\tif ( !segment.length ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tgeneratedCodeColumn += segment[0];\n\n\t\t\tresult = [ generatedCodeColumn ];\n\t\t\tdecodedLine.push( result );\n\n\t\t\tif ( segment.length === 1 ) {\n\t\t\t\t// only one field!\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsourceFileIndex  += segment[1];\n\t\t\tsourceCodeLine   += segment[2];\n\t\t\tsourceCodeColumn += segment[3];\n\n\t\t\tresult.push( sourceFileIndex, sourceCodeLine, sourceCodeColumn );\n\n\t\t\tif ( segment.length === 5 ) {\n\t\t\t\tnameIndex += segment[4];\n\t\t\t\tresult.push( nameIndex );\n\t\t\t}\n\t\t}\n\n\t\tdecoded[i] = decodedLine;\n\t}\n\n\treturn decoded;\n}\n\nfunction encode$$1 ( decoded ) {\n\tvar offsets = {\n\t\tgeneratedCodeColumn: 0,\n\t\tsourceFileIndex: 0,   // second field\n\t\tsourceCodeLine: 0,    // third field\n\t\tsourceCodeColumn: 0,  // fourth field\n\t\tnameIndex: 0          // fifth field\n\t};\n\n\treturn decoded.map( function (line) {\n\t\toffsets.generatedCodeColumn = 0; // first field - reset each time\n\t\treturn line.map( encodeSegment ).join( ',' );\n\t}).join( ';' );\n\n\tfunction encodeSegment ( segment ) {\n\t\tif ( !segment.length ) {\n\t\t\treturn segment;\n\t\t}\n\n\t\tvar result = new Array( segment.length );\n\n\t\tresult[0] = segment[0] - offsets.generatedCodeColumn;\n\t\toffsets.generatedCodeColumn = segment[0];\n\n\t\tif ( segment.length === 1 ) {\n\t\t\t// only one field!\n\t\t\treturn encode$1( result );\n\t\t}\n\n\t\tresult[1] = segment[1] - offsets.sourceFileIndex;\n\t\tresult[2] = segment[2] - offsets.sourceCodeLine;\n\t\tresult[3] = segment[3] - offsets.sourceCodeColumn;\n\n\t\toffsets.sourceFileIndex  = segment[1];\n\t\toffsets.sourceCodeLine   = segment[2];\n\t\toffsets.sourceCodeColumn = segment[3];\n\n\t\tif ( segment.length === 5 ) {\n\t\t\tresult[4] = segment[4] - offsets.nameIndex;\n\t\t\toffsets.nameIndex = segment[4];\n\t\t}\n\n\t\treturn encode$1( result );\n\t}\n}\n\nexport { decode$$1 as decode, encode$$1 as encode };\n//# sourceMappingURL=sourcemap-codec.es.js.map\n","import { parse } from 'acorn';\nimport { decode } from 'sourcemap-codec';\nimport keys from './keys.js';\nimport Program from './Program.js';\n\nexport default function check ( magicString, ast ) {\n\tconst code = magicString.toString();\n\n\ttry {\n\t\tparse( code, {\n\t\t\tecmaVersion: 8,\n\t\t\tsourceType: 'module'\n\t\t});\n\t} catch ( err ) {\n\t\tconst map = magicString.generateMap();\n\t\tconst { line, column } = err.loc;\n\t\tconst snippet = code.slice( Math.max( 0, err.pos - 35 ), Math.min( code.length, err.pos + 35 ) );\n\n\t\tconst mappings = decode( map.mappings );\n\t\tconst segments = mappings[ line - 1 ];\n\n\t\tfor ( let i = 0; i < segments.length; i += 1 ) {\n\t\t\tconst segment = segments[i];\n\t\t\tif ( segment[0] >= column ) {\n\t\t\t\tconst sourceCodeLine = segment[2];\n\t\t\t\tconst sourceCodeColumn = segment[3];\n\n\t\t\t\terr.message = `Butternut generated invalid JS: code in source file near (${sourceCodeLine + 1}:${sourceCodeColumn}) became\\n...${snippet}...`;\n\n\t\t\t\ttry {\n\t\t\t\t\tconst repro = createRepro( magicString.original, ast, sourceCodeLine, sourceCodeColumn );\n\t\t\t\t\tif ( repro ) err.repro = repro;\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// do nothing\n\t\t\t\t}\n\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t}\n\n\t\tthrow err;\n\t}\n}\n\nfunction createRepro ( source, ast, line, column ) {\n\tconst lines = source.split( '\\n' );\n\n\tlet c = 0;\n\tfor ( let i = 0; i < line; i += 1 ) c += lines[i].length + 1;\n\tc += column;\n\n\tlet node = zoomIn( ast, c );\n\n\tdo {\n\t\tnode = zoomOut( node );\n\n\t\tconst slice = source.slice( node.start, node.end );\n\t\tconst ast = parse( slice, {\n\t\t\tecmaVersion: 8,\n\t\t\tpreserveParens: true,\n\t\t\tsourceType: 'module',\n\t\t\tallowReturnOutsideFunction: true\n\t\t});\n\n\t\tconst { code } = new Program( slice, ast, null ).export({});\n\n\t\ttry {\n\t\t\tparse( code, {\n\t\t\t\tecmaVersion: 8,\n\t\t\t\tsourceType: 'module',\n\t\t\t\tallowReturnOutsideFunction: true\n\t\t\t});\n\t\t} catch ( err ) {\n\t\t\treturn {\n\t\t\t\tinput: slice,\n\t\t\t\toutput: code\n\t\t\t};\n\t\t}\n\t} while ( node );\n}\n\nfunction zoomIn ( node, c ) {\n\tif ( !node ) return null;\n\n\tif ( c < node.start ) return null;\n\tif ( c > node.end ) return null;\n\n\tconst k = keys[ node.type ];\n\tfor ( let i = 0; i < k.length; i += 1 ) {\n\t\tconst key = k[i];\n\n\t\tif ( Array.isArray( node[key] ) ) {\n\t\t\tconst body = node[key];\n\n\t\t\tfor ( let j = 0; j < body.length; j += 1 ) {\n\t\t\t\tif ( body[j] ) {\n\t\t\t\t\tif ( body[j].start > c ) return zoomIn( body[j], body[j].start );\n\n\t\t\t\t\tconst child = zoomIn( body[j], c );\n\t\t\t\t\tif ( child ) return child;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst child = zoomIn( node[key], c );\n\t\t\tif ( child ) return child;\n\t\t}\n\t}\n\n\treturn node;\n}\n\nfunction zoomOut ( node ) {\n\twhile ( !/Statement|Declaration/.test( node.parent.type ) ) {\n\t\tif ( !node.parent ) return null;\n\t\tnode = node.parent;\n\t}\n\n\treturn node.parent;\n}","import MagicString from 'magic-string';\nimport wrap from './wrap.js';\nimport BlockStatement from './BlockStatement.js';\nimport check from './check.js';\n\nexport default function Program ( source, ast, stats ) {\n\tthis.stats = stats;\n\tthis.type = 'Root';\n\n\tthis.source = source;\n\tif ( DEBUG ) stats.time( 'create magicString' );\n\tthis.magicString = new MagicString( source );\n\tif ( DEBUG ) stats.timeEnd( 'create magicString' );\n\n\tthis.ast = ast;\n\tthis.depth = 0;\n\n\tif ( DEBUG ) stats.time( 'create body' );\n\twrap( this.body = ast, this );\n\tthis.body.__proto__ = BlockStatement.prototype;\n\tif ( DEBUG ) stats.timeEnd( 'create body' );\n\n\tthis.templateElements = [];\n\tif ( DEBUG ) stats.time( 'init body' );\n\tthis.body.initialise();\n\tif ( DEBUG ) stats.timeEnd( 'init body' );\n\n\tif ( DEBUG ) stats.time( 'minify' );\n\tthis.body.minify( this.magicString );\n\tif ( DEBUG ) stats.timeEnd( 'minify' );\n}\n\nProgram.prototype = {\n\texport ( options ) {\n\t\tconst stats = this.stats;\n\n\t\tif ( DEBUG ) stats.time( 'generate code' );\n\t\tconst code = this.magicString.toString();\n\t\tif ( DEBUG ) stats.timeEnd( 'generate code' );\n\n\t\tif ( options.check ) {\n\t\t\tcheck( this.magicString, this.ast );\n\t\t}\n\n\t\tif ( DEBUG ) stats.time( 'generate map' );\n\t\tconst map = options.sourceMap !== false ? this.magicString.generateMap({\n\t\t\tfile: options.file,\n\t\t\tsource: options.source,\n\t\t\tincludeContent: options.includeContent !== false\n\t\t}) : null;\n\t\tif ( DEBUG ) stats.timeEnd( 'generate map' );\n\n\t\tif ( DEBUG && this.magicString.stats ) {\n\t\t\tObject.keys( this.magicString.stats ).forEach( stat => {\n\t\t\t\tstats[ stat ] = this.magicString.stats[ stat ];\n\t\t\t});\n\t\t}\n\n\t\treturn { code, map, stats };\n\t},\n\n\tfindNearest () {\n\t\treturn null;\n\t},\n\n\tfindScope () {\n\t\treturn this.body.scope;\n\t}\n};\n","export default class Stats {\n\tconstructor () {\n\t\tObject.defineProperties( this, {\n\t\t\tstartTimes: { value: {} }\n\t\t});\n\t}\n\n\ttime ( label ) {\n\t\tthis.startTimes[ label ] = process.hrtime();\n\t}\n\n\ttimeEnd ( label ) {\n\t\tconst elapsed = process.hrtime( this.startTimes[ label ] );\n\n\t\tif ( !this[ label ] ) this[ label ] = 0;\n\t\tthis[ label ] += elapsed[0] * 1e3 + elapsed[1] * 1e-6;\n\t}\n}\n","import { parse } from 'acorn';\nimport Program from './program/Program.js';\nimport Stats from './utils/Stats.js';\nimport getSnippet from './utils/getSnippet.js';\n\nexport function squash ( source, options = {} ) {\n\tlet ast;\n\n\tconst stats = DEBUG ? new Stats() : null;\n\n\ttry {\n\t\tif ( DEBUG ) stats.time( 'parse' );\n\t\tast = parse( source, {\n\t\t\tecmaVersion: 8,\n\t\t\tpreserveParens: true,\n\t\t\tsourceType: 'module'\n\t\t});\n\t\tif ( DEBUG ) stats.timeEnd( 'parse' );\n\t} catch ( err ) {\n\t\terr.snippet = getSnippet( source, err.loc );\n\t\tthrow err;\n\t}\n\n\treturn new Program( source, ast, stats ).export( options );\n}\n\nexport { version as VERSION } from '../package.json';\n"],"names":["arguments","toString","const","Node","this","let","super","c","varsToHoist","statement","alternateEnd","consequentEnd","replacement","value","invalidChars","calculators","Array","types","charToInteger","integerToChar","decode","ast","child","MagicString","Stats"],"mappings":";;;;;;AAAA;;AAEA,IAAI,aAAa,GAAG;EAClB,CAAC,EAAE,qNAAqN;EACxN,CAAC,EAAE,8CAA8C;EACjD,CAAC,EAAE,MAAM;EACT,MAAM,EAAE,wEAAwE;EAChF,UAAU,EAAE,gBAAgB;CAC7B,CAAA;;;;AAID,IAAI,oBAAoB,GAAG,6KAA6K,CAAA;;AAExM,IAAI,QAAQ,GAAG;EACb,CAAC,EAAE,oBAAoB;EACvB,CAAC,EAAE,oBAAoB,GAAG,0CAA0C;CACrE,CAAA;;;;;;;;;;AAUD,IAAI,4BAA4B,GAAG,qrIAAqrI,CAAA;AACxtI,IAAI,uBAAuB,GAAG,+gFAA+gF,CAAA;;AAE7iF,IAAI,uBAAuB,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,4BAA4B,GAAG,GAAG,CAAC,CAAA;AAClF,IAAI,kBAAkB,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,4BAA4B,GAAG,uBAAuB,GAAG,GAAG,CAAC,CAAA;;AAEvG,4BAA4B,GAAG,uBAAuB,GAAG,IAAI,CAAA;;;;;;;;;AAS7D,IAAI,0BAA0B,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;;;AAG1hC,IAAI,qBAAqB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAA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"}